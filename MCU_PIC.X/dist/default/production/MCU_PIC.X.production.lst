

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 04 21:00:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386                           
   387                           	psect	strings
   388  0574                     __pstrings:
   389  0574                     stringtab:
   390  0574                     __stringtab:
   391  0574                     stringcode:	
   392                           ;	String table - string pointers are 1 byte each
   393                           
   394  0574                     stringdir:
   395  0574  3005               	movlw	high stringdir
   396  0575  008A               	movwf	10
   397  0576  0804               	movf	4,w
   398  0577  0A84               	incf	4,f
   399  0578  0782               	addwf	2,f
   400  0579                     __stringbase:
   401  0579  3400               	retlw	0
   402  057A                     __end_of__stringtab:
   403  057A                     _dpowers:
   404  057A  3401               	retlw	1
   405  057B  3400               	retlw	0
   406  057C  340A               	retlw	10
   407  057D  3400               	retlw	0
   408  057E  3464               	retlw	100
   409  057F  3400               	retlw	0
   410  0580  34E8               	retlw	232
   411  0581  3403               	retlw	3
   412  0582  3410               	retlw	16
   413  0583  3427               	retlw	39
   414  0584                     __end_of_dpowers:
   415  0019                     _TXREG	set	25
   416  001A                     _RCREG	set	26
   417  0018                     _RCSTAbits	set	24
   418  0013                     _SSPBUF	set	19
   419  0014                     _SSPCON	set	20
   420  000C                     _PIR1bits	set	12
   421  000B                     _INTCONbits	set	11
   422  0007                     _PORTC	set	7
   423  0006                     _PORTB	set	6
   424  0006                     _PORTBbits	set	6
   425  0063                     _SSPIF	set	99
   426  005E                     _PEIE	set	94
   427  005F                     _GIE	set	95
   428  0065                     _RCIF	set	101
   429  0098                     _TXSTAbits	set	152
   430  0099                     _SPBRG	set	153
   431  0091                     _SSPCON2bits	set	145
   432  0087                     _TRISCbits	set	135
   433  0094                     _SSPSTAT	set	148
   434  0093                     _SSPADD	set	147
   435  0091                     _SSPCON2	set	145
   436  008C                     _PIE1bits	set	140
   437  0086                     _TRISB	set	134
   438  04C1                     _TRMT	set	1217
   439  0463                     _SSPIE	set	1123
   440  043C                     _TRISC4	set	1084
   441  043B                     _TRISC3	set	1083
   442  0189                     _ANSELH	set	393
   443  0188                     _ANSEL	set	392
   444  0584                     STR_1:
   445  0584  3425               	retlw	37	;'%'
   446  0585  3464               	retlw	100	;'d'
   447  0586  3400               	retlw	0
   448                           
   449                           	psect	cinit
   450  000F                     start_initialization:	
   451                           ; #config settings
   452                           
   453  000F                     __initialization:
   454                           
   455                           ; Clear objects allocated to COMMON
   456  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   457  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   458  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   459                           
   460                           ; Clear objects allocated to BANK0
   461  0012  1383               	bcf	3,7	;select IRP bank0
   462  0013  3020               	movlw	low __pbssBANK0
   463  0014  0084               	movwf	4
   464  0015  303F               	movlw	low (__pbssBANK0+31)
   465  0016  120A  118A  25C6  120A  118A  	fcall	clear_ram0
   466  001B                     end_of_initialization:	
   467                           ;End of C runtime variable initialization code
   468                           
   469  001B                     __end_of__initialization:
   470  001B  0183               	clrf	3
   471  001C  120A  118A  2909   	ljmp	_main	;jump to C main() function
   472                           
   473                           	psect	bssCOMMON
   474  0078                     __pbssCOMMON:
   475  0078                     _min:
   476  0078                     	ds	2
   477  007A                     _lecUSART:
   478  007A                     	ds	1
   479                           
   480                           	psect	bssBANK0
   481  0020                     __pbssBANK0:
   482  0020                     _year:
   483  0020                     	ds	2
   484  0022                     _mes:
   485  0022                     	ds	2
   486  0024                     _dia:
   487  0024                     	ds	2
   488  0026                     _hora:
   489  0026                     	ds	2
   490  0028                     _seg:
   491  0028                     	ds	2
   492  002A                     _segundos:
   493  002A                     	ds	1
   494  002B                     _BUFFER:
   495  002B                     	ds	20
   496                           
   497                           	psect	clrtext
   498  05C6                     clear_ram0:	
   499                           ;	Called with FSR containing the base address, and
   500                           ;	W with the last address+1
   501                           
   502  05C6  0064               	clrwdt	;clear the watchdog before getting into this loop
   503  05C7                     clrloop0:
   504  05C7  0180               	clrf	0	;clear RAM location pointed to by FSR
   505  05C8  0A84               	incf	4,f	;increment pointer
   506  05C9  0604               	xorwf	4,w	;XOR with final address
   507  05CA  1903               	btfsc	3,2	;have we reached the end yet?
   508  05CB  3400               	retlw	0	;all done for this memory range, return
   509  05CC  0604               	xorwf	4,w	;XOR again to restore value
   510  05CD  2DC7               	goto	clrloop0	;do the next byte
   511                           
   512                           	psect	cstackCOMMON
   513  0070                     __pcstackCOMMON:
   514  0070                     ?_Read_USART:
   515  0070                     ??_Read_USART:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_setup:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?__baudios:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_config_txsta:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_config_rcsta:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_set_tiempo:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_I2C_Master_Start:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_I2C_Master_Stop:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_bcd_a_dec:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_Write_USART_String:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_Write_USART:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_ISR:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ??_ISR:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_main:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_dec_a_bcd:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_I2C_Master_Wait:	
   561                           ; 1 bytes @ 0x0
   562                           
   563                           
   564                           ; 1 bytes @ 0x0
   565  0070                     	ds	3
   566  0073                     ??__baudios:
   567  0073                     ??_config_txsta:	
   568                           ; 1 bytes @ 0x3
   569                           
   570  0073                     ??_config_rcsta:	
   571                           ; 1 bytes @ 0x3
   572                           
   573  0073                     ??_I2C_Master_Start:	
   574                           ; 1 bytes @ 0x3
   575                           
   576  0073                     ??_I2C_Master_Stop:	
   577                           ; 1 bytes @ 0x3
   578                           
   579  0073                     ??_Write_USART:	
   580                           ; 1 bytes @ 0x3
   581                           
   582  0073                     ??_I2C_Master_Wait:	
   583                           ; 1 bytes @ 0x3
   584                           
   585  0073                     ?___bmul:	
   586                           ; 1 bytes @ 0x3
   587                           
   588  0073                     ??___lldiv:	
   589                           ; 1 bytes @ 0x3
   590                           
   591  0073                     ?_I2C_Master_Read:	
   592                           ; 1 bytes @ 0x3
   593                           
   594  0073                     ?___awdiv:	
   595                           ; 2 bytes @ 0x3
   596                           
   597  0073                     ?___awmod:	
   598                           ; 2 bytes @ 0x3
   599                           
   600  0073                     ?___lwdiv:	
   601                           ; 2 bytes @ 0x3
   602                           
   603  0073                     Write_USART@a:	
   604                           ; 2 bytes @ 0x3
   605                           
   606  0073                     ___bmul@multiplicand:	
   607                           ; 1 bytes @ 0x3
   608                           
   609  0073                     I2C_Master_Read@a:	
   610                           ; 1 bytes @ 0x3
   611                           
   612  0073                     ___awdiv@divisor:	
   613                           ; 2 bytes @ 0x3
   614                           
   615  0073                     ___awmod@divisor:	
   616                           ; 2 bytes @ 0x3
   617                           
   618  0073                     ___lwdiv@divisor:	
   619                           ; 2 bytes @ 0x3
   620                           
   621                           
   622                           ; 2 bytes @ 0x3
   623  0073                     	ds	1
   624  0074                     ??_Write_USART_String:
   625  0074                     ??_I2C_Master_Init:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ??___bmul:	
   629                           ; 1 bytes @ 0x4
   630                           
   631                           
   632                           ; 1 bytes @ 0x4
   633  0074                     	ds	1
   634  0075                     ??_I2C_Master_Read:
   635  0075                     Write_USART_String@a:	
   636                           ; 1 bytes @ 0x5
   637                           
   638  0075                     ___bmul@product:	
   639                           ; 1 bytes @ 0x5
   640                           
   641  0075                     ___awdiv@dividend:	
   642                           ; 1 bytes @ 0x5
   643                           
   644  0075                     ___awmod@dividend:	
   645                           ; 2 bytes @ 0x5
   646                           
   647  0075                     ___lwdiv@dividend:	
   648                           ; 2 bytes @ 0x5
   649                           
   650                           
   651                           ; 2 bytes @ 0x5
   652  0075                     	ds	1
   653  0076                     Write_USART_String@i:
   654  0076                     ___bmul@multiplier:	
   655                           ; 1 bytes @ 0x6
   656                           
   657                           
   658                           ; 1 bytes @ 0x6
   659  0076                     	ds	1
   660  0077                     ??___awdiv:
   661  0077                     ??___awmod:	
   662                           ; 1 bytes @ 0x7
   663                           
   664  0077                     ??___lwdiv:	
   665                           ; 1 bytes @ 0x7
   666                           
   667  0077                     bcd_a_dec@valor:	
   668                           ; 1 bytes @ 0x7
   669                           
   670                           
   671                           ; 1 bytes @ 0x7
   672  0077                     	ds	1
   673  0078                     ??_setup:
   674  0078                     ??_I2C_Master_Write:	
   675                           ; 1 bytes @ 0x8
   676                           
   677                           
   678                           	psect	cstackBANK0
   679  003F                     __pcstackBANK0:	
   680                           ; 1 bytes @ 0x8
   681                           
   682  003F                     ??_bcd_a_dec:
   683  003F                     ?___lldiv:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  003F                     ___awdiv@counter:	
   687                           ; 4 bytes @ 0x0
   688                           
   689  003F                     ___awmod@counter:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  003F                     ___lwdiv@counter:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  003F                     I2C_Master_Read@temp:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  003F                     ___lldiv@divisor:	
   699                           ; 2 bytes @ 0x0
   700                           
   701                           
   702                           ; 4 bytes @ 0x0
   703  003F                     	ds	1
   704  0040                     ___awdiv@sign:
   705  0040                     ___awmod@sign:	
   706                           ; 1 bytes @ 0x1
   707                           
   708  0040                     ___lwdiv@quotient:	
   709                           ; 1 bytes @ 0x1
   710                           
   711                           
   712                           ; 2 bytes @ 0x1
   713  0040                     	ds	1
   714  0041                     ___awdiv@quotient:
   715                           
   716                           ; 2 bytes @ 0x2
   717  0041                     	ds	1
   718  0042                     ?___lwmod:
   719  0042                     ___lwmod@divisor:	
   720                           ; 2 bytes @ 0x3
   721                           
   722                           
   723                           ; 2 bytes @ 0x3
   724  0042                     	ds	1
   725  0043                     ??_dec_a_bcd:
   726  0043                     ___lldiv@dividend:	
   727                           ; 1 bytes @ 0x4
   728                           
   729                           
   730                           ; 4 bytes @ 0x4
   731  0043                     	ds	1
   732  0044                     ___lwmod@dividend:
   733                           
   734                           ; 2 bytes @ 0x5
   735  0044                     	ds	2
   736  0046                     ??___lwmod:
   737                           
   738                           ; 1 bytes @ 0x7
   739  0046                     	ds	1
   740  0047                     ___lwmod@counter:
   741  0047                     ___lldiv@quotient:	
   742                           ; 1 bytes @ 0x8
   743                           
   744                           
   745                           ; 4 bytes @ 0x8
   746  0047                     	ds	1
   747  0048                     ?_sprintf:
   748  0048                     dec_a_bcd@valor:	
   749                           ; 2 bytes @ 0x9
   750                           
   751  0048                     sprintf@f:	
   752                           ; 1 bytes @ 0x9
   753                           
   754                           
   755                           ; 1 bytes @ 0x9
   756  0048                     	ds	1
   757  0049                     ?_I2C_Master_Write:
   758  0049                     I2C_Master_Write@d:	
   759                           ; 1 bytes @ 0xA
   760                           
   761                           
   762                           ; 2 bytes @ 0xA
   763  0049                     	ds	2
   764  004B                     ??_set_tiempo:
   765  004B                     ??_sprintf:	
   766                           ; 1 bytes @ 0xC
   767                           
   768  004B                     ___lldiv@counter:	
   769                           ; 1 bytes @ 0xC
   770                           
   771                           
   772                           ; 1 bytes @ 0xC
   773  004B                     	ds	1
   774  004C                     ?_I2C_Master_Init:
   775  004C                     I2C_Master_Init@c:	
   776                           ; 1 bytes @ 0xD
   777                           
   778                           
   779                           ; 4 bytes @ 0xD
   780  004C                     	ds	2
   781  004E                     sprintf@ap:
   782                           
   783                           ; 1 bytes @ 0xF
   784  004E                     	ds	1
   785  004F                     sprintf@flag:
   786                           
   787                           ; 1 bytes @ 0x10
   788  004F                     	ds	1
   789  0050                     sprintf@prec:
   790                           
   791                           ; 1 bytes @ 0x11
   792  0050                     	ds	1
   793  0051                     sprintf@val:
   794                           
   795                           ; 2 bytes @ 0x12
   796  0051                     	ds	2
   797  0053                     sprintf@sp:
   798                           
   799                           ; 1 bytes @ 0x14
   800  0053                     	ds	1
   801  0054                     sprintf@c:
   802                           
   803                           ; 1 bytes @ 0x15
   804  0054                     	ds	1
   805  0055                     ??_main:
   806                           
   807                           ; 1 bytes @ 0x16
   808  0055                     	ds	3
   809                           
   810                           	psect	maintext
   811  0109                     __pmaintext:	
   812 ;;
   813 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   814 ;;
   815 ;; *************** function _main *****************
   816 ;; Defined at:
   817 ;;		line 81 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : B00/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0
   833 ;;      Temps:          0       3       0       0       0
   834 ;;      Totals:         0       3       0       0       0
   835 ;;Total ram usage:        3 bytes
   836 ;; Hardware stack levels required when called:    5
   837 ;; This function calls:
   838 ;;		_I2C_Master_Read
   839 ;;		_I2C_Master_Start
   840 ;;		_I2C_Master_Stop
   841 ;;		_I2C_Master_Write
   842 ;;		_Write_USART
   843 ;;		_Write_USART_String
   844 ;;		__baudios
   845 ;;		_bcd_a_dec
   846 ;;		_config_rcsta
   847 ;;		_config_txsta
   848 ;;		_set_tiempo
   849 ;;		_setup
   850 ;;		_sprintf
   851 ;; This function is called by:
   852 ;;		Startup code after reset
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _main
   858  0109                     _main:
   859  0109                     l1842:	
   860                           ;incstack = 0
   861                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   862                           
   863                           
   864                           ;main.c: 82: uint8_t dec_a_bcd (uint8_t valor){
   865  0109  120A  118A  2504  120A  118A  	fcall	_setup
   866                           
   867                           ;main.c: 83:     return(((valor/10) << 4) + (valor % 10));
   868  010E  120A  118A  25DE  120A  118A  	fcall	__baudios
   869  0113                     l1844:
   870                           
   871                           ;main.c: 84: }
   872  0113  120A  118A  25AA  120A  118A  	fcall	_config_txsta
   873  0118                     l1846:
   874                           
   875                           ;main.c: 85: 
   876  0118  120A  118A  25CE  120A  118A  	fcall	_config_rcsta
   877                           
   878                           ;main.c: 86: void set_tiempo (void){
   879  011D  120A  118A  21D0  120A  118A  	fcall	_set_tiempo
   880  0122                     l87:	
   881                           ;main.c: 87:     I2C_Master_Start();
   882                           
   883                           
   884                           ;main.c: 88:     I2C_Master_Write(0xD0);
   885  0122  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Start
   886                           
   887                           ;main.c: 89:     I2C_Master_Write(0);
   888  0127  30D0               	movlw	208
   889  0128  1283               	bcf	3,5	;RP0=0, select bank0
   890  0129  1303               	bcf	3,6	;RP1=0, select bank0
   891  012A  00C9               	movwf	I2C_Master_Write@d
   892  012B  3000               	movlw	0
   893  012C  00CA               	movwf	I2C_Master_Write@d+1
   894  012D  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
   895                           
   896                           ;main.c: 90:     I2C_Master_Write(dec_a_bcd(seg));
   897  0132  3000               	movlw	0
   898  0133  1283               	bcf	3,5	;RP0=0, select bank0
   899  0134  1303               	bcf	3,6	;RP1=0, select bank0
   900  0135  00C9               	movwf	I2C_Master_Write@d
   901  0136  00CA               	movwf	I2C_Master_Write@d+1
   902  0137  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
   903                           
   904                           ;main.c: 91:     I2C_Master_Write(dec_a_bcd(min));
   905  013C  120A  118A  25B4  120A  118A  	fcall	_I2C_Master_Stop
   906                           
   907                           ;main.c: 93:     I2C_Master_Write (1);
   908  0141  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Start
   909                           
   910                           ;main.c: 94:     I2C_Master_Write(dec_a_bcd(dia));
   911  0146  30D1               	movlw	209
   912  0147  1283               	bcf	3,5	;RP0=0, select bank0
   913  0148  1303               	bcf	3,6	;RP1=0, select bank0
   914  0149  00C9               	movwf	I2C_Master_Write@d
   915  014A  3000               	movlw	0
   916  014B  00CA               	movwf	I2C_Master_Write@d+1
   917  014C  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
   918                           
   919                           ;main.c: 95:     I2C_Master_Write(dec_a_bcd(mes));
   920  0151  3001               	movlw	1
   921  0152  00F3               	movwf	I2C_Master_Read@a
   922  0153  3000               	movlw	0
   923  0154  00F4               	movwf	I2C_Master_Read@a+1
   924  0155  120A  118A  24D4  120A  118A  	fcall	_I2C_Master_Read
   925  015A  0874               	movf	?_I2C_Master_Read+1,w
   926  015B  1283               	bcf	3,5	;RP0=0, select bank0
   927  015C  1303               	bcf	3,6	;RP1=0, select bank0
   928  015D  00A9               	movwf	_seg+1
   929  015E  0873               	movf	?_I2C_Master_Read,w
   930  015F  00A8               	movwf	_seg
   931                           
   932                           ;main.c: 96:     I2C_Master_Write(dec_a_bcd(year));
   933  0160  3001               	movlw	1
   934  0161  00F3               	movwf	I2C_Master_Read@a
   935  0162  3000               	movlw	0
   936  0163  00F4               	movwf	I2C_Master_Read@a+1
   937  0164  120A  118A  24D4  120A  118A  	fcall	_I2C_Master_Read
   938                           
   939                           ;main.c: 97:     I2C_Master_Stop();
   940  0169  120A  118A  25B4  120A  118A  	fcall	_I2C_Master_Stop
   941                           
   942                           ;main.c: 99: }
   943  016E  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Start
   944                           
   945                           ;main.c: 100: 
   946  0173  30D1               	movlw	209
   947  0174  1283               	bcf	3,5	;RP0=0, select bank0
   948  0175  1303               	bcf	3,6	;RP1=0, select bank0
   949  0176  00C9               	movwf	I2C_Master_Write@d
   950  0177  3000               	movlw	0
   951  0178  00CA               	movwf	I2C_Master_Write@d+1
   952  0179  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
   953                           
   954                           ;main.c: 101: 
   955  017E  3000               	movlw	0
   956  017F  1283               	bcf	3,5	;RP0=0, select bank0
   957  0180  1303               	bcf	3,6	;RP1=0, select bank0
   958  0181  00C9               	movwf	I2C_Master_Write@d
   959  0182  00CA               	movwf	I2C_Master_Write@d+1
   960  0183  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
   961                           
   962                           ;main.c: 102: 
   963  0188  120A  118A  25B4  120A  118A  	fcall	_I2C_Master_Stop
   964  018D                     l1848:
   965                           
   966                           ;main.c: 103: 
   967  018D  3003               	movlw	3
   968  018E  1283               	bcf	3,5	;RP0=0, select bank0
   969  018F  1303               	bcf	3,6	;RP1=0, select bank0
   970  0190  00D7               	movwf	??_main+2
   971  0191  3008               	movlw	8
   972  0192  00D6               	movwf	??_main+1
   973  0193  3076               	movlw	118
   974  0194  00D5               	movwf	??_main
   975  0195                     u1657:
   976  0195  0BD5               	decfsz	??_main,f
   977  0196  2995               	goto	u1657
   978  0197  0BD6               	decfsz	??_main+1,f
   979  0198  2995               	goto	u1657
   980  0199  0BD7               	decfsz	??_main+2,f
   981  019A  2995               	goto	u1657
   982  019B  0000               	nop
   983  019C                     l1850:
   984                           
   985                           ;main.c: 105:     ANSEL = 0;
   986  019C  1283               	bcf	3,5	;RP0=0, select bank0
   987  019D  1303               	bcf	3,6	;RP1=0, select bank0
   988  019E  0828               	movf	_seg,w
   989  019F  120A  118A  2543  120A  118A  	fcall	_bcd_a_dec
   990  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   991  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   992  01A6  00D5               	movwf	??_main
   993  01A7  0855               	movf	??_main,w
   994  01A8  00AA               	movwf	_segundos
   995  01A9                     l1852:
   996                           
   997                           ;main.c: 106:     ANSELH = 0;
   998  01A9  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   999  01AA  00D5               	movwf	??_main
  1000  01AB  0855               	movf	??_main,w
  1001  01AC  00C8               	movwf	sprintf@f
  1002  01AD  082A               	movf	_segundos,w
  1003  01AE  00D6               	movwf	??_main+1
  1004  01AF  01D7               	clrf	??_main+2
  1005  01B0  0856               	movf	??_main+1,w
  1006  01B1  00C9               	movwf	?_sprintf+1
  1007  01B2  0857               	movf	??_main+2,w
  1008  01B3  00CA               	movwf	?_sprintf+2
  1009  01B4  302B               	movlw	(low (_BUFFER| 0))& (0+255)
  1010  01B5  120A  118A  201F  120A  118A  	fcall	_sprintf
  1011  01BA                     l1854:
  1012                           
  1013                           ;main.c: 107:     TRISB = 0;
  1014  01BA  302B               	movlw	(low (_BUFFER| 0))& (0+255)
  1015  01BB  120A  118A  2525  120A  118A  	fcall	_Write_USART_String
  1016  01C0                     l1856:
  1017                           
  1018                           ;main.c: 108:     PORTB = 0;
  1019  01C0  300D               	movlw	13
  1020  01C1  120A  118A  2594  120A  118A  	fcall	_Write_USART
  1021  01C6                     l1858:
  1022                           
  1023                           ;main.c: 109:     PORTC = 0;
  1024  01C6  300A               	movlw	10
  1025  01C7  120A  118A  2594  120A  118A  	fcall	_Write_USART
  1026  01CC  2922               	goto	l87
  1027  01CD  120A  118A  280C   	ljmp	start
  1028  01D0                     __end_of_main:
  1029                           
  1030                           	psect	text1
  1031  001F                     __ptext1:	
  1032 ;; *************** function _sprintf *****************
  1033 ;; Defined at:
  1034 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  sp              1    wreg     PTR unsigned char 
  1037 ;;		 -> BUFFER(20), 
  1038 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1039 ;;		 -> STR_1(3), 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1042 ;;		 -> BUFFER(20), 
  1043 ;;  tmpval          4    0        struct .
  1044 ;;  val             2   18[BANK0 ] unsigned int 
  1045 ;;  cp              2    0        PTR const unsigned char 
  1046 ;;  len             2    0        unsigned int 
  1047 ;;  c               1   21[BANK0 ] unsigned char 
  1048 ;;  prec            1   17[BANK0 ] char 
  1049 ;;  flag            1   16[BANK0 ] unsigned char 
  1050 ;;  ap              1   15[BANK0 ] PTR void [1]
  1051 ;;		 -> ?_sprintf(2), 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  2    9[BANK0 ] int 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         0       3       0       0       0
  1062 ;;      Locals:         0       7       0       0       0
  1063 ;;      Temps:          0       3       0       0       0
  1064 ;;      Totals:         0      13       0       0       0
  1065 ;;Total ram usage:       13 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    3
  1068 ;; This function calls:
  1069 ;;		___lwdiv
  1070 ;;		___lwmod
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _sprintf
  1078  001F                     _sprintf:
  1079                           
  1080                           ;incstack = 0
  1081                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1082                           ;sprintf@sp stored from wreg
  1083  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0021  00D3               	movwf	sprintf@sp
  1086  0022                     l1780:
  1087                           
  1088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1089  0022  3049               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1090  0023  00CB               	movwf	??_sprintf
  1091  0024  084B               	movf	??_sprintf,w
  1092  0025  00CE               	movwf	sprintf@ap
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1095  0026  28F2               	goto	l1832
  1096  0027                     l1782:
  1097                           
  1098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1099  0027  3025               	movlw	37
  1100  0028  0654               	xorwf	sprintf@c,w
  1101  0029  1903               	btfsc	3,2
  1102  002A  282C               	goto	u1581
  1103  002B  282D               	goto	u1580
  1104  002C                     u1581:
  1105  002C  2839               	goto	l1788
  1106  002D                     u1580:
  1107  002D                     l1784:
  1108                           
  1109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1110  002D  0854               	movf	sprintf@c,w
  1111  002E  00CB               	movwf	??_sprintf
  1112  002F  0853               	movf	sprintf@sp,w
  1113  0030  0084               	movwf	4
  1114  0031  084B               	movf	??_sprintf,w
  1115  0032  1383               	bcf	3,7	;select IRP bank0
  1116  0033  0080               	movwf	0
  1117  0034                     l1786:
  1118  0034  3001               	movlw	1
  1119  0035  00CB               	movwf	??_sprintf
  1120  0036  084B               	movf	??_sprintf,w
  1121  0037  07D3               	addwf	sprintf@sp,f
  1122                           
  1123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1124  0038  28F2               	goto	l1832
  1125  0039                     l1788:
  1126                           
  1127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1128  0039  01CF               	clrf	sprintf@flag
  1129  003A                     l1792:	
  1130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1131                           
  1132  003A  3001               	movlw	1
  1133  003B  07C8               	addwf	sprintf@f,f
  1134  003C  30FF               	movlw	-1
  1135  003D  0748               	addwf	sprintf@f,w
  1136  003E  0084               	movwf	4
  1137  003F  120A  118A  2574  120A  118A  	fcall	stringdir
  1138  0044  00D4               	movwf	sprintf@c
  1139  0045  00CB               	movwf	??_sprintf
  1140  0046  01CC               	clrf	??_sprintf+1
  1141                           
  1142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1143                           ; Switch size 1, requested type "simple"
  1144                           ; Number of cases is 1, Range of values is 0 to 0
  1145                           ; switch strategies available:
  1146                           ; Name         Instructions Cycles
  1147                           ; simple_byte            4     3 (average)
  1148                           ; direct_byte           11     8 (fixed)
  1149                           ; jumptable            260     6 (fixed)
  1150                           ;	Chosen strategy is simple_byte
  1151  0047  084C               	movf	??_sprintf+1,w
  1152  0048  3A00               	xorlw	0	; case 0
  1153  0049  1903               	skipnz
  1154  004A  284C               	goto	l1884
  1155  004B  28F2               	goto	l1832
  1156  004C                     l1884:
  1157                           
  1158                           ; Switch size 1, requested type "simple"
  1159                           ; Number of cases is 3, Range of values is 0 to 105
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte           10     6 (average)
  1163                           ; jumptable            260     6 (fixed)
  1164                           ;	Chosen strategy is simple_byte
  1165  004C  084B               	movf	??_sprintf,w
  1166  004D  3A00               	xorlw	0	; case 0
  1167  004E  1903               	skipnz
  1168  004F  2904               	goto	l1834
  1169  0050  3A64               	xorlw	100	; case 100
  1170  0051  1903               	skipnz
  1171  0052  2857               	goto	l1794
  1172  0053  3A0D               	xorlw	13	; case 105
  1173  0054  1903               	skipnz
  1174  0055  2857               	goto	l1794
  1175  0056  28F2               	goto	l1832
  1176  0057                     l1794:
  1177                           
  1178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1179  0057  084E               	movf	sprintf@ap,w
  1180  0058  0084               	movwf	4
  1181  0059  1383               	bcf	3,7	;select IRP bank0
  1182  005A  0800               	movf	0,w
  1183  005B  00D1               	movwf	sprintf@val
  1184  005C  0A84               	incf	4,f
  1185  005D  0800               	movf	0,w
  1186  005E  00D2               	movwf	sprintf@val+1
  1187  005F                     l1796:
  1188  005F  3002               	movlw	2
  1189  0060  00CB               	movwf	??_sprintf
  1190  0061  084B               	movf	??_sprintf,w
  1191  0062  07CE               	addwf	sprintf@ap,f
  1192  0063                     l1798:
  1193                           
  1194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1195  0063  1FD2               	btfss	sprintf@val+1,7
  1196  0064  2866               	goto	u1591
  1197  0065  2867               	goto	u1590
  1198  0066                     u1591:
  1199  0066  2870               	goto	l1804
  1200  0067                     u1590:
  1201  0067                     l1800:
  1202                           
  1203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1204  0067  3003               	movlw	3
  1205  0068  00CB               	movwf	??_sprintf
  1206  0069  084B               	movf	??_sprintf,w
  1207  006A  04CF               	iorwf	sprintf@flag,f
  1208  006B                     l1802:
  1209                           
  1210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1211  006B  09D1               	comf	sprintf@val,f
  1212  006C  09D2               	comf	sprintf@val+1,f
  1213  006D  0AD1               	incf	sprintf@val,f
  1214  006E  1903               	skipnz
  1215  006F  0AD2               	incf	sprintf@val+1,f
  1216  0070                     l1804:
  1217                           
  1218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1219  0070  01D4               	clrf	sprintf@c
  1220  0071  0AD4               	incf	sprintf@c,f
  1221  0072                     l1810:
  1222                           
  1223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1224  0072  0854               	movf	sprintf@c,w
  1225  0073  00CB               	movwf	??_sprintf
  1226  0074  074B               	addwf	??_sprintf,w
  1227  0075  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1228  0076  0084               	movwf	4
  1229  0077  120A  118A  2574  120A  118A  	fcall	stringdir
  1230  007C  00CC               	movwf	??_sprintf+1
  1231  007D  120A  118A  2574  120A  118A  	fcall	stringdir
  1232  0082  00CD               	movwf	??_sprintf+2
  1233  0083  084D               	movf	??_sprintf+2,w
  1234  0084  0252               	subwf	sprintf@val+1,w
  1235  0085  1D03               	skipz
  1236  0086  2889               	goto	u1605
  1237  0087  084C               	movf	??_sprintf+1,w
  1238  0088  0251               	subwf	sprintf@val,w
  1239  0089                     u1605:
  1240  0089  1803               	skipnc
  1241  008A  288C               	goto	u1601
  1242  008B  288D               	goto	u1600
  1243  008C                     u1601:
  1244  008C  288E               	goto	l1814
  1245  008D                     u1600:
  1246  008D  2898               	goto	l1816
  1247  008E                     l1814:
  1248  008E  3001               	movlw	1
  1249  008F  00CB               	movwf	??_sprintf
  1250  0090  084B               	movf	??_sprintf,w
  1251  0091  07D4               	addwf	sprintf@c,f
  1252  0092  3005               	movlw	5
  1253  0093  0654               	xorwf	sprintf@c,w
  1254  0094  1D03               	btfss	3,2
  1255  0095  2897               	goto	u1611
  1256  0096  2898               	goto	u1610
  1257  0097                     u1611:
  1258  0097  2872               	goto	l1810
  1259  0098                     u1610:
  1260  0098                     l1816:
  1261                           
  1262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1263  0098  084F               	movf	sprintf@flag,w
  1264  0099  3903               	andlw	3
  1265  009A  1903               	btfsc	3,2
  1266  009B  289D               	goto	u1621
  1267  009C  289E               	goto	u1620
  1268  009D                     u1621:
  1269  009D  28A9               	goto	l1822
  1270  009E                     u1620:
  1271  009E                     l1818:
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1274  009E  302D               	movlw	45
  1275  009F  00CB               	movwf	??_sprintf
  1276  00A0  0853               	movf	sprintf@sp,w
  1277  00A1  0084               	movwf	4
  1278  00A2  084B               	movf	??_sprintf,w
  1279  00A3  1383               	bcf	3,7	;select IRP bank0
  1280  00A4  0080               	movwf	0
  1281  00A5                     l1820:
  1282  00A5  3001               	movlw	1
  1283  00A6  00CB               	movwf	??_sprintf
  1284  00A7  084B               	movf	??_sprintf,w
  1285  00A8  07D3               	addwf	sprintf@sp,f
  1286  00A9                     l1822:
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1289  00A9  0854               	movf	sprintf@c,w
  1290  00AA  00CB               	movwf	??_sprintf
  1291  00AB  084B               	movf	??_sprintf,w
  1292  00AC  00D0               	movwf	sprintf@prec
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1295  00AD  28E9               	goto	l1830
  1296  00AE                     l1824:
  1297                           
  1298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1299  00AE  300A               	movlw	10
  1300  00AF  00C2               	movwf	___lwmod@divisor
  1301  00B0  3000               	movlw	0
  1302  00B1  00C3               	movwf	___lwmod@divisor+1
  1303  00B2  0850               	movf	sprintf@prec,w
  1304  00B3  00CB               	movwf	??_sprintf
  1305  00B4  074B               	addwf	??_sprintf,w
  1306  00B5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1307  00B6  0084               	movwf	4
  1308  00B7  120A  118A  2574  120A  118A  	fcall	stringdir
  1309  00BC  00F3               	movwf	___lwdiv@divisor
  1310  00BD  120A  118A  2574  120A  118A  	fcall	stringdir
  1311  00C2  00F4               	movwf	___lwdiv@divisor+1
  1312  00C3  0852               	movf	sprintf@val+1,w
  1313  00C4  00F6               	movwf	___lwdiv@dividend+1
  1314  00C5  0851               	movf	sprintf@val,w
  1315  00C6  00F5               	movwf	___lwdiv@dividend
  1316  00C7  120A  118A  23AA  120A  118A  	fcall	___lwdiv
  1317  00CC  0874               	movf	?___lwdiv+1,w
  1318  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1319  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1320  00CF  00C5               	movwf	___lwmod@dividend+1
  1321  00D0  0873               	movf	?___lwdiv,w
  1322  00D1  00C4               	movwf	___lwmod@dividend
  1323  00D2  120A  118A  23F0  120A  118A  	fcall	___lwmod
  1324  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1325  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1326  00D9  0842               	movf	?___lwmod,w
  1327  00DA  3E30               	addlw	48
  1328  00DB  00CC               	movwf	??_sprintf+1
  1329  00DC  084C               	movf	??_sprintf+1,w
  1330  00DD  00D4               	movwf	sprintf@c
  1331  00DE                     l1826:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1334  00DE  0854               	movf	sprintf@c,w
  1335  00DF  00CB               	movwf	??_sprintf
  1336  00E0  0853               	movf	sprintf@sp,w
  1337  00E1  0084               	movwf	4
  1338  00E2  084B               	movf	??_sprintf,w
  1339  00E3  1383               	bcf	3,7	;select IRP bank0
  1340  00E4  0080               	movwf	0
  1341  00E5                     l1828:
  1342  00E5  3001               	movlw	1
  1343  00E6  00CB               	movwf	??_sprintf
  1344  00E7  084B               	movf	??_sprintf,w
  1345  00E8  07D3               	addwf	sprintf@sp,f
  1346  00E9                     l1830:
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1349  00E9  30FF               	movlw	255
  1350  00EA  00CB               	movwf	??_sprintf
  1351  00EB  084B               	movf	??_sprintf,w
  1352  00EC  07D0               	addwf	sprintf@prec,f
  1353  00ED  0A50               	incf	sprintf@prec,w
  1354  00EE  1D03               	btfss	3,2
  1355  00EF  28F1               	goto	u1631
  1356  00F0  28F2               	goto	u1630
  1357  00F1                     u1631:
  1358  00F1  28AE               	goto	l1824
  1359  00F2                     u1630:
  1360  00F2                     l1832:
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1363  00F2  3001               	movlw	1
  1364  00F3  07C8               	addwf	sprintf@f,f
  1365  00F4  30FF               	movlw	-1
  1366  00F5  0748               	addwf	sprintf@f,w
  1367  00F6  0084               	movwf	4
  1368  00F7  120A  118A  2574  120A  118A  	fcall	stringdir
  1369  00FC  00CB               	movwf	??_sprintf
  1370  00FD  084B               	movf	??_sprintf,w
  1371  00FE  00D4               	movwf	sprintf@c
  1372  00FF  0854               	movf	sprintf@c,w
  1373  0100  1D03               	btfss	3,2
  1374  0101  2903               	goto	u1641
  1375  0102  2904               	goto	u1640
  1376  0103                     u1641:
  1377  0103  2827               	goto	l1782
  1378  0104                     u1640:
  1379  0104                     l1834:
  1380                           
  1381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1382  0104  0853               	movf	sprintf@sp,w
  1383  0105  0084               	movwf	4
  1384  0106  1383               	bcf	3,7	;select IRP bank0
  1385  0107  0180               	clrf	0
  1386  0108                     l308:
  1387  0108  0008               	return
  1388  0109                     __end_of_sprintf:
  1389                           
  1390                           	psect	text2
  1391  03F0                     __ptext2:	
  1392 ;; *************** function ___lwmod *****************
  1393 ;; Defined at:
  1394 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  divisor         2    3[BANK0 ] unsigned int 
  1397 ;;  dividend        2    5[BANK0 ] unsigned int 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  counter         1    8[BANK0 ] unsigned char 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2    3[BANK0 ] unsigned int 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1409 ;;      Params:         0       4       0       0       0
  1410 ;;      Locals:         0       1       0       0       0
  1411 ;;      Temps:          0       1       0       0       0
  1412 ;;      Totals:         0       6       0       0       0
  1413 ;;Total ram usage:        6 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    2
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_sprintf
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function ___lwmod
  1425  03F0                     ___lwmod:
  1426  03F0                     l1402:	
  1427                           ;incstack = 0
  1428                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1429                           
  1430  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1431  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1432  03F2  0842               	movf	___lwmod@divisor,w
  1433  03F3  0443               	iorwf	___lwmod@divisor+1,w
  1434  03F4  1903               	btfsc	3,2
  1435  03F5  2BF7               	goto	u1031
  1436  03F6  2BF8               	goto	u1030
  1437  03F7                     u1031:
  1438  03F7  2C27               	goto	l1420
  1439  03F8                     u1030:
  1440  03F8                     l1404:
  1441  03F8  01C7               	clrf	___lwmod@counter
  1442  03F9  0AC7               	incf	___lwmod@counter,f
  1443  03FA  2C06               	goto	l1410
  1444  03FB                     l1406:
  1445  03FB  3001               	movlw	1
  1446  03FC                     u1045:
  1447  03FC  1003               	clrc
  1448  03FD  0DC2               	rlf	___lwmod@divisor,f
  1449  03FE  0DC3               	rlf	___lwmod@divisor+1,f
  1450  03FF  3EFF               	addlw	-1
  1451  0400  1D03               	skipz
  1452  0401  2BFC               	goto	u1045
  1453  0402                     l1408:
  1454  0402  3001               	movlw	1
  1455  0403  00C6               	movwf	??___lwmod
  1456  0404  0846               	movf	??___lwmod,w
  1457  0405  07C7               	addwf	___lwmod@counter,f
  1458  0406                     l1410:
  1459  0406  1FC3               	btfss	___lwmod@divisor+1,7
  1460  0407  2C09               	goto	u1051
  1461  0408  2C0A               	goto	u1050
  1462  0409                     u1051:
  1463  0409  2BFB               	goto	l1406
  1464  040A                     u1050:
  1465  040A                     l1412:
  1466  040A  0843               	movf	___lwmod@divisor+1,w
  1467  040B  0245               	subwf	___lwmod@dividend+1,w
  1468  040C  1D03               	skipz
  1469  040D  2C10               	goto	u1065
  1470  040E  0842               	movf	___lwmod@divisor,w
  1471  040F  0244               	subwf	___lwmod@dividend,w
  1472  0410                     u1065:
  1473  0410  1C03               	skipc
  1474  0411  2C13               	goto	u1061
  1475  0412  2C14               	goto	u1060
  1476  0413                     u1061:
  1477  0413  2C1A               	goto	l1416
  1478  0414                     u1060:
  1479  0414                     l1414:
  1480  0414  0842               	movf	___lwmod@divisor,w
  1481  0415  02C4               	subwf	___lwmod@dividend,f
  1482  0416  0843               	movf	___lwmod@divisor+1,w
  1483  0417  1C03               	skipc
  1484  0418  03C5               	decf	___lwmod@dividend+1,f
  1485  0419  02C5               	subwf	___lwmod@dividend+1,f
  1486  041A                     l1416:
  1487  041A  3001               	movlw	1
  1488  041B                     u1075:
  1489  041B  1003               	clrc
  1490  041C  0CC3               	rrf	___lwmod@divisor+1,f
  1491  041D  0CC2               	rrf	___lwmod@divisor,f
  1492  041E  3EFF               	addlw	-1
  1493  041F  1D03               	skipz
  1494  0420  2C1B               	goto	u1075
  1495  0421                     l1418:
  1496  0421  3001               	movlw	1
  1497  0422  02C7               	subwf	___lwmod@counter,f
  1498  0423  1D03               	btfss	3,2
  1499  0424  2C26               	goto	u1081
  1500  0425  2C27               	goto	u1080
  1501  0426                     u1081:
  1502  0426  2C0A               	goto	l1412
  1503  0427                     u1080:
  1504  0427                     l1420:
  1505  0427  0845               	movf	___lwmod@dividend+1,w
  1506  0428  00C3               	movwf	?___lwmod+1
  1507  0429  0844               	movf	___lwmod@dividend,w
  1508  042A  00C2               	movwf	?___lwmod
  1509  042B                     l594:
  1510  042B  0008               	return
  1511  042C                     __end_of___lwmod:
  1512                           
  1513                           	psect	text3
  1514  03AA                     __ptext3:	
  1515 ;; *************** function ___lwdiv *****************
  1516 ;; Defined at:
  1517 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  divisor         2    3[COMMON] unsigned int 
  1520 ;;  dividend        2    5[COMMON] unsigned int 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  quotient        2    1[BANK0 ] unsigned int 
  1523 ;;  counter         1    0[BANK0 ] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  2    3[COMMON] unsigned int 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         4       0       0       0       0
  1534 ;;      Locals:         0       3       0       0       0
  1535 ;;      Temps:          1       0       0       0       0
  1536 ;;      Totals:         5       3       0       0       0
  1537 ;;Total ram usage:        8 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    2
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_sprintf
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function ___lwdiv
  1549  03AA                     ___lwdiv:
  1550  03AA                     l1718:	
  1551                           ;incstack = 0
  1552                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1553                           
  1554  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1555  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1556  03AC  01C0               	clrf	___lwdiv@quotient
  1557  03AD  01C1               	clrf	___lwdiv@quotient+1
  1558  03AE                     l1720:
  1559  03AE  0873               	movf	___lwdiv@divisor,w
  1560  03AF  0474               	iorwf	___lwdiv@divisor+1,w
  1561  03B0  1903               	btfsc	3,2
  1562  03B1  2BB3               	goto	u1491
  1563  03B2  2BB4               	goto	u1490
  1564  03B3                     u1491:
  1565  03B3  2BEB               	goto	l1740
  1566  03B4                     u1490:
  1567  03B4                     l1722:
  1568  03B4  01BF               	clrf	___lwdiv@counter
  1569  03B5  0ABF               	incf	___lwdiv@counter,f
  1570  03B6  2BC2               	goto	l1728
  1571  03B7                     l1724:
  1572  03B7  3001               	movlw	1
  1573  03B8                     u1505:
  1574  03B8  1003               	clrc
  1575  03B9  0DF3               	rlf	___lwdiv@divisor,f
  1576  03BA  0DF4               	rlf	___lwdiv@divisor+1,f
  1577  03BB  3EFF               	addlw	-1
  1578  03BC  1D03               	skipz
  1579  03BD  2BB8               	goto	u1505
  1580  03BE                     l1726:
  1581  03BE  3001               	movlw	1
  1582  03BF  00F7               	movwf	??___lwdiv
  1583  03C0  0877               	movf	??___lwdiv,w
  1584  03C1  07BF               	addwf	___lwdiv@counter,f
  1585  03C2                     l1728:
  1586  03C2  1FF4               	btfss	___lwdiv@divisor+1,7
  1587  03C3  2BC5               	goto	u1511
  1588  03C4  2BC6               	goto	u1510
  1589  03C5                     u1511:
  1590  03C5  2BB7               	goto	l1724
  1591  03C6                     u1510:
  1592  03C6                     l1730:
  1593  03C6  3001               	movlw	1
  1594  03C7                     u1525:
  1595  03C7  1003               	clrc
  1596  03C8  0DC0               	rlf	___lwdiv@quotient,f
  1597  03C9  0DC1               	rlf	___lwdiv@quotient+1,f
  1598  03CA  3EFF               	addlw	-1
  1599  03CB  1D03               	skipz
  1600  03CC  2BC7               	goto	u1525
  1601  03CD  0874               	movf	___lwdiv@divisor+1,w
  1602  03CE  0276               	subwf	___lwdiv@dividend+1,w
  1603  03CF  1D03               	skipz
  1604  03D0  2BD3               	goto	u1535
  1605  03D1  0873               	movf	___lwdiv@divisor,w
  1606  03D2  0275               	subwf	___lwdiv@dividend,w
  1607  03D3                     u1535:
  1608  03D3  1C03               	skipc
  1609  03D4  2BD6               	goto	u1531
  1610  03D5  2BD7               	goto	u1530
  1611  03D6                     u1531:
  1612  03D6  2BDE               	goto	l1736
  1613  03D7                     u1530:
  1614  03D7                     l1732:
  1615  03D7  0873               	movf	___lwdiv@divisor,w
  1616  03D8  02F5               	subwf	___lwdiv@dividend,f
  1617  03D9  0874               	movf	___lwdiv@divisor+1,w
  1618  03DA  1C03               	skipc
  1619  03DB  03F6               	decf	___lwdiv@dividend+1,f
  1620  03DC  02F6               	subwf	___lwdiv@dividend+1,f
  1621  03DD                     l1734:
  1622  03DD  1440               	bsf	___lwdiv@quotient,0
  1623  03DE                     l1736:
  1624  03DE  3001               	movlw	1
  1625  03DF                     u1545:
  1626  03DF  1003               	clrc
  1627  03E0  0CF4               	rrf	___lwdiv@divisor+1,f
  1628  03E1  0CF3               	rrf	___lwdiv@divisor,f
  1629  03E2  3EFF               	addlw	-1
  1630  03E3  1D03               	skipz
  1631  03E4  2BDF               	goto	u1545
  1632  03E5                     l1738:
  1633  03E5  3001               	movlw	1
  1634  03E6  02BF               	subwf	___lwdiv@counter,f
  1635  03E7  1D03               	btfss	3,2
  1636  03E8  2BEA               	goto	u1551
  1637  03E9  2BEB               	goto	u1550
  1638  03EA                     u1551:
  1639  03EA  2BC6               	goto	l1730
  1640  03EB                     u1550:
  1641  03EB                     l1740:
  1642  03EB  0841               	movf	___lwdiv@quotient+1,w
  1643  03EC  00F4               	movwf	?___lwdiv+1
  1644  03ED  0840               	movf	___lwdiv@quotient,w
  1645  03EE  00F3               	movwf	?___lwdiv
  1646  03EF                     l584:
  1647  03EF  0008               	return
  1648  03F0                     __end_of___lwdiv:
  1649                           
  1650                           	psect	text4
  1651  0504                     __ptext4:	
  1652 ;; *************** function _setup *****************
  1653 ;; Defined at:
  1654 ;;		line 138 in file "main.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    4
  1675 ;; This function calls:
  1676 ;;		_I2C_Master_Init
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _setup
  1684  0504                     _setup:
  1685  0504                     l1744:	
  1686                           ;incstack = 0
  1687                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1688                           
  1689  0504  1683               	bsf	3,5	;RP0=1, select bank3
  1690  0505  1703               	bsf	3,6	;RP1=1, select bank3
  1691  0506  0188               	clrf	8	;volatile
  1692  0507  0189               	clrf	9	;volatile
  1693  0508  1683               	bsf	3,5	;RP0=1, select bank1
  1694  0509  1303               	bcf	3,6	;RP1=0, select bank1
  1695  050A  0186               	clrf	6	;volatile
  1696  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1697  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1698  050D  0186               	clrf	6	;volatile
  1699  050E  0187               	clrf	7	;volatile
  1700  050F                     l1746:
  1701  050F  170B               	bsf	11,6	;volatile
  1702  0510                     l1748:
  1703  0510  1683               	bsf	3,5	;RP0=1, select bank1
  1704  0511  1303               	bcf	3,6	;RP1=0, select bank1
  1705  0512  168C               	bsf	12,5	;volatile
  1706  0513                     l1750:
  1707  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0515  128C               	bcf	12,5	;volatile
  1710  0516                     l1752:
  1711  0516  178B               	bsf	11,7	;volatile
  1712  0517                     l1754:
  1713  0517  3000               	movlw	0
  1714  0518  00CF               	movwf	I2C_Master_Init@c+3
  1715  0519  3001               	movlw	1
  1716  051A  00CE               	movwf	I2C_Master_Init@c+2
  1717  051B  3086               	movlw	134
  1718  051C  00CD               	movwf	I2C_Master_Init@c+1
  1719  051D  30A0               	movlw	160
  1720  051E  00CC               	movwf	I2C_Master_Init@c
  1721  051F  120A  118A  2468  120A  118A  	fcall	_I2C_Master_Init
  1722  0524                     l102:
  1723  0524  0008               	return
  1724  0525                     __end_of_setup:
  1725                           
  1726                           	psect	text5
  1727  0468                     __ptext5:	
  1728 ;; *************** function _I2C_Master_Init *****************
  1729 ;; Defined at:
  1730 ;;		line 16 in file "I2C.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  c               4   13[BANK0 ] const unsigned long 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, pclath, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       4       0       0       0
  1745 ;;      Locals:         0       0       0       0       0
  1746 ;;      Temps:          4       0       0       0       0
  1747 ;;      Totals:         4       4       0       0       0
  1748 ;;Total ram usage:        8 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    3
  1751 ;; This function calls:
  1752 ;;		___lldiv
  1753 ;; This function is called by:
  1754 ;;		_setup
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _I2C_Master_Init
  1760  0468                     _I2C_Master_Init:
  1761  0468                     l1706:	
  1762                           ;incstack = 0
  1763                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1764                           
  1765                           
  1766                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1767  0468  3028               	movlw	40
  1768  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1769  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1770  046B  0094               	movwf	20	;volatile
  1771  046C                     l1708:
  1772                           
  1773                           ;I2C.c: 19:     SSPCON2 = 0;
  1774  046C  1683               	bsf	3,5	;RP0=1, select bank1
  1775  046D  1303               	bcf	3,6	;RP1=0, select bank1
  1776  046E  0191               	clrf	17	;volatile
  1777  046F                     l1710:
  1778                           
  1779                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1780  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0471  084C               	movf	I2C_Master_Init@c,w
  1783  0472  00F4               	movwf	??_I2C_Master_Init
  1784  0473  084D               	movf	I2C_Master_Init@c+1,w
  1785  0474  00F5               	movwf	??_I2C_Master_Init+1
  1786  0475  084E               	movf	I2C_Master_Init@c+2,w
  1787  0476  00F6               	movwf	??_I2C_Master_Init+2
  1788  0477  084F               	movf	I2C_Master_Init@c+3,w
  1789  0478  00F7               	movwf	??_I2C_Master_Init+3
  1790  0479  3002               	movlw	2
  1791  047A                     u1485:
  1792  047A  1003               	clrc
  1793  047B  0DF4               	rlf	??_I2C_Master_Init,f
  1794  047C  0DF5               	rlf	??_I2C_Master_Init+1,f
  1795  047D  0DF6               	rlf	??_I2C_Master_Init+2,f
  1796  047E  0DF7               	rlf	??_I2C_Master_Init+3,f
  1797  047F                     u1480:
  1798  047F  3EFF               	addlw	-1
  1799  0480  1D03               	skipz
  1800  0481  2C7A               	goto	u1485
  1801  0482  0877               	movf	??_I2C_Master_Init+3,w
  1802  0483  00C2               	movwf	___lldiv@divisor+3
  1803  0484  0876               	movf	??_I2C_Master_Init+2,w
  1804  0485  00C1               	movwf	___lldiv@divisor+2
  1805  0486  0875               	movf	??_I2C_Master_Init+1,w
  1806  0487  00C0               	movwf	___lldiv@divisor+1
  1807  0488  0874               	movf	??_I2C_Master_Init,w
  1808  0489  00BF               	movwf	___lldiv@divisor
  1809  048A  3000               	movlw	0
  1810  048B  00C6               	movwf	___lldiv@dividend+3
  1811  048C  307A               	movlw	122
  1812  048D  00C5               	movwf	___lldiv@dividend+2
  1813  048E  3012               	movlw	18
  1814  048F  00C4               	movwf	___lldiv@dividend+1
  1815  0490  3000               	movlw	0
  1816  0491  00C3               	movwf	___lldiv@dividend
  1817  0492  120A  118A  22E7  120A  118A  	fcall	___lldiv
  1818  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0499  083F               	movf	?___lldiv,w
  1821  049A  3EFF               	addlw	255
  1822  049B  1683               	bsf	3,5	;RP0=1, select bank1
  1823  049C  1303               	bcf	3,6	;RP1=0, select bank1
  1824  049D  0093               	movwf	19	;volatile
  1825  049E                     l1712:
  1826                           
  1827                           ;I2C.c: 21:     SSPSTAT = 0;
  1828  049E  0194               	clrf	20	;volatile
  1829  049F                     l1714:
  1830                           
  1831                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1832  049F  1587               	bsf	7,3	;volatile
  1833  04A0                     l1716:
  1834                           
  1835                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1836  04A0  1607               	bsf	7,4	;volatile
  1837  04A1                     l131:
  1838  04A1  0008               	return
  1839  04A2                     __end_of_I2C_Master_Init:
  1840                           
  1841                           	psect	text6
  1842  02E7                     __ptext6:	
  1843 ;; *************** function ___lldiv *****************
  1844 ;; Defined at:
  1845 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  divisor         4    0[BANK0 ] unsigned long 
  1848 ;;  dividend        4    4[BANK0 ] unsigned long 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  quotient        4    8[BANK0 ] unsigned long 
  1851 ;;  counter         1   12[BANK0 ] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  4    0[BANK0 ] unsigned long 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       8       0       0       0
  1862 ;;      Locals:         0       5       0       0       0
  1863 ;;      Temps:          1       0       0       0       0
  1864 ;;      Totals:         1      13       0       0       0
  1865 ;;Total ram usage:       14 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    2
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_I2C_Master_Init
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function ___lldiv
  1877  02E7                     ___lldiv:
  1878  02E7                     l1584:	
  1879                           ;incstack = 0
  1880                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1881                           
  1882  02E7  3000               	movlw	0
  1883  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1884  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1885  02EA  00CA               	movwf	___lldiv@quotient+3
  1886  02EB  3000               	movlw	0
  1887  02EC  00C9               	movwf	___lldiv@quotient+2
  1888  02ED  3000               	movlw	0
  1889  02EE  00C8               	movwf	___lldiv@quotient+1
  1890  02EF  3000               	movlw	0
  1891  02F0  00C7               	movwf	___lldiv@quotient
  1892  02F1  0842               	movf	___lldiv@divisor+3,w
  1893  02F2  0441               	iorwf	___lldiv@divisor+2,w
  1894  02F3  0440               	iorwf	___lldiv@divisor+1,w
  1895  02F4  043F               	iorwf	___lldiv@divisor,w
  1896  02F5  1903               	skipnz
  1897  02F6  2AF8               	goto	u1211
  1898  02F7  2AF9               	goto	u1210
  1899  02F8                     u1211:
  1900  02F8  2B46               	goto	l1604
  1901  02F9                     u1210:
  1902  02F9                     l1586:
  1903  02F9  01CB               	clrf	___lldiv@counter
  1904  02FA  0ACB               	incf	___lldiv@counter,f
  1905  02FB  2B09               	goto	l1590
  1906  02FC                     l1588:
  1907  02FC  3001               	movlw	1
  1908  02FD  00F3               	movwf	??___lldiv
  1909  02FE                     u1225:
  1910  02FE  1003               	clrc
  1911  02FF  0DBF               	rlf	___lldiv@divisor,f
  1912  0300  0DC0               	rlf	___lldiv@divisor+1,f
  1913  0301  0DC1               	rlf	___lldiv@divisor+2,f
  1914  0302  0DC2               	rlf	___lldiv@divisor+3,f
  1915  0303  0BF3               	decfsz	??___lldiv,f
  1916  0304  2AFE               	goto	u1225
  1917  0305  3001               	movlw	1
  1918  0306  00F3               	movwf	??___lldiv
  1919  0307  0873               	movf	??___lldiv,w
  1920  0308  07CB               	addwf	___lldiv@counter,f
  1921  0309                     l1590:
  1922  0309  1FC2               	btfss	___lldiv@divisor+3,7
  1923  030A  2B0C               	goto	u1231
  1924  030B  2B0D               	goto	u1230
  1925  030C                     u1231:
  1926  030C  2AFC               	goto	l1588
  1927  030D                     u1230:
  1928  030D                     l1592:
  1929  030D  3001               	movlw	1
  1930  030E  00F3               	movwf	??___lldiv
  1931  030F                     u1245:
  1932  030F  1003               	clrc
  1933  0310  0DC7               	rlf	___lldiv@quotient,f
  1934  0311  0DC8               	rlf	___lldiv@quotient+1,f
  1935  0312  0DC9               	rlf	___lldiv@quotient+2,f
  1936  0313  0DCA               	rlf	___lldiv@quotient+3,f
  1937  0314  0BF3               	decfsz	??___lldiv,f
  1938  0315  2B0F               	goto	u1245
  1939  0316                     l1594:
  1940  0316  0842               	movf	___lldiv@divisor+3,w
  1941  0317  0246               	subwf	___lldiv@dividend+3,w
  1942  0318  1D03               	skipz
  1943  0319  2B24               	goto	u1255
  1944  031A  0841               	movf	___lldiv@divisor+2,w
  1945  031B  0245               	subwf	___lldiv@dividend+2,w
  1946  031C  1D03               	skipz
  1947  031D  2B24               	goto	u1255
  1948  031E  0840               	movf	___lldiv@divisor+1,w
  1949  031F  0244               	subwf	___lldiv@dividend+1,w
  1950  0320  1D03               	skipz
  1951  0321  2B24               	goto	u1255
  1952  0322  083F               	movf	___lldiv@divisor,w
  1953  0323  0243               	subwf	___lldiv@dividend,w
  1954  0324                     u1255:
  1955  0324  1C03               	skipc
  1956  0325  2B27               	goto	u1251
  1957  0326  2B28               	goto	u1250
  1958  0327                     u1251:
  1959  0327  2B37               	goto	l1600
  1960  0328                     u1250:
  1961  0328                     l1596:
  1962  0328  083F               	movf	___lldiv@divisor,w
  1963  0329  02C3               	subwf	___lldiv@dividend,f
  1964  032A  0840               	movf	___lldiv@divisor+1,w
  1965  032B  1C03               	skipc
  1966  032C  0F40               	incfsz	___lldiv@divisor+1,w
  1967  032D  02C4               	subwf	___lldiv@dividend+1,f
  1968  032E  0841               	movf	___lldiv@divisor+2,w
  1969  032F  1C03               	skipc
  1970  0330  0F41               	incfsz	___lldiv@divisor+2,w
  1971  0331  02C5               	subwf	___lldiv@dividend+2,f
  1972  0332  0842               	movf	___lldiv@divisor+3,w
  1973  0333  1C03               	skipc
  1974  0334  0F42               	incfsz	___lldiv@divisor+3,w
  1975  0335  02C6               	subwf	___lldiv@dividend+3,f
  1976  0336                     l1598:
  1977  0336  1447               	bsf	___lldiv@quotient,0
  1978  0337                     l1600:
  1979  0337  3001               	movlw	1
  1980  0338                     u1265:
  1981  0338  1003               	clrc
  1982  0339  0CC2               	rrf	___lldiv@divisor+3,f
  1983  033A  0CC1               	rrf	___lldiv@divisor+2,f
  1984  033B  0CC0               	rrf	___lldiv@divisor+1,f
  1985  033C  0CBF               	rrf	___lldiv@divisor,f
  1986  033D  3EFF               	addlw	-1
  1987  033E  1D03               	skipz
  1988  033F  2B38               	goto	u1265
  1989  0340                     l1602:
  1990  0340  3001               	movlw	1
  1991  0341  02CB               	subwf	___lldiv@counter,f
  1992  0342  1D03               	btfss	3,2
  1993  0343  2B45               	goto	u1271
  1994  0344  2B46               	goto	u1270
  1995  0345                     u1271:
  1996  0345  2B0D               	goto	l1592
  1997  0346                     u1270:
  1998  0346                     l1604:
  1999  0346  084A               	movf	___lldiv@quotient+3,w
  2000  0347  00C2               	movwf	?___lldiv+3
  2001  0348  0849               	movf	___lldiv@quotient+2,w
  2002  0349  00C1               	movwf	?___lldiv+2
  2003  034A  0848               	movf	___lldiv@quotient+1,w
  2004  034B  00C0               	movwf	?___lldiv+1
  2005  034C  0847               	movf	___lldiv@quotient,w
  2006  034D  00BF               	movwf	?___lldiv
  2007  034E                     l348:
  2008  034E  0008               	return
  2009  034F                     __end_of___lldiv:
  2010                           
  2011                           	psect	text7
  2012  01D0                     __ptext7:	
  2013 ;; *************** function _set_tiempo *****************
  2014 ;; Defined at:
  2015 ;;		line 120 in file "main.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2029 ;;      Params:         0       0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0
  2031 ;;      Temps:          0       3       0       0       0
  2032 ;;      Totals:         0       3       0       0       0
  2033 ;;Total ram usage:        3 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    4
  2036 ;; This function calls:
  2037 ;;		_I2C_Master_Start
  2038 ;;		_I2C_Master_Stop
  2039 ;;		_I2C_Master_Write
  2040 ;;		_dec_a_bcd
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _set_tiempo
  2048  01D0                     _set_tiempo:
  2049  01D0                     l1756:	
  2050                           ;incstack = 0
  2051                           ; Regs used in _set_tiempo: [wreg+status,2+status,0+pclath+cstack]
  2052                           
  2053  01D0  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Start
  2054  01D5  30D0               	movlw	208
  2055  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2056  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2057  01D8  00C9               	movwf	I2C_Master_Write@d
  2058  01D9  3000               	movlw	0
  2059  01DA  00CA               	movwf	I2C_Master_Write@d+1
  2060  01DB  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
  2061  01E0  3000               	movlw	0
  2062  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2063  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2064  01E3  00C9               	movwf	I2C_Master_Write@d
  2065  01E4  00CA               	movwf	I2C_Master_Write@d+1
  2066  01E5  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
  2067  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2068  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2069  01EC  0828               	movf	_seg,w
  2070  01ED  120A  118A  24A2  120A  118A  	fcall	_dec_a_bcd
  2071  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2072  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2073  01F4  00CB               	movwf	??_set_tiempo
  2074  01F5  01CC               	clrf	??_set_tiempo+1
  2075  01F6  084B               	movf	??_set_tiempo,w
  2076  01F7  00C9               	movwf	I2C_Master_Write@d
  2077  01F8  084C               	movf	??_set_tiempo+1,w
  2078  01F9  00CA               	movwf	I2C_Master_Write@d+1
  2079  01FA  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
  2080  01FF  3000               	movlw	0
  2081  0200  120A  118A  24A2  120A  118A  	fcall	_dec_a_bcd
  2082  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0207  00CB               	movwf	??_set_tiempo
  2085  0208  01CC               	clrf	??_set_tiempo+1
  2086  0209  084B               	movf	??_set_tiempo,w
  2087  020A  00C9               	movwf	I2C_Master_Write@d
  2088  020B  084C               	movf	??_set_tiempo+1,w
  2089  020C  00CA               	movwf	I2C_Master_Write@d+1
  2090  020D  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
  2091  0212  3000               	movlw	0
  2092  0213  120A  118A  24A2  120A  118A  	fcall	_dec_a_bcd
  2093  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2095  021A  00CB               	movwf	??_set_tiempo
  2096  021B  01CC               	clrf	??_set_tiempo+1
  2097  021C  084B               	movf	??_set_tiempo,w
  2098  021D  00C9               	movwf	I2C_Master_Write@d
  2099  021E  084C               	movf	??_set_tiempo+1,w
  2100  021F  00CA               	movwf	I2C_Master_Write@d+1
  2101  0220  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
  2102  0225  3001               	movlw	1
  2103  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0228  00C9               	movwf	I2C_Master_Write@d
  2106  0229  3000               	movlw	0
  2107  022A  00CA               	movwf	I2C_Master_Write@d+1
  2108  022B  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
  2109  0230  3000               	movlw	0
  2110  0231  120A  118A  24A2  120A  118A  	fcall	_dec_a_bcd
  2111  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0238  00CB               	movwf	??_set_tiempo
  2114  0239  01CC               	clrf	??_set_tiempo+1
  2115  023A  084B               	movf	??_set_tiempo,w
  2116  023B  00C9               	movwf	I2C_Master_Write@d
  2117  023C  084C               	movf	??_set_tiempo+1,w
  2118  023D  00CA               	movwf	I2C_Master_Write@d+1
  2119  023E  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
  2120  0243  3000               	movlw	0
  2121  0244  120A  118A  24A2  120A  118A  	fcall	_dec_a_bcd
  2122  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2123  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2124  024B  00CB               	movwf	??_set_tiempo
  2125  024C  01CC               	clrf	??_set_tiempo+1
  2126  024D  084B               	movf	??_set_tiempo,w
  2127  024E  00C9               	movwf	I2C_Master_Write@d
  2128  024F  084C               	movf	??_set_tiempo+1,w
  2129  0250  00CA               	movwf	I2C_Master_Write@d+1
  2130  0251  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
  2131  0256  3000               	movlw	0
  2132  0257  120A  118A  24A2  120A  118A  	fcall	_dec_a_bcd
  2133  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2134  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2135  025E  00CB               	movwf	??_set_tiempo
  2136  025F  01CC               	clrf	??_set_tiempo+1
  2137  0260  084B               	movf	??_set_tiempo,w
  2138  0261  00C9               	movwf	I2C_Master_Write@d
  2139  0262  084C               	movf	??_set_tiempo+1,w
  2140  0263  00CA               	movwf	I2C_Master_Write@d+1
  2141  0264  120A  118A  25A0  120A  118A  	fcall	_I2C_Master_Write
  2142  0269  120A  118A  25B4  120A  118A  	fcall	_I2C_Master_Stop
  2143  026E                     l1758:
  2144  026E  3003               	movlw	3
  2145  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0271  00CD               	movwf	??_set_tiempo+2
  2148  0272  3008               	movlw	8
  2149  0273  00CC               	movwf	??_set_tiempo+1
  2150  0274  3076               	movlw	118
  2151  0275  00CB               	movwf	??_set_tiempo
  2152  0276                     u1667:
  2153  0276  0BCB               	decfsz	??_set_tiempo,f
  2154  0277  2A76               	goto	u1667
  2155  0278  0BCC               	decfsz	??_set_tiempo+1,f
  2156  0279  2A76               	goto	u1667
  2157  027A  0BCD               	decfsz	??_set_tiempo+2,f
  2158  027B  2A76               	goto	u1667
  2159  027C  0000               	nop
  2160  027D                     l99:
  2161  027D  0008               	return
  2162  027E                     __end_of_set_tiempo:
  2163                           
  2164                           	psect	text8
  2165  04A2                     __ptext8:	
  2166 ;; *************** function _dec_a_bcd *****************
  2167 ;; Defined at:
  2168 ;;		line 116 in file "main.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  valor           1    wreg     unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  valor           1    9[BANK0 ] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      unsigned char 
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0, pclath, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2182 ;;      Params:         0       0       0       0       0
  2183 ;;      Locals:         0       1       0       0       0
  2184 ;;      Temps:          0       5       0       0       0
  2185 ;;      Totals:         0       6       0       0       0
  2186 ;;Total ram usage:        6 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    3
  2189 ;; This function calls:
  2190 ;;		___awdiv
  2191 ;;		___awmod
  2192 ;; This function is called by:
  2193 ;;		_set_tiempo
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _dec_a_bcd
  2199  04A2                     _dec_a_bcd:
  2200                           
  2201                           ;incstack = 0
  2202                           ; Regs used in _dec_a_bcd: [wreg+status,2+status,0+pclath+cstack]
  2203                           ;dec_a_bcd@valor stored from wreg
  2204  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2205  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2206  04A4  00C8               	movwf	dec_a_bcd@valor
  2207  04A5                     l1702:
  2208                           
  2209                           ;main.c: 117: }
  2210  04A5  300A               	movlw	10
  2211  04A6  00F3               	movwf	___awdiv@divisor
  2212  04A7  3000               	movlw	0
  2213  04A8  00F4               	movwf	___awdiv@divisor+1
  2214  04A9  0848               	movf	dec_a_bcd@valor,w
  2215  04AA  00C3               	movwf	??_dec_a_bcd
  2216  04AB  01C4               	clrf	??_dec_a_bcd+1
  2217  04AC  0843               	movf	??_dec_a_bcd,w
  2218  04AD  00F5               	movwf	___awdiv@dividend
  2219  04AE  0844               	movf	??_dec_a_bcd+1,w
  2220  04AF  00F6               	movwf	___awdiv@dividend+1
  2221  04B0  120A  118A  227E  120A  118A  	fcall	___awdiv
  2222  04B5  0873               	movf	?___awdiv,w
  2223  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2224  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2225  04B8  00C5               	movwf	??_dec_a_bcd+2
  2226  04B9  3004               	movlw	4
  2227  04BA                     u1475:
  2228  04BA  1003               	clrc
  2229  04BB  0DC5               	rlf	??_dec_a_bcd+2,f
  2230  04BC  3EFF               	addlw	-1
  2231  04BD  1D03               	skipz
  2232  04BE  2CBA               	goto	u1475
  2233  04BF  300A               	movlw	10
  2234  04C0  00F3               	movwf	___awmod@divisor
  2235  04C1  3000               	movlw	0
  2236  04C2  00F4               	movwf	___awmod@divisor+1
  2237  04C3  0848               	movf	dec_a_bcd@valor,w
  2238  04C4  00C6               	movwf	??_dec_a_bcd+3
  2239  04C5  01C7               	clrf	??_dec_a_bcd+4
  2240  04C6  0846               	movf	??_dec_a_bcd+3,w
  2241  04C7  00F5               	movwf	___awmod@dividend
  2242  04C8  0847               	movf	??_dec_a_bcd+4,w
  2243  04C9  00F6               	movwf	___awmod@dividend+1
  2244  04CA  120A  118A  234F  120A  118A  	fcall	___awmod
  2245  04CF  0873               	movf	?___awmod,w
  2246  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2247  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2248  04D2  0745               	addwf	??_dec_a_bcd+2,w
  2249  04D3                     l96:
  2250  04D3  0008               	return
  2251  04D4                     __end_of_dec_a_bcd:
  2252                           
  2253                           	psect	text9
  2254  034F                     __ptext9:	
  2255 ;; *************** function ___awmod *****************
  2256 ;; Defined at:
  2257 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  divisor         2    3[COMMON] int 
  2260 ;;  dividend        2    5[COMMON] int 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  sign            1    1[BANK0 ] unsigned char 
  2263 ;;  counter         1    0[BANK0 ] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2    3[COMMON] int 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         4       0       0       0       0
  2274 ;;      Locals:         0       2       0       0       0
  2275 ;;      Temps:          1       0       0       0       0
  2276 ;;      Totals:         5       2       0       0       0
  2277 ;;Total ram usage:        7 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    2
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_dec_a_bcd
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           
  2288                           ;psect for function ___awmod
  2289  034F                     ___awmod:
  2290  034F                     l1652:	
  2291                           ;incstack = 0
  2292                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2293                           
  2294  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0351  01C0               	clrf	___awmod@sign
  2297  0352                     l1654:
  2298  0352  1FF6               	btfss	___awmod@dividend+1,7
  2299  0353  2B55               	goto	u1381
  2300  0354  2B56               	goto	u1380
  2301  0355                     u1381:
  2302  0355  2B5D               	goto	l1660
  2303  0356                     u1380:
  2304  0356                     l1656:
  2305  0356  09F5               	comf	___awmod@dividend,f
  2306  0357  09F6               	comf	___awmod@dividend+1,f
  2307  0358  0AF5               	incf	___awmod@dividend,f
  2308  0359  1903               	skipnz
  2309  035A  0AF6               	incf	___awmod@dividend+1,f
  2310  035B                     l1658:
  2311  035B  01C0               	clrf	___awmod@sign
  2312  035C  0AC0               	incf	___awmod@sign,f
  2313  035D                     l1660:
  2314  035D  1FF4               	btfss	___awmod@divisor+1,7
  2315  035E  2B60               	goto	u1391
  2316  035F  2B61               	goto	u1390
  2317  0360                     u1391:
  2318  0360  2B66               	goto	l1664
  2319  0361                     u1390:
  2320  0361                     l1662:
  2321  0361  09F3               	comf	___awmod@divisor,f
  2322  0362  09F4               	comf	___awmod@divisor+1,f
  2323  0363  0AF3               	incf	___awmod@divisor,f
  2324  0364  1903               	skipnz
  2325  0365  0AF4               	incf	___awmod@divisor+1,f
  2326  0366                     l1664:
  2327  0366  0873               	movf	___awmod@divisor,w
  2328  0367  0474               	iorwf	___awmod@divisor+1,w
  2329  0368  1903               	btfsc	3,2
  2330  0369  2B6B               	goto	u1401
  2331  036A  2B6C               	goto	u1400
  2332  036B                     u1401:
  2333  036B  2B9B               	goto	l1682
  2334  036C                     u1400:
  2335  036C                     l1666:
  2336  036C  01BF               	clrf	___awmod@counter
  2337  036D  0ABF               	incf	___awmod@counter,f
  2338  036E  2B7A               	goto	l1672
  2339  036F                     l1668:
  2340  036F  3001               	movlw	1
  2341  0370                     u1415:
  2342  0370  1003               	clrc
  2343  0371  0DF3               	rlf	___awmod@divisor,f
  2344  0372  0DF4               	rlf	___awmod@divisor+1,f
  2345  0373  3EFF               	addlw	-1
  2346  0374  1D03               	skipz
  2347  0375  2B70               	goto	u1415
  2348  0376                     l1670:
  2349  0376  3001               	movlw	1
  2350  0377  00F7               	movwf	??___awmod
  2351  0378  0877               	movf	??___awmod,w
  2352  0379  07BF               	addwf	___awmod@counter,f
  2353  037A                     l1672:
  2354  037A  1FF4               	btfss	___awmod@divisor+1,7
  2355  037B  2B7D               	goto	u1421
  2356  037C  2B7E               	goto	u1420
  2357  037D                     u1421:
  2358  037D  2B6F               	goto	l1668
  2359  037E                     u1420:
  2360  037E                     l1674:
  2361  037E  0874               	movf	___awmod@divisor+1,w
  2362  037F  0276               	subwf	___awmod@dividend+1,w
  2363  0380  1D03               	skipz
  2364  0381  2B84               	goto	u1435
  2365  0382  0873               	movf	___awmod@divisor,w
  2366  0383  0275               	subwf	___awmod@dividend,w
  2367  0384                     u1435:
  2368  0384  1C03               	skipc
  2369  0385  2B87               	goto	u1431
  2370  0386  2B88               	goto	u1430
  2371  0387                     u1431:
  2372  0387  2B8E               	goto	l1678
  2373  0388                     u1430:
  2374  0388                     l1676:
  2375  0388  0873               	movf	___awmod@divisor,w
  2376  0389  02F5               	subwf	___awmod@dividend,f
  2377  038A  0874               	movf	___awmod@divisor+1,w
  2378  038B  1C03               	skipc
  2379  038C  03F6               	decf	___awmod@dividend+1,f
  2380  038D  02F6               	subwf	___awmod@dividend+1,f
  2381  038E                     l1678:
  2382  038E  3001               	movlw	1
  2383  038F                     u1445:
  2384  038F  1003               	clrc
  2385  0390  0CF4               	rrf	___awmod@divisor+1,f
  2386  0391  0CF3               	rrf	___awmod@divisor,f
  2387  0392  3EFF               	addlw	-1
  2388  0393  1D03               	skipz
  2389  0394  2B8F               	goto	u1445
  2390  0395                     l1680:
  2391  0395  3001               	movlw	1
  2392  0396  02BF               	subwf	___awmod@counter,f
  2393  0397  1D03               	btfss	3,2
  2394  0398  2B9A               	goto	u1451
  2395  0399  2B9B               	goto	u1450
  2396  039A                     u1451:
  2397  039A  2B7E               	goto	l1674
  2398  039B                     u1450:
  2399  039B                     l1682:
  2400  039B  0840               	movf	___awmod@sign,w
  2401  039C  1903               	btfsc	3,2
  2402  039D  2B9F               	goto	u1461
  2403  039E  2BA0               	goto	u1460
  2404  039F                     u1461:
  2405  039F  2BA5               	goto	l1686
  2406  03A0                     u1460:
  2407  03A0                     l1684:
  2408  03A0  09F5               	comf	___awmod@dividend,f
  2409  03A1  09F6               	comf	___awmod@dividend+1,f
  2410  03A2  0AF5               	incf	___awmod@dividend,f
  2411  03A3  1903               	skipnz
  2412  03A4  0AF6               	incf	___awmod@dividend+1,f
  2413  03A5                     l1686:
  2414  03A5  0876               	movf	___awmod@dividend+1,w
  2415  03A6  00F4               	movwf	?___awmod+1
  2416  03A7  0875               	movf	___awmod@dividend,w
  2417  03A8  00F3               	movwf	?___awmod
  2418  03A9                     l478:
  2419  03A9  0008               	return
  2420  03AA                     __end_of___awmod:
  2421                           
  2422                           	psect	text10
  2423  027E                     __ptext10:	
  2424 ;; *************** function ___awdiv *****************
  2425 ;; Defined at:
  2426 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  divisor         2    3[COMMON] int 
  2429 ;;  dividend        2    5[COMMON] int 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  quotient        2    2[BANK0 ] int 
  2432 ;;  sign            1    1[BANK0 ] unsigned char 
  2433 ;;  counter         1    0[BANK0 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2    3[COMMON] int 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         4       0       0       0       0
  2444 ;;      Locals:         0       4       0       0       0
  2445 ;;      Temps:          1       0       0       0       0
  2446 ;;      Totals:         5       4       0       0       0
  2447 ;;Total ram usage:        9 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    2
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_dec_a_bcd
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function ___awdiv
  2459  027E                     ___awdiv:
  2460  027E                     l1608:	
  2461                           ;incstack = 0
  2462                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2463                           
  2464  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2465  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0280  01C0               	clrf	___awdiv@sign
  2467  0281                     l1610:
  2468  0281  1FF4               	btfss	___awdiv@divisor+1,7
  2469  0282  2A84               	goto	u1281
  2470  0283  2A85               	goto	u1280
  2471  0284                     u1281:
  2472  0284  2A8C               	goto	l1616
  2473  0285                     u1280:
  2474  0285                     l1612:
  2475  0285  09F3               	comf	___awdiv@divisor,f
  2476  0286  09F4               	comf	___awdiv@divisor+1,f
  2477  0287  0AF3               	incf	___awdiv@divisor,f
  2478  0288  1903               	skipnz
  2479  0289  0AF4               	incf	___awdiv@divisor+1,f
  2480  028A                     l1614:
  2481  028A  01C0               	clrf	___awdiv@sign
  2482  028B  0AC0               	incf	___awdiv@sign,f
  2483  028C                     l1616:
  2484  028C  1FF6               	btfss	___awdiv@dividend+1,7
  2485  028D  2A8F               	goto	u1291
  2486  028E  2A90               	goto	u1290
  2487  028F                     u1291:
  2488  028F  2A99               	goto	l1622
  2489  0290                     u1290:
  2490  0290                     l1618:
  2491  0290  09F5               	comf	___awdiv@dividend,f
  2492  0291  09F6               	comf	___awdiv@dividend+1,f
  2493  0292  0AF5               	incf	___awdiv@dividend,f
  2494  0293  1903               	skipnz
  2495  0294  0AF6               	incf	___awdiv@dividend+1,f
  2496  0295                     l1620:
  2497  0295  3001               	movlw	1
  2498  0296  00F7               	movwf	??___awdiv
  2499  0297  0877               	movf	??___awdiv,w
  2500  0298  06C0               	xorwf	___awdiv@sign,f
  2501  0299                     l1622:
  2502  0299  01C1               	clrf	___awdiv@quotient
  2503  029A  01C2               	clrf	___awdiv@quotient+1
  2504  029B                     l1624:
  2505  029B  0873               	movf	___awdiv@divisor,w
  2506  029C  0474               	iorwf	___awdiv@divisor+1,w
  2507  029D  1903               	btfsc	3,2
  2508  029E  2AA0               	goto	u1301
  2509  029F  2AA1               	goto	u1300
  2510  02A0                     u1301:
  2511  02A0  2AD8               	goto	l1644
  2512  02A1                     u1300:
  2513  02A1                     l1626:
  2514  02A1  01BF               	clrf	___awdiv@counter
  2515  02A2  0ABF               	incf	___awdiv@counter,f
  2516  02A3  2AAF               	goto	l1632
  2517  02A4                     l1628:
  2518  02A4  3001               	movlw	1
  2519  02A5                     u1315:
  2520  02A5  1003               	clrc
  2521  02A6  0DF3               	rlf	___awdiv@divisor,f
  2522  02A7  0DF4               	rlf	___awdiv@divisor+1,f
  2523  02A8  3EFF               	addlw	-1
  2524  02A9  1D03               	skipz
  2525  02AA  2AA5               	goto	u1315
  2526  02AB                     l1630:
  2527  02AB  3001               	movlw	1
  2528  02AC  00F7               	movwf	??___awdiv
  2529  02AD  0877               	movf	??___awdiv,w
  2530  02AE  07BF               	addwf	___awdiv@counter,f
  2531  02AF                     l1632:
  2532  02AF  1FF4               	btfss	___awdiv@divisor+1,7
  2533  02B0  2AB2               	goto	u1321
  2534  02B1  2AB3               	goto	u1320
  2535  02B2                     u1321:
  2536  02B2  2AA4               	goto	l1628
  2537  02B3                     u1320:
  2538  02B3                     l1634:
  2539  02B3  3001               	movlw	1
  2540  02B4                     u1335:
  2541  02B4  1003               	clrc
  2542  02B5  0DC1               	rlf	___awdiv@quotient,f
  2543  02B6  0DC2               	rlf	___awdiv@quotient+1,f
  2544  02B7  3EFF               	addlw	-1
  2545  02B8  1D03               	skipz
  2546  02B9  2AB4               	goto	u1335
  2547  02BA  0874               	movf	___awdiv@divisor+1,w
  2548  02BB  0276               	subwf	___awdiv@dividend+1,w
  2549  02BC  1D03               	skipz
  2550  02BD  2AC0               	goto	u1345
  2551  02BE  0873               	movf	___awdiv@divisor,w
  2552  02BF  0275               	subwf	___awdiv@dividend,w
  2553  02C0                     u1345:
  2554  02C0  1C03               	skipc
  2555  02C1  2AC3               	goto	u1341
  2556  02C2  2AC4               	goto	u1340
  2557  02C3                     u1341:
  2558  02C3  2ACB               	goto	l1640
  2559  02C4                     u1340:
  2560  02C4                     l1636:
  2561  02C4  0873               	movf	___awdiv@divisor,w
  2562  02C5  02F5               	subwf	___awdiv@dividend,f
  2563  02C6  0874               	movf	___awdiv@divisor+1,w
  2564  02C7  1C03               	skipc
  2565  02C8  03F6               	decf	___awdiv@dividend+1,f
  2566  02C9  02F6               	subwf	___awdiv@dividend+1,f
  2567  02CA                     l1638:
  2568  02CA  1441               	bsf	___awdiv@quotient,0
  2569  02CB                     l1640:
  2570  02CB  3001               	movlw	1
  2571  02CC                     u1355:
  2572  02CC  1003               	clrc
  2573  02CD  0CF4               	rrf	___awdiv@divisor+1,f
  2574  02CE  0CF3               	rrf	___awdiv@divisor,f
  2575  02CF  3EFF               	addlw	-1
  2576  02D0  1D03               	skipz
  2577  02D1  2ACC               	goto	u1355
  2578  02D2                     l1642:
  2579  02D2  3001               	movlw	1
  2580  02D3  02BF               	subwf	___awdiv@counter,f
  2581  02D4  1D03               	btfss	3,2
  2582  02D5  2AD7               	goto	u1361
  2583  02D6  2AD8               	goto	u1360
  2584  02D7                     u1361:
  2585  02D7  2AB3               	goto	l1634
  2586  02D8                     u1360:
  2587  02D8                     l1644:
  2588  02D8  0840               	movf	___awdiv@sign,w
  2589  02D9  1903               	btfsc	3,2
  2590  02DA  2ADC               	goto	u1371
  2591  02DB  2ADD               	goto	u1370
  2592  02DC                     u1371:
  2593  02DC  2AE2               	goto	l1648
  2594  02DD                     u1370:
  2595  02DD                     l1646:
  2596  02DD  09C1               	comf	___awdiv@quotient,f
  2597  02DE  09C2               	comf	___awdiv@quotient+1,f
  2598  02DF  0AC1               	incf	___awdiv@quotient,f
  2599  02E0  1903               	skipnz
  2600  02E1  0AC2               	incf	___awdiv@quotient+1,f
  2601  02E2                     l1648:
  2602  02E2  0842               	movf	___awdiv@quotient+1,w
  2603  02E3  00F4               	movwf	?___awdiv+1
  2604  02E4  0841               	movf	___awdiv@quotient,w
  2605  02E5  00F3               	movwf	?___awdiv
  2606  02E6                     l465:
  2607  02E6  0008               	return
  2608  02E7                     __end_of___awdiv:
  2609                           
  2610                           	psect	text11
  2611  05A0                     __ptext11:	
  2612 ;; *************** function _I2C_Master_Write *****************
  2613 ;; Defined at:
  2614 ;;		line 65 in file "I2C.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  d               2   10[BANK0 ] unsigned int 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         0       2       0       0       0
  2629 ;;      Locals:         0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0
  2631 ;;      Totals:         0       2       0       0       0
  2632 ;;Total ram usage:        2 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    3
  2635 ;; This function calls:
  2636 ;;		_I2C_Master_Wait
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;;		_set_tiempo
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function _I2C_Master_Write
  2645  05A0                     _I2C_Master_Write:
  2646  05A0                     l1694:	
  2647                           ;incstack = 0
  2648                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2649                           
  2650                           
  2651                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2652  05A0  120A  118A  2587  120A  118A  	fcall	_I2C_Master_Wait
  2653  05A5                     l1696:
  2654                           
  2655                           ;I2C.c: 68:     SSPBUF = d;
  2656  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2657  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2658  05A7  0849               	movf	I2C_Master_Write@d,w
  2659  05A8  0093               	movwf	19	;volatile
  2660  05A9                     l149:
  2661  05A9  0008               	return
  2662  05AA                     __end_of_I2C_Master_Write:
  2663                           
  2664                           	psect	text12
  2665  05B4                     __ptext12:	
  2666 ;; *************** function _I2C_Master_Stop *****************
  2667 ;; Defined at:
  2668 ;;		line 55 in file "I2C.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, pclath, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2682 ;;      Params:         0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    3
  2689 ;; This function calls:
  2690 ;;		_I2C_Master_Wait
  2691 ;; This function is called by:
  2692 ;;		_main
  2693 ;;		_set_tiempo
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _I2C_Master_Stop
  2699  05B4                     _I2C_Master_Stop:
  2700  05B4                     l1698:	
  2701                           ;incstack = 0
  2702                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2703                           
  2704                           
  2705                           ;I2C.c: 57:     I2C_Master_Wait();
  2706  05B4  120A  118A  2587  120A  118A  	fcall	_I2C_Master_Wait
  2707  05B9                     l1700:
  2708                           
  2709                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2710  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  2711  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  2712  05BB  1511               	bsf	17,2	;volatile
  2713  05BC                     l146:
  2714  05BC  0008               	return
  2715  05BD                     __end_of_I2C_Master_Stop:
  2716                           
  2717                           	psect	text13
  2718  05BD                     __ptext13:	
  2719 ;; *************** function _I2C_Master_Start *****************
  2720 ;; Defined at:
  2721 ;;		line 39 in file "I2C.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0
  2738 ;;      Totals:         0       0       0       0       0
  2739 ;;Total ram usage:        0 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    3
  2742 ;; This function calls:
  2743 ;;		_I2C_Master_Wait
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;;		_set_tiempo
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _I2C_Master_Start
  2752  05BD                     _I2C_Master_Start:
  2753  05BD                     l1690:	
  2754                           ;incstack = 0
  2755                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2756                           
  2757                           
  2758                           ;I2C.c: 41:     I2C_Master_Wait();
  2759  05BD  120A  118A  2587  120A  118A  	fcall	_I2C_Master_Wait
  2760  05C2                     l1692:
  2761                           
  2762                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2763  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  2764  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  2765  05C4  1411               	bsf	17,0	;volatile
  2766  05C5                     l140:
  2767  05C5  0008               	return
  2768  05C6                     __end_of_I2C_Master_Start:
  2769                           
  2770                           	psect	text14
  2771  05AA                     __ptext14:	
  2772 ;; *************** function _config_txsta *****************
  2773 ;; Defined at:
  2774 ;;		line 9 in file "USART.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		None
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    2
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _config_txsta
  2804  05AA                     _config_txsta:
  2805  05AA                     l1438:	
  2806                           ;incstack = 0
  2807                           ; Regs used in _config_txsta: []
  2808                           
  2809                           
  2810                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  2811  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  2812  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  2813  05AC  1398               	bcf	24,7	;volatile
  2814                           
  2815                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  2816  05AD  1318               	bcf	24,6	;volatile
  2817                           
  2818                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  2819  05AE  1698               	bsf	24,5	;volatile
  2820                           
  2821                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  2822  05AF  1218               	bcf	24,4	;volatile
  2823                           
  2824                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  2825  05B0  1118               	bcf	24,2	;volatile
  2826                           
  2827                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  2828  05B1  1098               	bcf	24,1	;volatile
  2829                           
  2830                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  2831  05B2  1018               	bcf	24,0	;volatile
  2832  05B3                     l177:
  2833  05B3  0008               	return
  2834  05B4                     __end_of_config_txsta:
  2835                           
  2836                           	psect	text15
  2837  05CE                     __ptext15:	
  2838 ;; *************** function _config_rcsta *****************
  2839 ;; Defined at:
  2840 ;;		line 19 in file "USART.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		status,2
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    2
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function _config_rcsta
  2870  05CE                     _config_rcsta:
  2871  05CE                     l1440:	
  2872                           ;incstack = 0
  2873                           ; Regs used in _config_rcsta: [status,2]
  2874                           
  2875                           
  2876                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  2877  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2878  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2879  05D0  1798               	bsf	24,7	;volatile
  2880                           
  2881                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  2882  05D1  1318               	bcf	24,6	;volatile
  2883                           
  2884                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  2885  05D2  1298               	bcf	24,5	;volatile
  2886                           
  2887                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  2888  05D3  1618               	bsf	24,4	;volatile
  2889  05D4                     l1442:
  2890                           
  2891                           ;USART.c: 24:     RCREG = 0;
  2892  05D4  019A               	clrf	26	;volatile
  2893  05D5                     l180:
  2894  05D5  0008               	return
  2895  05D6                     __end_of_config_rcsta:
  2896                           
  2897                           	psect	text16
  2898  0543                     __ptext16:	
  2899 ;; *************** function _bcd_a_dec *****************
  2900 ;; Defined at:
  2901 ;;		line 112 in file "main.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  valor           1    wreg     unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  valor           1    7[COMMON] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      unsigned char 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       0       0       0       0
  2916 ;;      Locals:         1       0       0       0       0
  2917 ;;      Temps:          0       3       0       0       0
  2918 ;;      Totals:         1       3       0       0       0
  2919 ;;Total ram usage:        4 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    3
  2922 ;; This function calls:
  2923 ;;		___bmul
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function _bcd_a_dec
  2931  0543                     _bcd_a_dec:
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _bcd_a_dec: [wreg+status,2+status,0+pclath+cstack]
  2935                           ;bcd_a_dec@valor stored from wreg
  2936  0543  00F7               	movwf	bcd_a_dec@valor
  2937  0544                     l1776:
  2938                           
  2939                           ;main.c: 113:     PIR1bits.RCIF = 0;
  2940  0544  300F               	movlw	15
  2941  0545  0577               	andwf	bcd_a_dec@valor,w
  2942  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0548  00BF               	movwf	??_bcd_a_dec
  2945  0549  300A               	movlw	10
  2946  054A  00C0               	movwf	??_bcd_a_dec+1
  2947  054B  0840               	movf	??_bcd_a_dec+1,w
  2948  054C  00F3               	movwf	___bmul@multiplicand
  2949  054D  0877               	movf	bcd_a_dec@valor,w
  2950  054E  00C1               	movwf	??_bcd_a_dec+2
  2951  054F  3004               	movlw	4
  2952  0550                     u1575:
  2953  0550  1003               	clrc
  2954  0551  0CC1               	rrf	??_bcd_a_dec+2,f
  2955  0552  3EFF               	addlw	-1
  2956  0553  1D03               	skipz
  2957  0554  2D50               	goto	u1575
  2958  0555  0841               	movf	??_bcd_a_dec+2,w
  2959  0556  120A  118A  255F  120A  118A  	fcall	___bmul
  2960  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2961  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2962  055D  073F               	addwf	??_bcd_a_dec,w
  2963  055E                     l93:
  2964  055E  0008               	return
  2965  055F                     __end_of_bcd_a_dec:
  2966                           
  2967                           	psect	text17
  2968  055F                     __ptext17:	
  2969 ;; *************** function ___bmul *****************
  2970 ;; Defined at:
  2971 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  multiplier      1    wreg     unsigned char 
  2974 ;;  multiplicand    1    3[COMMON] unsigned char 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  multiplier      1    6[COMMON] unsigned char 
  2977 ;;  product         1    5[COMMON] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      unsigned char 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         1       0       0       0       0
  2988 ;;      Locals:         2       0       0       0       0
  2989 ;;      Temps:          1       0       0       0       0
  2990 ;;      Totals:         4       0       0       0       0
  2991 ;;Total ram usage:        4 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    2
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_bcd_a_dec
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function ___bmul
  3003  055F                     ___bmul:
  3004                           
  3005                           ;incstack = 0
  3006                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3007                           ;___bmul@multiplier stored from wreg
  3008  055F  00F6               	movwf	___bmul@multiplier
  3009  0560                     l1362:
  3010  0560  01F5               	clrf	___bmul@product
  3011  0561                     l1364:
  3012  0561  1C76               	btfss	___bmul@multiplier,0
  3013  0562  2D64               	goto	u941
  3014  0563  2D65               	goto	u940
  3015  0564                     u941:
  3016  0564  2D69               	goto	l1368
  3017  0565                     u940:
  3018  0565                     l1366:
  3019  0565  0873               	movf	___bmul@multiplicand,w
  3020  0566  00F4               	movwf	??___bmul
  3021  0567  0874               	movf	??___bmul,w
  3022  0568  07F5               	addwf	___bmul@product,f
  3023  0569                     l1368:
  3024  0569  1003               	clrc
  3025  056A  0DF3               	rlf	___bmul@multiplicand,f
  3026  056B                     l1370:
  3027  056B  1003               	clrc
  3028  056C  0CF6               	rrf	___bmul@multiplier,f
  3029  056D  0876               	movf	___bmul@multiplier,w
  3030  056E  1D03               	btfss	3,2
  3031  056F  2D71               	goto	u951
  3032  0570  2D72               	goto	u950
  3033  0571                     u951:
  3034  0571  2D61               	goto	l1364
  3035  0572                     u950:
  3036  0572                     l1372:
  3037  0572  0875               	movf	___bmul@product,w
  3038  0573                     l338:
  3039  0573  0008               	return
  3040  0574                     __end_of___bmul:
  3041                           
  3042                           	psect	text18
  3043  05DE                     __ptext18:	
  3044 ;; *************** function __baudios *****************
  3045 ;; Defined at:
  3046 ;;		line 5 in file "USART.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3060 ;;      Params:         0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0
  3063 ;;      Totals:         0       0       0       0       0
  3064 ;;Total ram usage:        0 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    2
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function __baudios
  3076  05DE                     __baudios:
  3077  05DE                     l1436:	
  3078                           ;incstack = 0
  3079                           ; Regs used in __baudios: [wreg]
  3080                           
  3081                           
  3082                           ;USART.c: 6:     SPBRG = 12;
  3083  05DE  300C               	movlw	12
  3084  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  3085  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  3086  05E1  0099               	movwf	25	;volatile
  3087  05E2                     l174:
  3088  05E2  0008               	return
  3089  05E3                     __end_of__baudios:
  3090                           
  3091                           	psect	text19
  3092  0525                     __ptext19:	
  3093 ;; *************** function _Write_USART_String *****************
  3094 ;; Defined at:
  3095 ;;		line 30 in file "USART.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  a               1    wreg     PTR unsigned char 
  3098 ;;		 -> BUFFER(20), 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  a               1    5[COMMON] PTR unsigned char 
  3101 ;;		 -> BUFFER(20), 
  3102 ;;  i               1    6[COMMON] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         2       0       0       0       0
  3114 ;;      Temps:          1       0       0       0       0
  3115 ;;      Totals:         3       0       0       0       0
  3116 ;;Total ram usage:        3 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    3
  3119 ;; This function calls:
  3120 ;;		_Write_USART
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _Write_USART_String
  3128  0525                     _Write_USART_String:
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3132                           ;Write_USART_String@a stored from wreg
  3133  0525  00F5               	movwf	Write_USART_String@a
  3134  0526                     l1530:
  3135                           
  3136                           ;USART.c: 31:     uint8_t i;;USART.c: 32:     for(i=0;a[i]!='\0';i++){
  3137  0526  01F6               	clrf	Write_USART_String@i
  3138  0527  2D37               	goto	l1536
  3139  0528                     l1532:
  3140                           
  3141                           ;USART.c: 33:         Write_USART(a[i]);
  3142  0528  0876               	movf	Write_USART_String@i,w
  3143  0529  0775               	addwf	Write_USART_String@a,w
  3144  052A  00F4               	movwf	??_Write_USART_String
  3145  052B  0874               	movf	??_Write_USART_String,w
  3146  052C  0084               	movwf	4
  3147  052D  0800               	movf	0,w
  3148  052E  120A  118A  2594  120A  118A  	fcall	_Write_USART
  3149  0533                     l1534:
  3150                           
  3151                           ;USART.c: 34:     }
  3152  0533  3001               	movlw	1
  3153  0534  00F4               	movwf	??_Write_USART_String
  3154  0535  0874               	movf	??_Write_USART_String,w
  3155  0536  07F6               	addwf	Write_USART_String@i,f
  3156  0537                     l1536:
  3157  0537  0876               	movf	Write_USART_String@i,w
  3158  0538  0775               	addwf	Write_USART_String@a,w
  3159  0539  00F4               	movwf	??_Write_USART_String
  3160  053A  0874               	movf	??_Write_USART_String,w
  3161  053B  0084               	movwf	4
  3162  053C  1383               	bcf	3,7	;select IRP bank0
  3163  053D  0800               	movf	0,w
  3164  053E  1D03               	btfss	3,2
  3165  053F  2D41               	goto	u1181
  3166  0540  2D42               	goto	u1180
  3167  0541                     u1181:
  3168  0541  2D28               	goto	l1532
  3169  0542                     u1180:
  3170  0542                     l192:
  3171  0542  0008               	return
  3172  0543                     __end_of_Write_USART_String:
  3173                           
  3174                           	psect	text20
  3175  0594                     __ptext20:	
  3176 ;; *************** function _Write_USART *****************
  3177 ;; Defined at:
  3178 ;;		line 26 in file "USART.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  a               1    wreg     unsigned char 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  a               1    3[COMMON] unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3192 ;;      Params:         0       0       0       0       0
  3193 ;;      Locals:         1       0       0       0       0
  3194 ;;      Temps:          0       0       0       0       0
  3195 ;;      Totals:         1       0       0       0       0
  3196 ;;Total ram usage:        1 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    2
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;;		_Write_USART_String
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _Write_USART
  3209  0594                     _Write_USART:
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _Write_USART: [wreg]
  3213                           ;Write_USART@a stored from wreg
  3214  0594  00F3               	movwf	Write_USART@a
  3215  0595                     l1342:
  3216  0595                     l183:	
  3217                           ;USART.c: 27:     while(!TRMT);
  3218                           
  3219  0595  1683               	bsf	3,5	;RP0=1, select bank1
  3220  0596  1303               	bcf	3,6	;RP1=0, select bank1
  3221  0597  1C98               	btfss	24,1	;volatile
  3222  0598  2D9A               	goto	u911
  3223  0599  2D9B               	goto	u910
  3224  059A                     u911:
  3225  059A  2D95               	goto	l183
  3226  059B                     u910:
  3227  059B                     l1344:
  3228                           
  3229                           ;USART.c: 28:     TXREG=a;
  3230  059B  0873               	movf	Write_USART@a,w
  3231  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3232  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3233  059E  0099               	movwf	25	;volatile
  3234  059F                     l186:
  3235  059F  0008               	return
  3236  05A0                     __end_of_Write_USART:
  3237                           
  3238                           	psect	text21
  3239  04D4                     __ptext21:	
  3240 ;; *************** function _I2C_Master_Read *****************
  3241 ;; Defined at:
  3242 ;;		line 74 in file "I2C.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  a               2    3[COMMON] unsigned short 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  temp            2    0[BANK0 ] unsigned short 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  2    3[COMMON] unsigned short 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, pclath, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         2       0       0       0       0
  3257 ;;      Locals:         0       2       0       0       0
  3258 ;;      Temps:          2       0       0       0       0
  3259 ;;      Totals:         4       2       0       0       0
  3260 ;;Total ram usage:        6 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    3
  3263 ;; This function calls:
  3264 ;;		_I2C_Master_Wait
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function _I2C_Master_Read
  3272  04D4                     _I2C_Master_Read:
  3273  04D4                     l1760:	
  3274                           ;incstack = 0
  3275                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3276                           
  3277                           
  3278                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3279  04D4  120A  118A  2587  120A  118A  	fcall	_I2C_Master_Wait
  3280  04D9                     l1762:
  3281                           
  3282                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3283  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  3284  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  3285  04DB  1591               	bsf	17,3	;volatile
  3286                           
  3287                           ;I2C.c: 79:     I2C_Master_Wait();
  3288  04DC  120A  118A  2587  120A  118A  	fcall	_I2C_Master_Wait
  3289  04E1                     l1764:
  3290                           
  3291                           ;I2C.c: 80:     temp = SSPBUF;
  3292  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  3293  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  3294  04E3  0813               	movf	19,w	;volatile
  3295  04E4  00F5               	movwf	??_I2C_Master_Read
  3296  04E5  01F6               	clrf	??_I2C_Master_Read+1
  3297  04E6  0875               	movf	??_I2C_Master_Read,w
  3298  04E7  00BF               	movwf	I2C_Master_Read@temp
  3299  04E8  0876               	movf	??_I2C_Master_Read+1,w
  3300  04E9  00C0               	movwf	I2C_Master_Read@temp+1
  3301  04EA                     l1766:
  3302                           
  3303                           ;I2C.c: 81:     I2C_Master_Wait();
  3304  04EA  120A  118A  2587  120A  118A  	fcall	_I2C_Master_Wait
  3305  04EF                     l1768:
  3306                           
  3307                           ;I2C.c: 82:     if(a == 1){
  3308  04EF  0373               	decf	I2C_Master_Read@a,w
  3309  04F0  0474               	iorwf	I2C_Master_Read@a+1,w
  3310  04F1  1D03               	btfss	3,2
  3311  04F2  2CF4               	goto	u1561
  3312  04F3  2CF5               	goto	u1560
  3313  04F4                     u1561:
  3314  04F4  2CF9               	goto	l152
  3315  04F5                     u1560:
  3316  04F5                     l1770:
  3317                           
  3318                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3319  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  3320  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  3321  04F7  1291               	bcf	17,5	;volatile
  3322                           
  3323                           ;I2C.c: 84:     }else{
  3324  04F8  2CFC               	goto	l153
  3325  04F9                     l152:
  3326                           
  3327                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3328  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  3329  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  3330  04FB  1691               	bsf	17,5	;volatile
  3331  04FC                     l153:	
  3332                           ;I2C.c: 86:     }
  3333                           
  3334                           
  3335                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3336  04FC  1611               	bsf	17,4	;volatile
  3337  04FD                     l1772:
  3338                           
  3339                           ;I2C.c: 88:     return temp;
  3340  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  3341  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  3342  04FF  0840               	movf	I2C_Master_Read@temp+1,w
  3343  0500  00F4               	movwf	?_I2C_Master_Read+1
  3344  0501  083F               	movf	I2C_Master_Read@temp,w
  3345  0502  00F3               	movwf	?_I2C_Master_Read
  3346  0503                     l154:
  3347  0503  0008               	return
  3348  0504                     __end_of_I2C_Master_Read:
  3349                           
  3350                           	psect	text22
  3351  0587                     __ptext22:	
  3352 ;; *************** function _I2C_Master_Wait *****************
  3353 ;; Defined at:
  3354 ;;		line 32 in file "I2C.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3368 ;;      Params:         0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0
  3371 ;;      Totals:         0       0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    2
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_I2C_Master_Start
  3379 ;;		_I2C_Master_Stop
  3380 ;;		_I2C_Master_Write
  3381 ;;		_I2C_Master_Read
  3382 ;;		_I2C_Master_RepeatedStart
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           
  3387                           ;psect for function _I2C_Master_Wait
  3388  0587                     _I2C_Master_Wait:
  3389  0587                     l1580:	
  3390                           ;incstack = 0
  3391                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3392                           
  3393  0587                     l134:	
  3394                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3395                           
  3396  0587  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0588  1303               	bcf	3,6	;RP1=0, select bank1
  3398  0589  1914               	btfsc	20,2	;volatile
  3399  058A  2D8C               	goto	u1191
  3400  058B  2D8D               	goto	u1190
  3401  058C                     u1191:
  3402  058C  2D87               	goto	l134
  3403  058D                     u1190:
  3404  058D                     l1582:
  3405  058D  0811               	movf	17,w	;volatile
  3406  058E  391F               	andlw	31
  3407  058F  1D03               	btfss	3,2
  3408  0590  2D92               	goto	u1201
  3409  0591  2D93               	goto	u1200
  3410  0592                     u1201:
  3411  0592  2D87               	goto	l134
  3412  0593                     u1200:
  3413  0593                     l137:
  3414  0593  0008               	return
  3415  0594                     __end_of_I2C_Master_Wait:
  3416                           
  3417                           	psect	text23
  3418  042C                     __ptext23:	
  3419 ;; *************** function _ISR *****************
  3420 ;; Defined at:
  3421 ;;		line 59 in file "main.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0, pclath, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3435 ;;      Params:         0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0
  3437 ;;      Temps:          3       0       0       0       0
  3438 ;;      Totals:         3       0       0       0       0
  3439 ;;Total ram usage:        3 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    1
  3442 ;; This function calls:
  3443 ;;		_Read_USART
  3444 ;; This function is called by:
  3445 ;;		Interrupt level 1
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _ISR
  3451  042C                     _ISR:
  3452  042C                     i1l1142:
  3453                           
  3454                           ;main.c: 60:         I2C_Master_Write(0xD1);
  3455  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3456  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3457  042E  1E8C               	btfss	12,5	;volatile
  3458  042F  2C31               	goto	u58_21
  3459  0430  2C32               	goto	u58_20
  3460  0431                     u58_21:
  3461  0431  2C61               	goto	i1l82
  3462  0432                     u58_20:
  3463  0432                     i1l1144:
  3464                           
  3465                           ;main.c: 61:         seg = (I2C_Master_Read(1));
  3466  0432  128C               	bcf	12,5	;volatile
  3467  0433                     i1l1146:
  3468                           
  3469                           ;main.c: 62:         I2C_Master_Read(1);
  3470  0433  120A  118A  25D6  120A  118A  	fcall	_Read_USART
  3471  0438  00F0               	movwf	??_ISR
  3472  0439  0870               	movf	??_ISR,w
  3473  043A  00FA               	movwf	_lecUSART
  3474  043B                     i1l1148:
  3475                           
  3476                           ;main.c: 63:         I2C_Master_Stop();
  3477  043B  302B               	movlw	43
  3478  043C  067A               	xorwf	_lecUSART,w
  3479  043D  1D03               	btfss	3,2
  3480  043E  2C40               	goto	u59_21
  3481  043F  2C41               	goto	u59_20
  3482  0440                     u59_21:
  3483  0440  2C45               	goto	i1l1152
  3484  0441                     u59_20:
  3485  0441                     i1l1150:
  3486                           
  3487                           ;main.c: 64: 
  3488  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3489  0442  1303               	bcf	3,6	;RP1=0, select bank0
  3490  0443  1406               	bsf	6,0	;volatile
  3491                           
  3492                           ;main.c: 65:         I2C_Master_Start();
  3493  0444  2C4E               	goto	i1l1156
  3494  0445                     i1l1152:
  3495  0445  302D               	movlw	45
  3496  0446  067A               	xorwf	_lecUSART,w
  3497  0447  1D03               	btfss	3,2
  3498  0448  2C4A               	goto	u60_21
  3499  0449  2C4B               	goto	u60_20
  3500  044A                     u60_21:
  3501  044A  2C4E               	goto	i1l1156
  3502  044B                     u60_20:
  3503  044B                     i1l1154:
  3504                           
  3505                           ;main.c: 67:         I2C_Master_Write(0);
  3506  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3507  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3508  044D  1006               	bcf	6,0	;volatile
  3509  044E                     i1l1156:
  3510                           
  3511                           ;main.c: 69:         _delay((unsigned long)((200)*(8000000/4000.0)));
  3512  044E  3031               	movlw	49
  3513  044F  067A               	xorwf	_lecUSART,w
  3514  0450  1D03               	btfss	3,2
  3515  0451  2C53               	goto	u61_21
  3516  0452  2C54               	goto	u61_20
  3517  0453                     u61_21:
  3518  0453  2C58               	goto	i1l1160
  3519  0454                     u61_20:
  3520  0454                     i1l1158:
  3521                           
  3522                           ;main.c: 70: 
  3523  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0456  1486               	bsf	6,1	;volatile
  3526                           
  3527                           ;main.c: 71:         segundos = bcd_a_dec(seg);
  3528  0457  2C61               	goto	i1l82
  3529  0458                     i1l1160:
  3530  0458  3032               	movlw	50
  3531  0459  067A               	xorwf	_lecUSART,w
  3532  045A  1D03               	btfss	3,2
  3533  045B  2C5D               	goto	u62_21
  3534  045C  2C5E               	goto	u62_20
  3535  045D                     u62_21:
  3536  045D  2C61               	goto	i1l82
  3537  045E                     u62_20:
  3538  045E                     i1l1162:
  3539                           
  3540                           ;main.c: 73:         Write_USART_String(BUFFER);
  3541  045E  1283               	bcf	3,5	;RP0=0, select bank0
  3542  045F  1303               	bcf	3,6	;RP1=0, select bank0
  3543  0460  1086               	bcf	6,1	;volatile
  3544  0461                     i1l82:
  3545  0461  0872               	movf	??_ISR+2,w
  3546  0462  008A               	movwf	10
  3547  0463  0E71               	swapf	??_ISR+1,w
  3548  0464  0083               	movwf	3
  3549  0465  0EFE               	swapf	btemp,f
  3550  0466  0E7E               	swapf	btemp,w
  3551  0467  0009               	retfie
  3552  0468                     __end_of_ISR:
  3553                           
  3554                           	psect	intentry
  3555  0004                     __pintentry:	
  3556                           ;incstack = 0
  3557                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3558                           
  3559  0004                     interrupt_function:
  3560  007E                     saved_w	set	btemp
  3561  0004  00FE               	movwf	btemp
  3562  0005  0E03               	swapf	3,w
  3563  0006  00F1               	movwf	??_ISR+1
  3564  0007  080A               	movf	10,w
  3565  0008  00F2               	movwf	??_ISR+2
  3566  0009  120A  118A  2C2C   	ljmp	_ISR
  3567                           
  3568                           	psect	text24
  3569  05D6                     __ptext24:	
  3570 ;; *************** function _Read_USART *****************
  3571 ;; Defined at:
  3572 ;;		line 36 in file "USART.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      unsigned char 
  3579 ;; Registers used:
  3580 ;;		wreg
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3586 ;;      Params:         0       0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0
  3589 ;;      Totals:         0       0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_ISR
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function _Read_USART
  3601  05D6                     _Read_USART:
  3602  05D6                     i1l1022:	
  3603                           ;incstack = 0
  3604                           ; Regs used in _Read_USART: [wreg]
  3605                           
  3606  05D6                     i1l195:	
  3607                           ;USART.c: 37:   while(!RCIF);
  3608                           
  3609  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3610  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3611  05D8  1E8C               	btfss	12,5	;volatile
  3612  05D9  2DDB               	goto	u47_21
  3613  05DA  2DDC               	goto	u47_20
  3614  05DB                     u47_21:
  3615  05DB  2DD6               	goto	i1l195
  3616  05DC                     u47_20:
  3617  05DC                     i1l1024:
  3618                           
  3619                           ;USART.c: 38:   return RCREG;
  3620  05DC  081A               	movf	26,w	;volatile
  3621  05DD                     i1l198:
  3622  05DD  0008               	return
  3623  05DE                     __end_of_Read_USART:
  3624  007E                     btemp	set	126	;btemp
  3625  007E                     wtemp0	set	126
  3626                           
  3627                           	psect	config
  3628                           
  3629                           ;Config register CONFIG1 @ 0x2007
  3630                           ;	Oscillator Selection bits
  3631                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  3632                           ;	Watchdog Timer Enable bit
  3633                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3634                           ;	Power-up Timer Enable bit
  3635                           ;	PWRTE = OFF, PWRT disabled
  3636                           ;	RE3/MCLR pin function select bit
  3637                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3638                           ;	Code Protection bit
  3639                           ;	CP = OFF, Program memory code protection is disabled
  3640                           ;	Data Code Protection bit
  3641                           ;	CPD = OFF, Data memory code protection is disabled
  3642                           ;	Brown Out Reset Selection bits
  3643                           ;	BOREN = OFF, BOR disabled
  3644                           ;	Internal External Switchover bit
  3645                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3646                           ;	Fail-Safe Clock Monitor Enabled bit
  3647                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3648                           ;	Low Voltage Programming Enable bit
  3649                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3650                           ;	In-Circuit Debugger Mode bit
  3651                           ;	DEBUG = 0x1, unprogrammed default
  3652  2007                     	org	8199
  3653  2007  20D6               	dw	8406
  3654                           
  3655                           ;Config register CONFIG2 @ 0x2008
  3656                           ;	Brown-out Reset Selection bit
  3657                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3658                           ;	Flash Program Memory Self Write Enable bits
  3659                           ;	WRT = OFF, Write protection off
  3660  2008                     	org	8200
  3661  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_bcd_a_dec
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _dec_a_bcd->___awdiv
    _dec_a_bcd->___awmod
    _bcd_a_dec->___bmul
    _Write_USART_String->_Write_USART

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _set_tiempo->_I2C_Master_Write
    _dec_a_bcd->___awdiv
    _I2C_Master_Write->_dec_a_bcd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6620
                                             22 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                        _Write_USART
                 _Write_USART_String
                           __baudios
                          _bcd_a_dec
                       _config_rcsta
                       _config_txsta
                         _set_tiempo
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1554
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _set_tiempo                                           3     3      0    2591
                                             12 BANK0      3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _dec_a_bcd
 ---------------------------------------------------------------------------------
 (2) _dec_a_bcd                                            6     6      0    1300
                                              4 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                             10 BANK0      2     0      2
                    _I2C_Master_Wait
                          _dec_a_bcd (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bcd_a_dec                                            4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     145
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     245
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (5) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
     _dec_a_bcd (ARG)
       ___awdiv
       ___awmod
   _Write_USART
   _Write_USART_String
     _Write_USART
   __baudios
   _bcd_a_dec
     ___bmul
   _config_rcsta
   _config_txsta
   _set_tiempo
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
       _dec_a_bcd (ARG)
         ___awdiv
         ___awmod
     _dec_a_bcd
       ___awdiv
       ___awmod
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      43       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      43      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 04 21:00:55 2021

                          pc 0002               ___bmul@product 0075                           l93 055E  
                         l87 0122                           l96 04D3                           l99 027D  
               ___awdiv@sign 0040                           fsr 0004         __size_of_Write_USART 000C  
                        l102 0524                          l131 04A1                          l140 05C5  
                        l134 0587                          l152 04F9                          l137 0593  
                        l153 04FC                          l154 0503                          l146 05BC  
                        l180 05D5                          l308 0108                          l149 05A9  
                        l174 05E2                          l183 0595                          l192 0542  
                        l177 05B3                          l186 059F                          l338 0573  
                        l348 034E                          l465 02E6                          l478 03A9  
                        l584 03EF                          l594 042B                          _GIE 005F  
                        _ISR 042C                          u910 059B                          u911 059A  
                        u940 0565                          u941 0564                          u950 0572  
                        u951 0571                          _dia 0024                          _mes 0022  
                        _min 0078                          _seg 0028                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0040  __size_of_Write_USART_String 001E  
                       ?_ISR 0070                         l1410 0406                         l1402 03F0  
                       l1412 040A                         l1404 03F8                         l1420 0427  
                       l1342 0595                         l1414 0414                         l1406 03FB  
                       l1344 059B                         l1440 05CE                         l1600 0337  
                       l1416 041A                         l1408 0402                         l1530 0526  
                       l1370 056B                         l1362 0560                         l1442 05D4  
                       l1610 0281                         l1602 0340                         l1418 0421  
                       l1532 0528                         l1436 05DE                         l1372 0572  
                       l1364 0561                         l1700 05B9                         l1620 0295  
                       l1612 0285                         l1604 0346                         l1534 0533  
                       l1366 0565                         l1438 05AA                         l1630 02AB  
                       l1622 0299                         l1614 028A                         l1702 04A5  
                       l1710 046F                         l1536 0537                         l1368 0569  
                       l1640 02CB                         l1632 02AF                         l1624 029B  
                       l1616 028C                         l1608 027E                         l1712 049E  
                       l1720 03AE                         l1800 0067                         l1642 02D2  
                       l1634 02B3                         l1626 02A1                         l1618 0290  
                       l1714 049F                         l1706 0468                         l1730 03C6  
                       l1722 03B4                         l1810 0072                         l1802 006B  
                       l1580 0587                         l1636 02C4                         l1628 02A4  
                       l1644 02D8                         l1660 035D                         l1652 034F  
                       l1716 04A0                         l1708 046C                         l1732 03D7  
                       l1724 03B7                         l1740 03EB                         l1820 00A5  
                       l1804 0070                         l1582 058D                         l1646 02DD  
                       l1638 02CA                         l1670 0376                         l1662 0361  
                       l1654 0352                         l1590 0309                         l1750 0513  
                       l1734 03DD                         l1726 03BE                         l1718 03AA  
                       l1830 00E9                         l1822 00A9                         l1814 008E  
                       l1760 04D4                         l1648 02E2                         l1680 0395  
                       l1672 037A                         l1664 0366                         l1656 0356  
                       l1592 030D                         l1584 02E7                         l1752 0516  
                       l1744 0504                         l1736 03DE                         l1728 03C2  
                       l1824 00AE                         l1816 0098                         l1832 00F2  
                       l1770 04F5                         l1762 04D9                         l1690 05BD  
                       l1674 037E                         l1666 036C                         l1682 039B  
                       l1658 035B                         l1594 0316                         l1586 02F9  
                       l1754 0517                         l1746 050F                         l1738 03E5  
                       l1826 00DE                         l1818 009E                         l1834 0104  
                       l1850 019C                         l1842 0109                         l1772 04FD  
                       l1764 04E1                         l1692 05C2                         l1684 03A0  
                       l1676 0388                         l1668 036F                         l1756 01D0  
                       l1596 0328                         l1588 02FC                         l1748 0510  
                       l1828 00E5                         l1780 0022                         l1852 01A9  
                       l1844 0113                         l1766 04EA                         l1694 05A0  
                       l1686 03A5                         l1678 038E                         l1758 026E  
                       l1598 0336                         l1782 0027                         l1854 01BA  
                       l1846 0118                         l1768 04EF                         l1776 0544  
                       l1696 05A5                         l1792 003A                         l1784 002D  
                       l1856 01C0                         l1848 018D                         l1698 05B4  
                       l1794 0057                         l1786 0034                         l1858 01C6  
                       l1796 005F                         l1884 004C                         l1788 0039  
                       l1798 0063                         STR_1 0584                         u1030 03F8  
                       u1031 03F7                         u1200 0593                         u1201 0592  
                       u1210 02F9                         u1050 040A                         u1211 02F8  
                       u1051 0409                         u1300 02A1                         u1060 0414  
                       u1301 02A0                         u1061 0413                         u1045 03FC  
                       u1230 030D                         u1231 030C                         u1320 02B3  
                       u1400 036C                         u1080 0427                         u1321 02B2  
                       u1401 036B                         u1225 02FE                         u1081 0426  
                       u1065 0410                         u1250 0328                         u1315 02A5  
                       u1251 0327                         u1075 041B                         u1180 0542  
                       u1340 02C4                         u1420 037E                         u1181 0541  
                       u1341 02C3                         u1421 037D                         u1245 030F  
                       u1190 058D                         u1430 0388                         u1270 0346  
                       u1510 03C6                         u1191 058C                         u1335 02B4  
                       u1431 0387                         u1415 0370                         u1271 0345  
                       u1255 0324                         u1511 03C5                         u1360 02D8  
                       u1280 0285                         u1600 008D                         u1361 02D7  
                       u1345 02C0                         u1281 0284                         u1265 0338  
                       u1505 03B8                         u1601 008C                         u1370 02DD  
                       u1290 0290                         u1450 039B                         u1530 03D7  
                       u1610 0098                         u1371 02DC                         u1355 02CC  
                       u1291 028F                         u1451 039A                         u1435 0384  
                       u1531 03D6                         u1611 0097                         u1460 03A0  
                       u1380 0356                         u1620 009E                         u1461 039F  
                       u1445 038F                         u1381 0355                         u1525 03C7  
                       u1621 009D                         u1605 0089                         u1390 0361  
                       u1550 03EB                         u1630 00F2                         u1391 0360  
                       u1551 03EA                         u1535 03D3                         u1631 00F1  
                       u1560 04F5                         u1480 047F                         u1640 0104  
                       u1561 04F4                         u1545 03DF                         u1641 0103  
                       u1490 03B4                         u1475 04BA                         u1491 03B3  
                       u1580 002D                         u1485 047A                         u1581 002C  
                       u1590 0067                         u1575 0550                         u1591 0066  
                       u1657 0195                         u1667 0276                         _PEIE 005E  
                       _RCIF 0065                         i1l82 0461                         _TRMT 04C1  
                       _main 0109                         _hora 0026                         _year 0020  
                       btemp 007E                         start 000C               ??_config_rcsta 0073  
             ??_config_txsta 0073            ___bmul@multiplier 0076                        ??_ISR 0070  
           ?_I2C_Master_Init 004C             ?_I2C_Master_Read 0073             ?_I2C_Master_Wait 0070  
           ?_I2C_Master_Stop 0070                        ?_main 0070              __end_of___awdiv 02E7  
            __end_of___awmod 03AA                        _ANSEL 0188              __end_of___lldiv 034F  
            ___awdiv@divisor 0073              __end_of___lwdiv 03F0              __end_of___lwmod 042C  
                      i1l195 05D6                        i1l198 05DD              ___awdiv@counter 003F  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _PORTC 0007                        u60_20 044B                        u60_21 044A  
                      u61_20 0454                        u61_21 0453                        u62_20 045E  
                      u62_21 045D                        u47_20 05DC                        u47_21 05DB  
                      _TRISB 0086                        _SSPIE 0463                        u58_20 0432  
                      _SSPIF 0063                        u58_21 0431                        u59_20 0441  
                      u59_21 0440                        _TXREG 0019              __end_of_dpowers 0584  
                      _setup 0504                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0109              __initialization 000F  
                 _Read_USART 05D6                 __end_of_main 01D0                       ??_main 0055  
          ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0049           ??_I2C_Master_Start 0073  
         ??_I2C_Master_Write 0078             ___awdiv@dividend 0075                       ?_setup 0070  
                     _ANSELH 0189             __end_of__baudios 05E3                       _BUFFER 002B  
                     i1l1022 05D6                       i1l1024 05DC                       i1l1150 0441  
                     i1l1142 042C                       i1l1160 0458                       i1l1152 0445  
                     i1l1144 0432                       i1l1162 045E                       i1l1154 044B  
                     i1l1146 0433                       i1l1156 044E                       i1l1148 043B  
                     i1l1158 0454                       _SSPADD 0093                       _TRISC3 043B  
                     _TRISC4 043C                       _SSPCON 0014                       _SSPBUF 0013  
                     ___bmul 055F                    ??___awdiv 0077                    ??___awmod 0077  
                  ??___lldiv 0073                    ??___lwdiv 0077                    ??___lwmod 0046  
           ___awdiv@quotient 0041              ___awmod@divisor 0073               bcd_a_dec@valor 0077  
            ___awmod@counter 003F         __end_of_config_rcsta 05D6                       saved_w 007E  
       __end_of_config_txsta 05B4                    ??_sprintf 004B      __end_of__initialization 001B  
         __size_of_bcd_a_dec 001C          ___bmul@multiplicand 0073           __size_of_dec_a_bcd 0032  
                ?_Read_USART 0070               __pcstackCOMMON 0070                __end_of_setup 0525  
                    ??_setup 0078                 Write_USART@a 0073                   __pbssBANK0 0020  
                 __pmaintext 0109                      ?___bmul 0073                ??_Write_USART 0073  
                 __pintentry 0004                    ?__baudios 0070            __end_of_bcd_a_dec 055F  
 __end_of_Write_USART_String 0543            __end_of_dec_a_bcd 04D4          __size_of_Read_USART 0008  
                    _SSPCON2 0091                      _SSPSTAT 0094                   __stringtab 0574  
            __size_of___bmul 0015                      ___awdiv 027E                      ___awmod 034F  
                    ___lldiv 02E7                      ___lwdiv 03AA                      ___lwmod 03F0  
      __size_of_config_rcsta 0008                   ??__baudios 0073                      __ptext1 001F  
                    __ptext2 03F0        __size_of_config_txsta 000A                      __ptext3 03AA  
                    __ptext4 0504                      __ptext5 0468                      __ptext6 02E7  
                    __ptext7 01D0                      __ptext8 04A2                      __ptext9 034F  
               __size_of_ISR 003C                      _dpowers 057A          __end_of_Write_USART 05A0  
           ___awmod@dividend 0075     __size_of_I2C_Master_Init 003A     __size_of_I2C_Master_Read 0030  
   __size_of_I2C_Master_Wait 000D     __size_of_I2C_Master_Stop 0009                      _sprintf 001F  
                    clrloop0 05C7         end_of_initialization 001B    __size_of_I2C_Master_Start 0009  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 003F              ___lldiv@counter 004B  
               _config_rcsta 05CE                 _config_txsta 05AA                    _RCSTAbits 0018  
           I2C_Master_Init@c 004C             I2C_Master_Read@a 0073                   _set_tiempo 01D0  
                  _PORTBbits 0006                    _TRISCbits 0087                    _TXSTAbits 0098  
               ??_Read_USART 0070               __end_of___bmul 0574                  _Write_USART 0594  
        start_initialization 000F                  __end_of_ISR 0468           __end_of_Read_USART 05DE  
          ??_I2C_Master_Init 0074            ??_I2C_Master_Read 0075            ??_I2C_Master_Wait 0073  
          ??_I2C_Master_Stop 0073                     ??___bmul 0074                  ?_set_tiempo 0070  
          __size_of__baudios 0005                  __pbssCOMMON 0078                    ___latbits 0002  
              __pcstackBANK0 003F                    _bcd_a_dec 0543                    _dec_a_bcd 04A2  
                sprintf@flag 004F           _Write_USART_String 0525                  sprintf@prec 0050  
           _I2C_Master_Start 05BD             _I2C_Master_Write 05A0             ___lwdiv@dividend 0075  
        ?_Write_USART_String 0070                     ?___awdiv 0073                     ?___awmod 0073  
                   ?___lldiv 003F                     ?___lwdiv 0073                     ?___lwmod 0042  
                  __pstrings 0574         ??_Write_USART_String 0074                   ?_bcd_a_dec 0070  
           ___lwdiv@quotient 0040                     ?_sprintf 0048          __size_of_set_tiempo 00AE  
             __size_of_setup 0021                   ?_dec_a_bcd 0070            interrupt_function 0004  
                  clear_ram0 05C6                     _PIE1bits 008C                     _PIR1bits 000C  
                __stringbase 0579          I2C_Master_Read@temp 003F                 ?_Write_USART 0070  
           __size_of___awdiv 0069             __size_of___awmod 005B             __size_of___lldiv 0068  
           __size_of___lwdiv 0046             __size_of___lwmod 003C                     __baudios 05DE  
         __end_of__stringtab 057A                   sprintf@val 0051              _I2C_Master_Init 0468  
            _I2C_Master_Read 04D4              _I2C_Master_Wait 0587              _I2C_Master_Stop 05B4  
                   _lecUSART 007A              ___lwdiv@divisor 0073                  ??_bcd_a_dec 003F  
            ___lwdiv@counter 003F                     __ptext10 027E                     __ptext11 05A0  
                   __ptext20 0594                     __ptext12 05B4                     __ptext21 04D4  
                   __ptext13 05BD                     __ptext22 0587                     __ptext14 05AA  
                   __ptext23 042C                     __ptext15 05CE                     __ptext24 05D6  
                   __ptext16 0543                     __ptext17 055F                     __ptext18 05DE  
                   __ptext19 0525             __size_of_sprintf 00EA                  ??_dec_a_bcd 0043  
              __size_of_main 00C7                     _segundos 002A                 ??_set_tiempo 004B  
   __end_of_I2C_Master_Start 05C6     __end_of_I2C_Master_Write 05AA                   _INTCONbits 000B  
        Write_USART_String@a 0075          Write_USART_String@i 0076                     intlevel1 0000  
         __end_of_set_tiempo 027E                    sprintf@ap 004E                    sprintf@sp 0053  
           ___lwmod@dividend 0044             ___lldiv@dividend 0043                    stringcode 0574  
    __end_of_I2C_Master_Init 04A2      __end_of_I2C_Master_Read 0504      __end_of_I2C_Master_Wait 0594  
    __end_of_I2C_Master_Stop 05BD               dec_a_bcd@valor 0048                     sprintf@c 0054  
                   sprintf@f 0048             ___lldiv@quotient 0047            I2C_Master_Write@d 0049  
            ___lwmod@divisor 0042              ___lwmod@counter 0047                     stringdir 0574  
                   stringtab 0574                  _SSPCON2bits 0091                ?_config_rcsta 0070  
              ?_config_txsta 0070  
