

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 23:49:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376                           
   377                           	psect	strings
   378  02B5                     __pstrings:
   379  02B5                     stringtab:
   380  02B5                     __stringtab:
   381  02B5                     stringcode:	
   382                           ;	String table - string pointers are 1 byte each
   383                           
   384  02B5                     stringdir:
   385  02B5  3002               	movlw	high stringdir
   386  02B6  008A               	movwf	10
   387  02B7  0804               	movf	4,w
   388  02B8  0A84               	incf	4,f
   389  02B9  0782               	addwf	2,f
   390  02BA                     __stringbase:
   391  02BA  3400               	retlw	0
   392  02BB                     __end_of__stringtab:
   393  02BB                     _dpowers:
   394  02BB  3401               	retlw	1
   395  02BC  3400               	retlw	0
   396  02BD  340A               	retlw	10
   397  02BE  3400               	retlw	0
   398  02BF  3464               	retlw	100
   399  02C0  3400               	retlw	0
   400  02C1  34E8               	retlw	232
   401  02C2  3403               	retlw	3
   402  02C3  3410               	retlw	16
   403  02C4  3427               	retlw	39
   404  02C5                     __end_of_dpowers:
   405  02C5                     STR_1:
   406  02C5  3425               	retlw	37	;'%'
   407  02C6  3464               	retlw	100	;'d'
   408  02C7  3400               	retlw	0
   409                           
   410                           	psect	nvBANK0
   411  0054                     __pnvBANK0:
   412  0054                     _seg:
   413  0054                     	ds	2
   414  0019                     _TXREG	set	25
   415  001A                     _RCREG	set	26
   416  0018                     _RCSTAbits	set	24
   417  0013                     _SSPBUF	set	19
   418  0014                     _SSPCON	set	20
   419  000C                     _PIR1bits	set	12
   420  000B                     _INTCONbits	set	11
   421  0006                     _PORTB	set	6
   422  0006                     _PORTBbits	set	6
   423  0063                     _SSPIF	set	99
   424  005E                     _PEIE	set	94
   425  005F                     _GIE	set	95
   426  0065                     _RCIF	set	101
   427  0098                     _TXSTAbits	set	152
   428  0099                     _SPBRG	set	153
   429  0091                     _SSPCON2bits	set	145
   430  0087                     _TRISCbits	set	135
   431  0094                     _SSPSTAT	set	148
   432  0093                     _SSPADD	set	147
   433  0091                     _SSPCON2	set	145
   434  008C                     _PIE1bits	set	140
   435  0086                     _TRISB	set	134
   436  04C1                     _TRMT	set	1217
   437  0463                     _SSPIE	set	1123
   438  043C                     _TRISC4	set	1084
   439  043B                     _TRISC3	set	1083
   440  047E                     _IRCF2	set	1150
   441  047D                     _IRCF1	set	1149
   442  047C                     _IRCF0	set	1148
   443  0189                     _ANSELH	set	393
   444  0188                     _ANSEL	set	392
   445                           
   446                           	psect	cinit
   447  000F                     start_initialization:	
   448                           ; #config settings
   449                           
   450  000F                     __initialization:
   451                           
   452                           ; Clear objects allocated to COMMON
   453  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   454  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   455                           
   456                           ; Clear objects allocated to BANK0
   457  0011  1383               	bcf	3,7	;select IRP bank0
   458  0012  3020               	movlw	low __pbssBANK0
   459  0013  0084               	movwf	4
   460  0014  303E               	movlw	low (__pbssBANK0+30)
   461  0015  120A  118A  22DE  120A  118A  	fcall	clear_ram0
   462  001A                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  001A                     __end_of__initialization:
   466  001A  0183               	clrf	3
   467  001B  120A  118A  2A2C   	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bssCOMMON
   470  0079                     __pbssCOMMON:
   471  0079                     _lecUSART:
   472  0079                     	ds	1
   473  007A                     _segundos:
   474  007A                     	ds	1
   475                           
   476                           	psect	bssBANK0
   477  0020                     __pbssBANK0:
   478  0020                     _year:
   479  0020                     	ds	2
   480  0022                     _mes:
   481  0022                     	ds	2
   482  0024                     _dia:
   483  0024                     	ds	2
   484  0026                     _hora:
   485  0026                     	ds	2
   486  0028                     _min:
   487  0028                     	ds	2
   488  002A                     _BUFFER:
   489  002A                     	ds	20
   490                           
   491                           	psect	clrtext
   492  02DE                     clear_ram0:	
   493                           ;	Called with FSR containing the base address, and
   494                           ;	W with the last address+1
   495                           
   496  02DE  0064               	clrwdt	;clear the watchdog before getting into this loop
   497  02DF                     clrloop0:
   498  02DF  0180               	clrf	0	;clear RAM location pointed to by FSR
   499  02E0  0A84               	incf	4,f	;increment pointer
   500  02E1  0604               	xorwf	4,w	;XOR with final address
   501  02E2  1903               	btfsc	3,2	;have we reached the end yet?
   502  02E3  3400               	retlw	0	;all done for this memory range, return
   503  02E4  0604               	xorwf	4,w	;XOR again to restore value
   504  02E5  2ADF               	goto	clrloop0	;do the next byte
   505                           
   506                           	psect	cstackCOMMON
   507  0070                     __pcstackCOMMON:
   508  0070                     ?_Read_USART:
   509  0070                     ??_Read_USART:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_setup:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?__baudios:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_config_txsta:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_config_rcsta:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_Write_USART_String:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_ISR:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_ISR:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_main:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_Write_USART:	
   537                           ; 1 bytes @ 0x0
   538                           
   539                           
   540                           ; 1 bytes @ 0x0
   541  0070                     	ds	3
   542  0073                     ??__baudios:
   543  0073                     ??_config_txsta:	
   544                           ; 1 bytes @ 0x3
   545                           
   546  0073                     ??_config_rcsta:	
   547                           ; 1 bytes @ 0x3
   548                           
   549  0073                     ??_Write_USART:	
   550                           ; 1 bytes @ 0x3
   551                           
   552  0073                     ??___lldiv:	
   553                           ; 1 bytes @ 0x3
   554                           
   555  0073                     ?___lwdiv:	
   556                           ; 1 bytes @ 0x3
   557                           
   558  0073                     Write_USART@a:	
   559                           ; 2 bytes @ 0x3
   560                           
   561  0073                     ___lwdiv@divisor:	
   562                           ; 1 bytes @ 0x3
   563                           
   564                           
   565                           ; 2 bytes @ 0x3
   566  0073                     	ds	1
   567  0074                     ??_Write_USART_String:
   568  0074                     ___lldiv@quotient:	
   569                           ; 1 bytes @ 0x4
   570                           
   571                           
   572                           ; 4 bytes @ 0x4
   573  0074                     	ds	1
   574  0075                     Write_USART_String@a:
   575  0075                     ___lwdiv@dividend:	
   576                           ; 1 bytes @ 0x5
   577                           
   578                           
   579                           ; 2 bytes @ 0x5
   580  0075                     	ds	1
   581  0076                     Write_USART_String@i:
   582                           
   583                           ; 1 bytes @ 0x6
   584  0076                     	ds	1
   585  0077                     ??___lwdiv:
   586                           
   587                           ; 1 bytes @ 0x7
   588  0077                     	ds	1
   589  0078                     ??___lwmod:
   590  0078                     ___lldiv@counter:	
   591                           ; 1 bytes @ 0x8
   592                           
   593                           
   594                           ; 1 bytes @ 0x8
   595  0078                     	ds	1
   596  0079                     ??_setup:
   597                           
   598                           	psect	cstackBANK0
   599  003E                     __pcstackBANK0:	
   600                           ; 1 bytes @ 0x9
   601                           
   602  003E                     ?___lldiv:
   603  003E                     ___lwdiv@counter:	
   604                           ; 4 bytes @ 0x0
   605                           
   606  003E                     ___lldiv@divisor:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 4 bytes @ 0x0
   611  003E                     	ds	1
   612  003F                     ___lwdiv@quotient:
   613                           
   614                           ; 2 bytes @ 0x1
   615  003F                     	ds	2
   616  0041                     ?___lwmod:
   617  0041                     ___lwmod@divisor:	
   618                           ; 2 bytes @ 0x3
   619                           
   620                           
   621                           ; 2 bytes @ 0x3
   622  0041                     	ds	1
   623  0042                     ___lldiv@dividend:
   624                           
   625                           ; 4 bytes @ 0x4
   626  0042                     	ds	1
   627  0043                     ___lwmod@dividend:
   628                           
   629                           ; 2 bytes @ 0x5
   630  0043                     	ds	2
   631  0045                     ___lwmod@counter:
   632                           
   633                           ; 1 bytes @ 0x7
   634  0045                     	ds	1
   635  0046                     ?_I2C_Master_Init:
   636  0046                     ?_sprintf:	
   637                           ; 1 bytes @ 0x8
   638                           
   639  0046                     sprintf@f:	
   640                           ; 2 bytes @ 0x8
   641                           
   642  0046                     I2C_Master_Init@c:	
   643                           ; 1 bytes @ 0x8
   644                           
   645                           
   646                           ; 4 bytes @ 0x8
   647  0046                     	ds	3
   648  0049                     ??_sprintf:
   649                           
   650                           ; 1 bytes @ 0xB
   651  0049                     	ds	1
   652  004A                     ??_I2C_Master_Init:
   653                           
   654                           ; 1 bytes @ 0xC
   655  004A                     	ds	2
   656  004C                     sprintf@ap:
   657                           
   658                           ; 1 bytes @ 0xE
   659  004C                     	ds	1
   660  004D                     sprintf@flag:
   661                           
   662                           ; 1 bytes @ 0xF
   663  004D                     	ds	1
   664  004E                     sprintf@prec:
   665                           
   666                           ; 1 bytes @ 0x10
   667  004E                     	ds	1
   668  004F                     sprintf@val:
   669                           
   670                           ; 2 bytes @ 0x11
   671  004F                     	ds	2
   672  0051                     sprintf@sp:
   673                           
   674                           ; 1 bytes @ 0x13
   675  0051                     	ds	1
   676  0052                     sprintf@c:
   677                           
   678                           ; 1 bytes @ 0x14
   679  0052                     	ds	1
   680  0053                     ??_main:
   681                           
   682                           ; 1 bytes @ 0x15
   683  0053                     	ds	1
   684                           
   685                           	psect	maintext
   686  022C                     __pmaintext:	
   687 ;;
   688 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   689 ;;
   690 ;; *************** function _main *****************
   691 ;; Defined at:
   692 ;;		line 82 in file "main.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : B00/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   706 ;;      Params:         0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0
   708 ;;      Temps:          0       1       0       0       0
   709 ;;      Totals:         0       1       0       0       0
   710 ;;Total ram usage:        1 bytes
   711 ;; Hardware stack levels required when called:    5
   712 ;; This function calls:
   713 ;;		_Write_USART_String
   714 ;;		__baudios
   715 ;;		_config_rcsta
   716 ;;		_config_txsta
   717 ;;		_setup
   718 ;;		_sprintf
   719 ;; This function is called by:
   720 ;;		Startup code after reset
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _main
   726  022C                     _main:
   727  022C                     l1469:	
   728                           ;incstack = 0
   729                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   730                           
   731  022C  120A  118A  225E  120A  118A  	fcall	_setup
   732  0231  120A  118A  22F6  120A  118A  	fcall	__baudios
   733  0236                     l1471:
   734  0236  120A  118A  22D4  120A  118A  	fcall	_config_txsta
   735  023B                     l1473:
   736  023B  120A  118A  22E6  120A  118A  	fcall	_config_rcsta
   737  0240                     l1475:
   738  0240  300A               	movlw	10
   739  0241  1283               	bcf	3,5	;RP0=0, select bank0
   740  0242  1303               	bcf	3,6	;RP1=0, select bank0
   741  0243  00D4               	movwf	_seg
   742  0244  3000               	movlw	0
   743  0245  00D5               	movwf	_seg+1
   744  0246                     l1477:
   745  0246  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   746  0247  00D3               	movwf	??_main
   747  0248  0853               	movf	??_main,w
   748  0249  00C6               	movwf	sprintf@f
   749  024A  300A               	movlw	10
   750  024B  00C7               	movwf	?_sprintf+1
   751  024C  3000               	movlw	0
   752  024D  00C8               	movwf	?_sprintf+2
   753  024E  302A               	movlw	(low (_BUFFER| 0))& (0+255)
   754  024F  120A  118A  201E  120A  118A  	fcall	_sprintf
   755  0254                     l1479:
   756  0254  302A               	movlw	(low (_BUFFER| 0))& (0+255)
   757  0255  120A  118A  2281  120A  118A  	fcall	_Write_USART_String
   758  025A  2A40               	goto	l1475
   759  025B  120A  118A  280C   	ljmp	start
   760  025E                     __end_of_main:
   761                           
   762                           	psect	text1
   763  001E                     __ptext1:	
   764 ;; *************** function _sprintf *****************
   765 ;; Defined at:
   766 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  sp              1    wreg     PTR unsigned char 
   769 ;;		 -> BUFFER(20), 
   770 ;;  f               1    8[BANK0 ] PTR const unsigned char 
   771 ;;		 -> STR_1(3), 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  sp              1   19[BANK0 ] PTR unsigned char 
   774 ;;		 -> BUFFER(20), 
   775 ;;  tmpval          4    0        struct .
   776 ;;  val             2   17[BANK0 ] unsigned int 
   777 ;;  cp              2    0        PTR const unsigned char 
   778 ;;  len             2    0        unsigned int 
   779 ;;  c               1   20[BANK0 ] unsigned char 
   780 ;;  prec            1   16[BANK0 ] char 
   781 ;;  flag            1   15[BANK0 ] unsigned char 
   782 ;;  ap              1   14[BANK0 ] PTR void [1]
   783 ;;		 -> ?_sprintf(2), 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  2    8[BANK0 ] int 
   786 ;; Registers used:
   787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       3       0       0       0
   794 ;;      Locals:         0       7       0       0       0
   795 ;;      Temps:          0       3       0       0       0
   796 ;;      Totals:         0      13       0       0       0
   797 ;;Total ram usage:       13 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    3
   800 ;; This function calls:
   801 ;;		___lwdiv
   802 ;;		___lwmod
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _sprintf
   810  001E                     _sprintf:
   811                           
   812                           ;incstack = 0
   813                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   814                           ;sprintf@sp stored from wreg
   815  001E  1283               	bcf	3,5	;RP0=0, select bank0
   816  001F  1303               	bcf	3,6	;RP1=0, select bank0
   817  0020  00D1               	movwf	sprintf@sp
   818  0021                     l1407:
   819                           
   820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   821  0021  3047               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   822  0022  00C9               	movwf	??_sprintf
   823  0023  0849               	movf	??_sprintf,w
   824  0024  00CC               	movwf	sprintf@ap
   825                           
   826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   827  0025  28F1               	goto	l1459
   828  0026                     l1409:
   829                           
   830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   831  0026  3025               	movlw	37
   832  0027  0652               	xorwf	sprintf@c,w
   833  0028  1903               	btfsc	3,2
   834  0029  282B               	goto	u871
   835  002A  282C               	goto	u870
   836  002B                     u871:
   837  002B  2838               	goto	l1415
   838  002C                     u870:
   839  002C                     l1411:
   840                           
   841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   842  002C  0852               	movf	sprintf@c,w
   843  002D  00C9               	movwf	??_sprintf
   844  002E  0851               	movf	sprintf@sp,w
   845  002F  0084               	movwf	4
   846  0030  0849               	movf	??_sprintf,w
   847  0031  1383               	bcf	3,7	;select IRP bank0
   848  0032  0080               	movwf	0
   849  0033                     l1413:
   850  0033  3001               	movlw	1
   851  0034  00C9               	movwf	??_sprintf
   852  0035  0849               	movf	??_sprintf,w
   853  0036  07D1               	addwf	sprintf@sp,f
   854                           
   855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   856  0037  28F1               	goto	l1459
   857  0038                     l1415:
   858                           
   859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   860  0038  01CD               	clrf	sprintf@flag
   861  0039                     l1419:	
   862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   863                           
   864  0039  3001               	movlw	1
   865  003A  07C6               	addwf	sprintf@f,f
   866  003B  30FF               	movlw	-1
   867  003C  0746               	addwf	sprintf@f,w
   868  003D  0084               	movwf	4
   869  003E  120A  118A  22B5  120A  118A  	fcall	stringdir
   870  0043  00D2               	movwf	sprintf@c
   871  0044  00C9               	movwf	??_sprintf
   872  0045  01CA               	clrf	??_sprintf+1
   873                           
   874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   875                           ; Switch size 1, requested type "simple"
   876                           ; Number of cases is 1, Range of values is 0 to 0
   877                           ; switch strategies available:
   878                           ; Name         Instructions Cycles
   879                           ; simple_byte            4     3 (average)
   880                           ; direct_byte           11     8 (fixed)
   881                           ; jumptable            260     6 (fixed)
   882                           ;	Chosen strategy is simple_byte
   883  0046  084A               	movf	??_sprintf+1,w
   884  0047  3A00               	xorlw	0	; case 0
   885  0048  1903               	skipnz
   886  0049  284B               	goto	l1501
   887  004A  28F1               	goto	l1459
   888  004B                     l1501:
   889                           
   890                           ; Switch size 1, requested type "simple"
   891                           ; Number of cases is 3, Range of values is 0 to 105
   892                           ; switch strategies available:
   893                           ; Name         Instructions Cycles
   894                           ; simple_byte           10     6 (average)
   895                           ; jumptable            260     6 (fixed)
   896                           ;	Chosen strategy is simple_byte
   897  004B  0849               	movf	??_sprintf,w
   898  004C  3A00               	xorlw	0	; case 0
   899  004D  1903               	skipnz
   900  004E  2903               	goto	l1461
   901  004F  3A64               	xorlw	100	; case 100
   902  0050  1903               	skipnz
   903  0051  2856               	goto	l1421
   904  0052  3A0D               	xorlw	13	; case 105
   905  0053  1903               	skipnz
   906  0054  2856               	goto	l1421
   907  0055  28F1               	goto	l1459
   908  0056                     l1421:
   909                           
   910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   911  0056  084C               	movf	sprintf@ap,w
   912  0057  0084               	movwf	4
   913  0058  1383               	bcf	3,7	;select IRP bank0
   914  0059  0800               	movf	0,w
   915  005A  00CF               	movwf	sprintf@val
   916  005B  0A84               	incf	4,f
   917  005C  0800               	movf	0,w
   918  005D  00D0               	movwf	sprintf@val+1
   919  005E                     l1423:
   920  005E  3002               	movlw	2
   921  005F  00C9               	movwf	??_sprintf
   922  0060  0849               	movf	??_sprintf,w
   923  0061  07CC               	addwf	sprintf@ap,f
   924  0062                     l1425:
   925                           
   926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   927  0062  1FD0               	btfss	sprintf@val+1,7
   928  0063  2865               	goto	u881
   929  0064  2866               	goto	u880
   930  0065                     u881:
   931  0065  286F               	goto	l1431
   932  0066                     u880:
   933  0066                     l1427:
   934                           
   935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   936  0066  3003               	movlw	3
   937  0067  00C9               	movwf	??_sprintf
   938  0068  0849               	movf	??_sprintf,w
   939  0069  04CD               	iorwf	sprintf@flag,f
   940  006A                     l1429:
   941                           
   942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   943  006A  09CF               	comf	sprintf@val,f
   944  006B  09D0               	comf	sprintf@val+1,f
   945  006C  0ACF               	incf	sprintf@val,f
   946  006D  1903               	skipnz
   947  006E  0AD0               	incf	sprintf@val+1,f
   948  006F                     l1431:
   949                           
   950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   951  006F  01D2               	clrf	sprintf@c
   952  0070  0AD2               	incf	sprintf@c,f
   953  0071                     l1437:
   954                           
   955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   956  0071  0852               	movf	sprintf@c,w
   957  0072  00C9               	movwf	??_sprintf
   958  0073  0749               	addwf	??_sprintf,w
   959  0074  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   960  0075  0084               	movwf	4
   961  0076  120A  118A  22B5  120A  118A  	fcall	stringdir
   962  007B  00CA               	movwf	??_sprintf+1
   963  007C  120A  118A  22B5  120A  118A  	fcall	stringdir
   964  0081  00CB               	movwf	??_sprintf+2
   965  0082  084B               	movf	??_sprintf+2,w
   966  0083  0250               	subwf	sprintf@val+1,w
   967  0084  1D03               	skipz
   968  0085  2888               	goto	u895
   969  0086  084A               	movf	??_sprintf+1,w
   970  0087  024F               	subwf	sprintf@val,w
   971  0088                     u895:
   972  0088  1803               	skipnc
   973  0089  288B               	goto	u891
   974  008A  288C               	goto	u890
   975  008B                     u891:
   976  008B  288D               	goto	l1441
   977  008C                     u890:
   978  008C  2897               	goto	l1443
   979  008D                     l1441:
   980  008D  3001               	movlw	1
   981  008E  00C9               	movwf	??_sprintf
   982  008F  0849               	movf	??_sprintf,w
   983  0090  07D2               	addwf	sprintf@c,f
   984  0091  3005               	movlw	5
   985  0092  0652               	xorwf	sprintf@c,w
   986  0093  1D03               	btfss	3,2
   987  0094  2896               	goto	u901
   988  0095  2897               	goto	u900
   989  0096                     u901:
   990  0096  2871               	goto	l1437
   991  0097                     u900:
   992  0097                     l1443:
   993                           
   994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
   995  0097  084D               	movf	sprintf@flag,w
   996  0098  3903               	andlw	3
   997  0099  1903               	btfsc	3,2
   998  009A  289C               	goto	u911
   999  009B  289D               	goto	u910
  1000  009C                     u911:
  1001  009C  28A8               	goto	l1449
  1002  009D                     u910:
  1003  009D                     l1445:
  1004                           
  1005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1006  009D  302D               	movlw	45
  1007  009E  00C9               	movwf	??_sprintf
  1008  009F  0851               	movf	sprintf@sp,w
  1009  00A0  0084               	movwf	4
  1010  00A1  0849               	movf	??_sprintf,w
  1011  00A2  1383               	bcf	3,7	;select IRP bank0
  1012  00A3  0080               	movwf	0
  1013  00A4                     l1447:
  1014  00A4  3001               	movlw	1
  1015  00A5  00C9               	movwf	??_sprintf
  1016  00A6  0849               	movf	??_sprintf,w
  1017  00A7  07D1               	addwf	sprintf@sp,f
  1018  00A8                     l1449:
  1019                           
  1020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1021  00A8  0852               	movf	sprintf@c,w
  1022  00A9  00C9               	movwf	??_sprintf
  1023  00AA  0849               	movf	??_sprintf,w
  1024  00AB  00CE               	movwf	sprintf@prec
  1025                           
  1026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1027  00AC  28E8               	goto	l1457
  1028  00AD                     l1451:
  1029                           
  1030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1031  00AD  300A               	movlw	10
  1032  00AE  00C1               	movwf	___lwmod@divisor
  1033  00AF  3000               	movlw	0
  1034  00B0  00C2               	movwf	___lwmod@divisor+1
  1035  00B1  084E               	movf	sprintf@prec,w
  1036  00B2  00C9               	movwf	??_sprintf
  1037  00B3  0749               	addwf	??_sprintf,w
  1038  00B4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1039  00B5  0084               	movwf	4
  1040  00B6  120A  118A  22B5  120A  118A  	fcall	stringdir
  1041  00BB  00F3               	movwf	___lwdiv@divisor
  1042  00BC  120A  118A  22B5  120A  118A  	fcall	stringdir
  1043  00C1  00F4               	movwf	___lwdiv@divisor+1
  1044  00C2  0850               	movf	sprintf@val+1,w
  1045  00C3  00F6               	movwf	___lwdiv@dividend+1
  1046  00C4  084F               	movf	sprintf@val,w
  1047  00C5  00F5               	movwf	___lwdiv@dividend
  1048  00C6  120A  118A  2170  120A  118A  	fcall	___lwdiv
  1049  00CB  0874               	movf	?___lwdiv+1,w
  1050  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1051  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1052  00CE  00C4               	movwf	___lwmod@dividend+1
  1053  00CF  0873               	movf	?___lwdiv,w
  1054  00D0  00C3               	movwf	___lwmod@dividend
  1055  00D1  120A  118A  21B6  120A  118A  	fcall	___lwmod
  1056  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1057  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1058  00D8  0841               	movf	?___lwmod,w
  1059  00D9  3E30               	addlw	48
  1060  00DA  00CA               	movwf	??_sprintf+1
  1061  00DB  084A               	movf	??_sprintf+1,w
  1062  00DC  00D2               	movwf	sprintf@c
  1063  00DD                     l1453:
  1064                           
  1065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1066  00DD  0852               	movf	sprintf@c,w
  1067  00DE  00C9               	movwf	??_sprintf
  1068  00DF  0851               	movf	sprintf@sp,w
  1069  00E0  0084               	movwf	4
  1070  00E1  0849               	movf	??_sprintf,w
  1071  00E2  1383               	bcf	3,7	;select IRP bank0
  1072  00E3  0080               	movwf	0
  1073  00E4                     l1455:
  1074  00E4  3001               	movlw	1
  1075  00E5  00C9               	movwf	??_sprintf
  1076  00E6  0849               	movf	??_sprintf,w
  1077  00E7  07D1               	addwf	sprintf@sp,f
  1078  00E8                     l1457:
  1079                           
  1080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1081  00E8  30FF               	movlw	255
  1082  00E9  00C9               	movwf	??_sprintf
  1083  00EA  0849               	movf	??_sprintf,w
  1084  00EB  07CE               	addwf	sprintf@prec,f
  1085  00EC  0A4E               	incf	sprintf@prec,w
  1086  00ED  1D03               	btfss	3,2
  1087  00EE  28F0               	goto	u921
  1088  00EF  28F1               	goto	u920
  1089  00F0                     u921:
  1090  00F0  28AD               	goto	l1451
  1091  00F1                     u920:
  1092  00F1                     l1459:
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1095  00F1  3001               	movlw	1
  1096  00F2  07C6               	addwf	sprintf@f,f
  1097  00F3  30FF               	movlw	-1
  1098  00F4  0746               	addwf	sprintf@f,w
  1099  00F5  0084               	movwf	4
  1100  00F6  120A  118A  22B5  120A  118A  	fcall	stringdir
  1101  00FB  00C9               	movwf	??_sprintf
  1102  00FC  0849               	movf	??_sprintf,w
  1103  00FD  00D2               	movwf	sprintf@c
  1104  00FE  0852               	movf	sprintf@c,w
  1105  00FF  1D03               	btfss	3,2
  1106  0100  2902               	goto	u931
  1107  0101  2903               	goto	u930
  1108  0102                     u931:
  1109  0102  2826               	goto	l1409
  1110  0103                     u930:
  1111  0103                     l1461:
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1114  0103  0851               	movf	sprintf@sp,w
  1115  0104  0084               	movwf	4
  1116  0105  1383               	bcf	3,7	;select IRP bank0
  1117  0106  0180               	clrf	0
  1118  0107                     l293:
  1119  0107  0008               	return
  1120  0108                     __end_of_sprintf:
  1121                           
  1122                           	psect	text2
  1123  01B6                     __ptext2:	
  1124 ;; *************** function ___lwmod *****************
  1125 ;; Defined at:
  1126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  divisor         2    3[BANK0 ] unsigned int 
  1129 ;;  dividend        2    5[BANK0 ] unsigned int 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  counter         1    7[BANK0 ] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  2    3[BANK0 ] unsigned int 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         0       4       0       0       0
  1142 ;;      Locals:         0       1       0       0       0
  1143 ;;      Temps:          1       0       0       0       0
  1144 ;;      Totals:         1       5       0       0       0
  1145 ;;Total ram usage:        6 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    2
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_sprintf
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           
  1156                           ;psect for function ___lwmod
  1157  01B6                     ___lwmod:
  1158  01B6                     l1367:	
  1159                           ;incstack = 0
  1160                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1161                           
  1162  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1163  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1164  01B8  0841               	movf	___lwmod@divisor,w
  1165  01B9  0442               	iorwf	___lwmod@divisor+1,w
  1166  01BA  1903               	btfsc	3,2
  1167  01BB  29BD               	goto	u811
  1168  01BC  29BE               	goto	u810
  1169  01BD                     u811:
  1170  01BD  29ED               	goto	l1385
  1171  01BE                     u810:
  1172  01BE                     l1369:
  1173  01BE  01C5               	clrf	___lwmod@counter
  1174  01BF  0AC5               	incf	___lwmod@counter,f
  1175  01C0  29CC               	goto	l1375
  1176  01C1                     l1371:
  1177  01C1  3001               	movlw	1
  1178  01C2                     u825:
  1179  01C2  1003               	clrc
  1180  01C3  0DC1               	rlf	___lwmod@divisor,f
  1181  01C4  0DC2               	rlf	___lwmod@divisor+1,f
  1182  01C5  3EFF               	addlw	-1
  1183  01C6  1D03               	skipz
  1184  01C7  29C2               	goto	u825
  1185  01C8                     l1373:
  1186  01C8  3001               	movlw	1
  1187  01C9  00F8               	movwf	??___lwmod
  1188  01CA  0878               	movf	??___lwmod,w
  1189  01CB  07C5               	addwf	___lwmod@counter,f
  1190  01CC                     l1375:
  1191  01CC  1FC2               	btfss	___lwmod@divisor+1,7
  1192  01CD  29CF               	goto	u831
  1193  01CE  29D0               	goto	u830
  1194  01CF                     u831:
  1195  01CF  29C1               	goto	l1371
  1196  01D0                     u830:
  1197  01D0                     l1377:
  1198  01D0  0842               	movf	___lwmod@divisor+1,w
  1199  01D1  0244               	subwf	___lwmod@dividend+1,w
  1200  01D2  1D03               	skipz
  1201  01D3  29D6               	goto	u845
  1202  01D4  0841               	movf	___lwmod@divisor,w
  1203  01D5  0243               	subwf	___lwmod@dividend,w
  1204  01D6                     u845:
  1205  01D6  1C03               	skipc
  1206  01D7  29D9               	goto	u841
  1207  01D8  29DA               	goto	u840
  1208  01D9                     u841:
  1209  01D9  29E0               	goto	l1381
  1210  01DA                     u840:
  1211  01DA                     l1379:
  1212  01DA  0841               	movf	___lwmod@divisor,w
  1213  01DB  02C3               	subwf	___lwmod@dividend,f
  1214  01DC  0842               	movf	___lwmod@divisor+1,w
  1215  01DD  1C03               	skipc
  1216  01DE  03C4               	decf	___lwmod@dividend+1,f
  1217  01DF  02C4               	subwf	___lwmod@dividend+1,f
  1218  01E0                     l1381:
  1219  01E0  3001               	movlw	1
  1220  01E1                     u855:
  1221  01E1  1003               	clrc
  1222  01E2  0CC2               	rrf	___lwmod@divisor+1,f
  1223  01E3  0CC1               	rrf	___lwmod@divisor,f
  1224  01E4  3EFF               	addlw	-1
  1225  01E5  1D03               	skipz
  1226  01E6  29E1               	goto	u855
  1227  01E7                     l1383:
  1228  01E7  3001               	movlw	1
  1229  01E8  02C5               	subwf	___lwmod@counter,f
  1230  01E9  1D03               	btfss	3,2
  1231  01EA  29EC               	goto	u861
  1232  01EB  29ED               	goto	u860
  1233  01EC                     u861:
  1234  01EC  29D0               	goto	l1377
  1235  01ED                     u860:
  1236  01ED                     l1385:
  1237  01ED  0844               	movf	___lwmod@dividend+1,w
  1238  01EE  00C2               	movwf	?___lwmod+1
  1239  01EF  0843               	movf	___lwmod@dividend,w
  1240  01F0  00C1               	movwf	?___lwmod
  1241  01F1                     l579:
  1242  01F1  0008               	return
  1243  01F2                     __end_of___lwmod:
  1244                           
  1245                           	psect	text3
  1246  0170                     __ptext3:	
  1247 ;; *************** function ___lwdiv *****************
  1248 ;; Defined at:
  1249 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  divisor         2    3[COMMON] unsigned int 
  1252 ;;  dividend        2    5[COMMON] unsigned int 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  quotient        2    1[BANK0 ] unsigned int 
  1255 ;;  counter         1    0[BANK0 ] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  2    3[COMMON] unsigned int 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1265 ;;      Params:         4       0       0       0       0
  1266 ;;      Locals:         0       3       0       0       0
  1267 ;;      Temps:          1       0       0       0       0
  1268 ;;      Totals:         5       3       0       0       0
  1269 ;;Total ram usage:        8 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    2
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_sprintf
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           
  1280                           ;psect for function ___lwdiv
  1281  0170                     ___lwdiv:
  1282  0170                     l1341:	
  1283                           ;incstack = 0
  1284                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1285                           
  1286  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0172  01BF               	clrf	___lwdiv@quotient
  1289  0173  01C0               	clrf	___lwdiv@quotient+1
  1290  0174                     l1343:
  1291  0174  0873               	movf	___lwdiv@divisor,w
  1292  0175  0474               	iorwf	___lwdiv@divisor+1,w
  1293  0176  1903               	btfsc	3,2
  1294  0177  2979               	goto	u741
  1295  0178  297A               	goto	u740
  1296  0179                     u741:
  1297  0179  29B1               	goto	l1363
  1298  017A                     u740:
  1299  017A                     l1345:
  1300  017A  01BE               	clrf	___lwdiv@counter
  1301  017B  0ABE               	incf	___lwdiv@counter,f
  1302  017C  2988               	goto	l1351
  1303  017D                     l1347:
  1304  017D  3001               	movlw	1
  1305  017E                     u755:
  1306  017E  1003               	clrc
  1307  017F  0DF3               	rlf	___lwdiv@divisor,f
  1308  0180  0DF4               	rlf	___lwdiv@divisor+1,f
  1309  0181  3EFF               	addlw	-1
  1310  0182  1D03               	skipz
  1311  0183  297E               	goto	u755
  1312  0184                     l1349:
  1313  0184  3001               	movlw	1
  1314  0185  00F7               	movwf	??___lwdiv
  1315  0186  0877               	movf	??___lwdiv,w
  1316  0187  07BE               	addwf	___lwdiv@counter,f
  1317  0188                     l1351:
  1318  0188  1FF4               	btfss	___lwdiv@divisor+1,7
  1319  0189  298B               	goto	u761
  1320  018A  298C               	goto	u760
  1321  018B                     u761:
  1322  018B  297D               	goto	l1347
  1323  018C                     u760:
  1324  018C                     l1353:
  1325  018C  3001               	movlw	1
  1326  018D                     u775:
  1327  018D  1003               	clrc
  1328  018E  0DBF               	rlf	___lwdiv@quotient,f
  1329  018F  0DC0               	rlf	___lwdiv@quotient+1,f
  1330  0190  3EFF               	addlw	-1
  1331  0191  1D03               	skipz
  1332  0192  298D               	goto	u775
  1333  0193  0874               	movf	___lwdiv@divisor+1,w
  1334  0194  0276               	subwf	___lwdiv@dividend+1,w
  1335  0195  1D03               	skipz
  1336  0196  2999               	goto	u785
  1337  0197  0873               	movf	___lwdiv@divisor,w
  1338  0198  0275               	subwf	___lwdiv@dividend,w
  1339  0199                     u785:
  1340  0199  1C03               	skipc
  1341  019A  299C               	goto	u781
  1342  019B  299D               	goto	u780
  1343  019C                     u781:
  1344  019C  29A4               	goto	l1359
  1345  019D                     u780:
  1346  019D                     l1355:
  1347  019D  0873               	movf	___lwdiv@divisor,w
  1348  019E  02F5               	subwf	___lwdiv@dividend,f
  1349  019F  0874               	movf	___lwdiv@divisor+1,w
  1350  01A0  1C03               	skipc
  1351  01A1  03F6               	decf	___lwdiv@dividend+1,f
  1352  01A2  02F6               	subwf	___lwdiv@dividend+1,f
  1353  01A3                     l1357:
  1354  01A3  143F               	bsf	___lwdiv@quotient,0
  1355  01A4                     l1359:
  1356  01A4  3001               	movlw	1
  1357  01A5                     u795:
  1358  01A5  1003               	clrc
  1359  01A6  0CF4               	rrf	___lwdiv@divisor+1,f
  1360  01A7  0CF3               	rrf	___lwdiv@divisor,f
  1361  01A8  3EFF               	addlw	-1
  1362  01A9  1D03               	skipz
  1363  01AA  29A5               	goto	u795
  1364  01AB                     l1361:
  1365  01AB  3001               	movlw	1
  1366  01AC  02BE               	subwf	___lwdiv@counter,f
  1367  01AD  1D03               	btfss	3,2
  1368  01AE  29B0               	goto	u801
  1369  01AF  29B1               	goto	u800
  1370  01B0                     u801:
  1371  01B0  298C               	goto	l1353
  1372  01B1                     u800:
  1373  01B1                     l1363:
  1374  01B1  0840               	movf	___lwdiv@quotient+1,w
  1375  01B2  00F4               	movwf	?___lwdiv+1
  1376  01B3  083F               	movf	___lwdiv@quotient,w
  1377  01B4  00F3               	movwf	?___lwdiv
  1378  01B5                     l569:
  1379  01B5  0008               	return
  1380  01B6                     __end_of___lwdiv:
  1381                           
  1382                           	psect	text4
  1383  025E                     __ptext4:	
  1384 ;; *************** function _setup *****************
  1385 ;; Defined at:
  1386 ;;		line 150 in file "main.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0
  1403 ;;      Totals:         0       0       0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    4
  1407 ;; This function calls:
  1408 ;;		_I2C_Master_Init
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _setup
  1416  025E                     _setup:
  1417  025E                     l1389:	
  1418                           ;incstack = 0
  1419                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1420                           
  1421                           
  1422                           ;main.c: 151:     ANSEL = 0;
  1423  025E  1683               	bsf	3,5	;RP0=1, select bank3
  1424  025F  1703               	bsf	3,6	;RP1=1, select bank3
  1425  0260  0188               	clrf	8	;volatile
  1426                           
  1427                           ;main.c: 152:     ANSELH = 0;
  1428  0261  0189               	clrf	9	;volatile
  1429                           
  1430                           ;main.c: 153:     TRISB = 0;
  1431  0262  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0263  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0264  0186               	clrf	6	;volatile
  1434                           
  1435                           ;main.c: 154:     PORTB = 0;
  1436  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0267  0186               	clrf	6	;volatile
  1439  0268                     l1391:
  1440                           
  1441                           ;main.c: 155:     IRCF0 = 1;
  1442  0268  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0269  1303               	bcf	3,6	;RP1=0, select bank1
  1444  026A  160F               	bsf	15,4	;volatile
  1445  026B                     l1393:
  1446                           
  1447                           ;main.c: 156:     IRCF1 = 1;
  1448  026B  168F               	bsf	15,5	;volatile
  1449  026C                     l1395:
  1450                           
  1451                           ;main.c: 157:     IRCF2 = 1;
  1452  026C  170F               	bsf	15,6	;volatile
  1453  026D                     l1397:
  1454                           
  1455                           ;main.c: 159:     INTCONbits.PEIE = 1;
  1456  026D  170B               	bsf	11,6	;volatile
  1457  026E                     l1399:
  1458                           
  1459                           ;main.c: 160:     PIE1bits.RCIE = 1;
  1460  026E  168C               	bsf	12,5	;volatile
  1461  026F                     l1401:
  1462                           
  1463                           ;main.c: 161:     PIR1bits.RCIF = 0;
  1464  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0271  128C               	bcf	12,5	;volatile
  1467  0272                     l1403:
  1468                           
  1469                           ;main.c: 162:     INTCONbits.GIE = 1;
  1470  0272  178B               	bsf	11,7	;volatile
  1471  0273                     l1405:
  1472                           
  1473                           ;main.c: 164:     I2C_Master_Init(100000);
  1474  0273  3000               	movlw	0
  1475  0274  00C9               	movwf	I2C_Master_Init@c+3
  1476  0275  3001               	movlw	1
  1477  0276  00C8               	movwf	I2C_Master_Init@c+2
  1478  0277  3086               	movlw	134
  1479  0278  00C7               	movwf	I2C_Master_Init@c+1
  1480  0279  30A0               	movlw	160
  1481  027A  00C6               	movwf	I2C_Master_Init@c
  1482  027B  120A  118A  21F2  120A  118A  	fcall	_I2C_Master_Init
  1483  0280                     l87:
  1484  0280  0008               	return
  1485  0281                     __end_of_setup:
  1486                           
  1487                           	psect	text5
  1488  01F2                     __ptext5:	
  1489 ;; *************** function _I2C_Master_Init *****************
  1490 ;; Defined at:
  1491 ;;		line 16 in file "I2C.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  c               4    8[BANK0 ] const unsigned long 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, status,0, pclath, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1505 ;;      Params:         0       4       0       0       0
  1506 ;;      Locals:         0       0       0       0       0
  1507 ;;      Temps:          0       4       0       0       0
  1508 ;;      Totals:         0       8       0       0       0
  1509 ;;Total ram usage:        8 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    3
  1512 ;; This function calls:
  1513 ;;		___lldiv
  1514 ;; This function is called by:
  1515 ;;		_setup
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           
  1520                           ;psect for function _I2C_Master_Init
  1521  01F2                     _I2C_Master_Init:
  1522  01F2                     l1329:	
  1523                           ;incstack = 0
  1524                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1525                           
  1526                           
  1527                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1528  01F2  3028               	movlw	40
  1529  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1530  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1531  01F5  0094               	movwf	20	;volatile
  1532  01F6                     l1331:
  1533                           
  1534                           ;I2C.c: 19:     SSPCON2 = 0;
  1535  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  1536  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  1537  01F8  0191               	clrf	17	;volatile
  1538  01F9                     l1333:
  1539                           
  1540                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1541  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1542  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1543  01FB  0846               	movf	I2C_Master_Init@c,w
  1544  01FC  00CA               	movwf	??_I2C_Master_Init
  1545  01FD  0847               	movf	I2C_Master_Init@c+1,w
  1546  01FE  00CB               	movwf	??_I2C_Master_Init+1
  1547  01FF  0848               	movf	I2C_Master_Init@c+2,w
  1548  0200  00CC               	movwf	??_I2C_Master_Init+2
  1549  0201  0849               	movf	I2C_Master_Init@c+3,w
  1550  0202  00CD               	movwf	??_I2C_Master_Init+3
  1551  0203  3002               	movlw	2
  1552  0204                     u735:
  1553  0204  1003               	clrc
  1554  0205  0DCA               	rlf	??_I2C_Master_Init,f
  1555  0206  0DCB               	rlf	??_I2C_Master_Init+1,f
  1556  0207  0DCC               	rlf	??_I2C_Master_Init+2,f
  1557  0208  0DCD               	rlf	??_I2C_Master_Init+3,f
  1558  0209                     u730:
  1559  0209  3EFF               	addlw	-1
  1560  020A  1D03               	skipz
  1561  020B  2A04               	goto	u735
  1562  020C  084D               	movf	??_I2C_Master_Init+3,w
  1563  020D  00C1               	movwf	___lldiv@divisor+3
  1564  020E  084C               	movf	??_I2C_Master_Init+2,w
  1565  020F  00C0               	movwf	___lldiv@divisor+2
  1566  0210  084B               	movf	??_I2C_Master_Init+1,w
  1567  0211  00BF               	movwf	___lldiv@divisor+1
  1568  0212  084A               	movf	??_I2C_Master_Init,w
  1569  0213  00BE               	movwf	___lldiv@divisor
  1570  0214  3000               	movlw	0
  1571  0215  00C5               	movwf	___lldiv@dividend+3
  1572  0216  307A               	movlw	122
  1573  0217  00C4               	movwf	___lldiv@dividend+2
  1574  0218  3012               	movlw	18
  1575  0219  00C3               	movwf	___lldiv@dividend+1
  1576  021A  3000               	movlw	0
  1577  021B  00C2               	movwf	___lldiv@dividend
  1578  021C  120A  118A  2108  120A  118A  	fcall	___lldiv
  1579  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0223  083E               	movf	?___lldiv,w
  1582  0224  3EFF               	addlw	255
  1583  0225  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0226  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0227  0093               	movwf	19	;volatile
  1586  0228                     l1335:
  1587                           
  1588                           ;I2C.c: 21:     SSPSTAT = 0;
  1589  0228  0194               	clrf	20	;volatile
  1590  0229                     l1337:
  1591                           
  1592                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1593  0229  1587               	bsf	7,3	;volatile
  1594  022A                     l1339:
  1595                           
  1596                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1597  022A  1607               	bsf	7,4	;volatile
  1598  022B                     l116:
  1599  022B  0008               	return
  1600  022C                     __end_of_I2C_Master_Init:
  1601                           
  1602                           	psect	text6
  1603  0108                     __ptext6:	
  1604 ;; *************** function ___lldiv *****************
  1605 ;; Defined at:
  1606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  divisor         4    0[BANK0 ] unsigned long 
  1609 ;;  dividend        4    4[BANK0 ] unsigned long 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  quotient        4    4[COMMON] unsigned long 
  1612 ;;  counter         1    8[COMMON] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  4    0[BANK0 ] unsigned long 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         0       8       0       0       0
  1623 ;;      Locals:         5       0       0       0       0
  1624 ;;      Temps:          1       0       0       0       0
  1625 ;;      Totals:         6       8       0       0       0
  1626 ;;Total ram usage:       14 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    2
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_I2C_Master_Init
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function ___lldiv
  1638  0108                     ___lldiv:
  1639  0108                     l1305:	
  1640                           ;incstack = 0
  1641                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1642                           
  1643  0108  3000               	movlw	0
  1644  0109  00F7               	movwf	___lldiv@quotient+3
  1645  010A  3000               	movlw	0
  1646  010B  00F6               	movwf	___lldiv@quotient+2
  1647  010C  3000               	movlw	0
  1648  010D  00F5               	movwf	___lldiv@quotient+1
  1649  010E  3000               	movlw	0
  1650  010F  00F4               	movwf	___lldiv@quotient
  1651  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0112  0841               	movf	___lldiv@divisor+3,w
  1654  0113  0440               	iorwf	___lldiv@divisor+2,w
  1655  0114  043F               	iorwf	___lldiv@divisor+1,w
  1656  0115  043E               	iorwf	___lldiv@divisor,w
  1657  0116  1903               	skipnz
  1658  0117  2919               	goto	u661
  1659  0118  291A               	goto	u660
  1660  0119                     u661:
  1661  0119  2967               	goto	l1325
  1662  011A                     u660:
  1663  011A                     l1307:
  1664  011A  01F8               	clrf	___lldiv@counter
  1665  011B  0AF8               	incf	___lldiv@counter,f
  1666  011C  292A               	goto	l1311
  1667  011D                     l1309:
  1668  011D  3001               	movlw	1
  1669  011E  00F3               	movwf	??___lldiv
  1670  011F                     u675:
  1671  011F  1003               	clrc
  1672  0120  0DBE               	rlf	___lldiv@divisor,f
  1673  0121  0DBF               	rlf	___lldiv@divisor+1,f
  1674  0122  0DC0               	rlf	___lldiv@divisor+2,f
  1675  0123  0DC1               	rlf	___lldiv@divisor+3,f
  1676  0124  0BF3               	decfsz	??___lldiv,f
  1677  0125  291F               	goto	u675
  1678  0126  3001               	movlw	1
  1679  0127  00F3               	movwf	??___lldiv
  1680  0128  0873               	movf	??___lldiv,w
  1681  0129  07F8               	addwf	___lldiv@counter,f
  1682  012A                     l1311:
  1683  012A  1FC1               	btfss	___lldiv@divisor+3,7
  1684  012B  292D               	goto	u681
  1685  012C  292E               	goto	u680
  1686  012D                     u681:
  1687  012D  291D               	goto	l1309
  1688  012E                     u680:
  1689  012E                     l1313:
  1690  012E  3001               	movlw	1
  1691  012F  00F3               	movwf	??___lldiv
  1692  0130                     u695:
  1693  0130  1003               	clrc
  1694  0131  0DF4               	rlf	___lldiv@quotient,f
  1695  0132  0DF5               	rlf	___lldiv@quotient+1,f
  1696  0133  0DF6               	rlf	___lldiv@quotient+2,f
  1697  0134  0DF7               	rlf	___lldiv@quotient+3,f
  1698  0135  0BF3               	decfsz	??___lldiv,f
  1699  0136  2930               	goto	u695
  1700  0137                     l1315:
  1701  0137  0841               	movf	___lldiv@divisor+3,w
  1702  0138  0245               	subwf	___lldiv@dividend+3,w
  1703  0139  1D03               	skipz
  1704  013A  2945               	goto	u705
  1705  013B  0840               	movf	___lldiv@divisor+2,w
  1706  013C  0244               	subwf	___lldiv@dividend+2,w
  1707  013D  1D03               	skipz
  1708  013E  2945               	goto	u705
  1709  013F  083F               	movf	___lldiv@divisor+1,w
  1710  0140  0243               	subwf	___lldiv@dividend+1,w
  1711  0141  1D03               	skipz
  1712  0142  2945               	goto	u705
  1713  0143  083E               	movf	___lldiv@divisor,w
  1714  0144  0242               	subwf	___lldiv@dividend,w
  1715  0145                     u705:
  1716  0145  1C03               	skipc
  1717  0146  2948               	goto	u701
  1718  0147  2949               	goto	u700
  1719  0148                     u701:
  1720  0148  2958               	goto	l1321
  1721  0149                     u700:
  1722  0149                     l1317:
  1723  0149  083E               	movf	___lldiv@divisor,w
  1724  014A  02C2               	subwf	___lldiv@dividend,f
  1725  014B  083F               	movf	___lldiv@divisor+1,w
  1726  014C  1C03               	skipc
  1727  014D  0F3F               	incfsz	___lldiv@divisor+1,w
  1728  014E  02C3               	subwf	___lldiv@dividend+1,f
  1729  014F  0840               	movf	___lldiv@divisor+2,w
  1730  0150  1C03               	skipc
  1731  0151  0F40               	incfsz	___lldiv@divisor+2,w
  1732  0152  02C4               	subwf	___lldiv@dividend+2,f
  1733  0153  0841               	movf	___lldiv@divisor+3,w
  1734  0154  1C03               	skipc
  1735  0155  0F41               	incfsz	___lldiv@divisor+3,w
  1736  0156  02C5               	subwf	___lldiv@dividend+3,f
  1737  0157                     l1319:
  1738  0157  1474               	bsf	___lldiv@quotient,0
  1739  0158                     l1321:
  1740  0158  3001               	movlw	1
  1741  0159                     u715:
  1742  0159  1003               	clrc
  1743  015A  0CC1               	rrf	___lldiv@divisor+3,f
  1744  015B  0CC0               	rrf	___lldiv@divisor+2,f
  1745  015C  0CBF               	rrf	___lldiv@divisor+1,f
  1746  015D  0CBE               	rrf	___lldiv@divisor,f
  1747  015E  3EFF               	addlw	-1
  1748  015F  1D03               	skipz
  1749  0160  2959               	goto	u715
  1750  0161                     l1323:
  1751  0161  3001               	movlw	1
  1752  0162  02F8               	subwf	___lldiv@counter,f
  1753  0163  1D03               	btfss	3,2
  1754  0164  2966               	goto	u721
  1755  0165  2967               	goto	u720
  1756  0166                     u721:
  1757  0166  292E               	goto	l1313
  1758  0167                     u720:
  1759  0167                     l1325:
  1760  0167  0877               	movf	___lldiv@quotient+3,w
  1761  0168  00C1               	movwf	?___lldiv+3
  1762  0169  0876               	movf	___lldiv@quotient+2,w
  1763  016A  00C0               	movwf	?___lldiv+2
  1764  016B  0875               	movf	___lldiv@quotient+1,w
  1765  016C  00BF               	movwf	?___lldiv+1
  1766  016D  0874               	movf	___lldiv@quotient,w
  1767  016E  00BE               	movwf	?___lldiv
  1768  016F                     l333:
  1769  016F  0008               	return
  1770  0170                     __end_of___lldiv:
  1771                           
  1772                           	psect	text7
  1773  02D4                     __ptext7:	
  1774 ;; *************** function _config_txsta *****************
  1775 ;; Defined at:
  1776 ;;		line 9 in file "USART.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		None
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0
  1793 ;;      Totals:         0       0       0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    2
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _config_txsta
  1806  02D4                     _config_txsta:
  1807  02D4                     l1197:	
  1808                           ;incstack = 0
  1809                           ; Regs used in _config_txsta: []
  1810                           
  1811                           
  1812                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  1813  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  1814  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  1815  02D6  1398               	bcf	24,7	;volatile
  1816                           
  1817                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  1818  02D7  1318               	bcf	24,6	;volatile
  1819                           
  1820                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  1821  02D8  1698               	bsf	24,5	;volatile
  1822                           
  1823                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  1824  02D9  1218               	bcf	24,4	;volatile
  1825                           
  1826                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  1827  02DA  1118               	bcf	24,2	;volatile
  1828                           
  1829                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  1830  02DB  1098               	bcf	24,1	;volatile
  1831                           
  1832                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  1833  02DC  1018               	bcf	24,0	;volatile
  1834  02DD                     l162:
  1835  02DD  0008               	return
  1836  02DE                     __end_of_config_txsta:
  1837                           
  1838                           	psect	text8
  1839  02E6                     __ptext8:	
  1840 ;; *************** function _config_rcsta *****************
  1841 ;; Defined at:
  1842 ;;		line 19 in file "USART.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		status,2
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    2
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _config_rcsta
  1872  02E6                     _config_rcsta:
  1873  02E6                     l1199:	
  1874                           ;incstack = 0
  1875                           ; Regs used in _config_rcsta: [status,2]
  1876                           
  1877                           
  1878                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  1879  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1880  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1881  02E8  1798               	bsf	24,7	;volatile
  1882                           
  1883                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  1884  02E9  1318               	bcf	24,6	;volatile
  1885                           
  1886                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  1887  02EA  1298               	bcf	24,5	;volatile
  1888                           
  1889                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  1890  02EB  1618               	bsf	24,4	;volatile
  1891  02EC                     l1201:
  1892                           
  1893                           ;USART.c: 24:     RCREG = 0;
  1894  02EC  019A               	clrf	26	;volatile
  1895  02ED                     l165:
  1896  02ED  0008               	return
  1897  02EE                     __end_of_config_rcsta:
  1898                           
  1899                           	psect	text9
  1900  02F6                     __ptext9:	
  1901 ;; *************** function __baudios *****************
  1902 ;; Defined at:
  1903 ;;		line 5 in file "USART.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    2
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function __baudios
  1933  02F6                     __baudios:
  1934  02F6                     l1195:	
  1935                           ;incstack = 0
  1936                           ; Regs used in __baudios: [wreg]
  1937                           
  1938                           
  1939                           ;USART.c: 6:     SPBRG = 12;
  1940  02F6  300C               	movlw	12
  1941  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  1942  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  1943  02F9  0099               	movwf	25	;volatile
  1944  02FA                     l159:
  1945  02FA  0008               	return
  1946  02FB                     __end_of__baudios:
  1947                           
  1948                           	psect	text10
  1949  0281                     __ptext10:	
  1950 ;; *************** function _Write_USART_String *****************
  1951 ;; Defined at:
  1952 ;;		line 30 in file "USART.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  a               1    wreg     PTR unsigned char 
  1955 ;;		 -> BUFFER(20), 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  a               1    5[COMMON] PTR unsigned char 
  1958 ;;		 -> BUFFER(20), 
  1959 ;;  i               1    6[COMMON] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1969 ;;      Params:         0       0       0       0       0
  1970 ;;      Locals:         2       0       0       0       0
  1971 ;;      Temps:          1       0       0       0       0
  1972 ;;      Totals:         3       0       0       0       0
  1973 ;;Total ram usage:        3 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    3
  1976 ;; This function calls:
  1977 ;;		_Write_USART
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _Write_USART_String
  1985  0281                     _Write_USART_String:
  1986                           
  1987                           ;incstack = 0
  1988                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1989                           ;Write_USART_String@a stored from wreg
  1990  0281  00F5               	movwf	Write_USART_String@a
  1991  0282                     l1265:
  1992                           
  1993                           ;USART.c: 31:     uint8_t i;;USART.c: 32:     for(i=0;a[i]!='\0';i++){
  1994  0282  01F6               	clrf	Write_USART_String@i
  1995  0283  2A93               	goto	l1271
  1996  0284                     l1267:
  1997                           
  1998                           ;USART.c: 33:         Write_USART(a[i]);
  1999  0284  0876               	movf	Write_USART_String@i,w
  2000  0285  0775               	addwf	Write_USART_String@a,w
  2001  0286  00F4               	movwf	??_Write_USART_String
  2002  0287  0874               	movf	??_Write_USART_String,w
  2003  0288  0084               	movwf	4
  2004  0289  0800               	movf	0,w
  2005  028A  120A  118A  22C8  120A  118A  	fcall	_Write_USART
  2006  028F                     l1269:
  2007                           
  2008                           ;USART.c: 34:     }
  2009  028F  3001               	movlw	1
  2010  0290  00F4               	movwf	??_Write_USART_String
  2011  0291  0874               	movf	??_Write_USART_String,w
  2012  0292  07F6               	addwf	Write_USART_String@i,f
  2013  0293                     l1271:
  2014  0293  0876               	movf	Write_USART_String@i,w
  2015  0294  0775               	addwf	Write_USART_String@a,w
  2016  0295  00F4               	movwf	??_Write_USART_String
  2017  0296  0874               	movf	??_Write_USART_String,w
  2018  0297  0084               	movwf	4
  2019  0298  1383               	bcf	3,7	;select IRP bank0
  2020  0299  0800               	movf	0,w
  2021  029A  1D03               	btfss	3,2
  2022  029B  2A9D               	goto	u651
  2023  029C  2A9E               	goto	u650
  2024  029D                     u651:
  2025  029D  2A84               	goto	l1267
  2026  029E                     u650:
  2027  029E                     l177:
  2028  029E  0008               	return
  2029  029F                     __end_of_Write_USART_String:
  2030                           
  2031                           	psect	text11
  2032  02C8                     __ptext11:	
  2033 ;; *************** function _Write_USART *****************
  2034 ;; Defined at:
  2035 ;;		line 26 in file "USART.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  a               1    wreg     unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  a               1    3[COMMON] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       0       0       0       0
  2050 ;;      Locals:         1       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0
  2052 ;;      Totals:         1       0       0       0       0
  2053 ;;Total ram usage:        1 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    2
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_Write_USART_String
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _Write_USART
  2065  02C8                     _Write_USART:
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _Write_USART: [wreg]
  2069                           ;Write_USART@a stored from wreg
  2070  02C8  00F3               	movwf	Write_USART@a
  2071  02C9                     l1125:
  2072  02C9                     l168:	
  2073                           ;USART.c: 27:     while(!TRMT);
  2074                           
  2075  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  2076  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  2077  02CB  1C98               	btfss	24,1	;volatile
  2078  02CC  2ACE               	goto	u441
  2079  02CD  2ACF               	goto	u440
  2080  02CE                     u441:
  2081  02CE  2AC9               	goto	l168
  2082  02CF                     u440:
  2083  02CF                     l1127:
  2084                           
  2085                           ;USART.c: 28:     TXREG=a;
  2086  02CF  0873               	movf	Write_USART@a,w
  2087  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2088  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2089  02D2  0099               	movwf	25	;volatile
  2090  02D3                     l171:
  2091  02D3  0008               	return
  2092  02D4                     __end_of_Write_USART:
  2093                           
  2094                           	psect	text12
  2095  029F                     __ptext12:	
  2096 ;; *************** function _ISR *****************
  2097 ;; Defined at:
  2098 ;;		line 60 in file "main.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0
  2114 ;;      Temps:          3       0       0       0       0
  2115 ;;      Totals:         3       0       0       0       0
  2116 ;;Total ram usage:        3 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    1
  2119 ;; This function calls:
  2120 ;;		_Read_USART
  2121 ;; This function is called by:
  2122 ;;		Interrupt level 1
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _ISR
  2128  029F                     _ISR:
  2129  029F                     i1l997:
  2130                           
  2131                           ;main.c: 61: 
  2132  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2133  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2134  02A1  1E8C               	btfss	12,5	;volatile
  2135  02A2  2AA4               	goto	u34_21
  2136  02A3  2AA5               	goto	u34_20
  2137  02A4                     u34_21:
  2138  02A4  2AAE               	goto	i1l70
  2139  02A5                     u34_20:
  2140  02A5                     i1l999:
  2141                           
  2142                           ;main.c: 62: 
  2143  02A5  128C               	bcf	12,5	;volatile
  2144  02A6                     i1l1001:
  2145                           
  2146                           ;main.c: 63:     }
  2147  02A6  120A  118A  22EE  120A  118A  	fcall	_Read_USART
  2148  02AB  00F0               	movwf	??_ISR
  2149  02AC  0870               	movf	??_ISR,w
  2150  02AD  00F9               	movwf	_lecUSART
  2151  02AE                     i1l70:	
  2152                           ;main.c: 64: }
  2153                           
  2154  02AE  0872               	movf	??_ISR+2,w
  2155  02AF  008A               	movwf	10
  2156  02B0  0E71               	swapf	??_ISR+1,w
  2157  02B1  0083               	movwf	3
  2158  02B2  0EFE               	swapf	btemp,f
  2159  02B3  0E7E               	swapf	btemp,w
  2160  02B4  0009               	retfie
  2161  02B5                     __end_of_ISR:
  2162                           
  2163                           	psect	intentry
  2164  0004                     __pintentry:	
  2165                           ;incstack = 0
  2166                           ; Regs used in _ISR: [wreg+pclath+cstack]
  2167                           
  2168  0004                     interrupt_function:
  2169  007E                     saved_w	set	btemp
  2170  0004  00FE               	movwf	btemp
  2171  0005  0E03               	swapf	3,w
  2172  0006  00F1               	movwf	??_ISR+1
  2173  0007  080A               	movf	10,w
  2174  0008  00F2               	movwf	??_ISR+2
  2175  0009  120A  118A  2A9F   	ljmp	_ISR
  2176                           
  2177                           	psect	text13
  2178  02EE                     __ptext13:	
  2179 ;; *************** function _Read_USART *****************
  2180 ;; Defined at:
  2181 ;;		line 36 in file "USART.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      unsigned char 
  2188 ;; Registers used:
  2189 ;;		wreg
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2195 ;;      Params:         0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0
  2198 ;;      Totals:         0       0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_ISR
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _Read_USART
  2210  02EE                     _Read_USART:
  2211  02EE                     i1l891:	
  2212                           ;incstack = 0
  2213                           ; Regs used in _Read_USART: [wreg]
  2214                           
  2215  02EE                     i1l180:	
  2216                           ;USART.c: 37:   while(!RCIF);
  2217                           
  2218  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2219  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2220  02F0  1E8C               	btfss	12,5	;volatile
  2221  02F1  2AF3               	goto	u23_21
  2222  02F2  2AF4               	goto	u23_20
  2223  02F3                     u23_21:
  2224  02F3  2AEE               	goto	i1l180
  2225  02F4                     u23_20:
  2226  02F4                     i1l893:
  2227                           
  2228                           ;USART.c: 38:   return RCREG;
  2229  02F4  081A               	movf	26,w	;volatile
  2230  02F5                     i1l183:
  2231  02F5  0008               	return
  2232  02F6                     __end_of_Read_USART:
  2233  007E                     btemp	set	126	;btemp
  2234  007E                     wtemp0	set	126
  2235                           
  2236                           	psect	config
  2237                           
  2238                           ;Config register CONFIG1 @ 0x2007
  2239                           ;	Oscillator Selection bits
  2240                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2241                           ;	Watchdog Timer Enable bit
  2242                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2243                           ;	Power-up Timer Enable bit
  2244                           ;	PWRTE = OFF, PWRT disabled
  2245                           ;	RE3/MCLR pin function select bit
  2246                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2247                           ;	Code Protection bit
  2248                           ;	CP = OFF, Program memory code protection is disabled
  2249                           ;	Data Code Protection bit
  2250                           ;	CPD = OFF, Data memory code protection is disabled
  2251                           ;	Brown Out Reset Selection bits
  2252                           ;	BOREN = OFF, BOR disabled
  2253                           ;	Internal External Switchover bit
  2254                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2255                           ;	Fail-Safe Clock Monitor Enabled bit
  2256                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2257                           ;	Low Voltage Programming Enable bit
  2258                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2259                           ;	In-Circuit Debugger Mode bit
  2260                           ;	DEBUG = 0x1, unprogrammed default
  2261  2007                     	org	8199
  2262  2007  20D4               	dw	8404
  2263                           
  2264                           ;Config register CONFIG2 @ 0x2008
  2265                           ;	Brown-out Reset Selection bit
  2266                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2267                           ;	Flash Program Memory Self Write Enable bits
  2268                           ;	WRT = OFF, Write protection off
  2269  2008                     	org	8200
  2270  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         32
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     22      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _Write_USART_String->_Write_USART

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2342
                                             21 BANK0      1     1      0
                 _Write_USART_String
                           __baudios
                       _config_rcsta
                       _config_txsta
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1655
                                              8 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     145
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (5) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Write_USART_String
     _Write_USART
   __baudios
   _config_rcsta
   _config_txsta
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      41       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      36       5       67.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      41      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 23:49:46 2021

                          pc 0002                           l87 0280                           fsr 0004  
       __size_of_Write_USART 000C                          l116 022B                          l162 02DD  
                        l171 02D3                          l165 02ED                          l333 016F  
                        l159 02FA                          l168 02C9                          l177 029E  
                        l293 0107                          l569 01B5                          l579 01F1  
                        _GIE 005F                          u440 02CF                          u441 02CE  
                        u700 0149                          _ISR 029F                          u701 0148  
                        u720 0167                          u800 01B1                          u721 0166  
                        u705 0145                          u801 01B0                          u650 029E  
                        u730 0209                          u810 01BE                          u651 029D  
                        u715 0159                          u811 01BD                          u660 011A  
                        u740 017A                          u900 0097                          u661 0119  
                        u741 0179                          u901 0096                          u830 01D0  
                        u910 009D                          u735 0204                          u831 01CF  
                        u911 009C                          u680 012E                          u760 018C  
                        u840 01DA                          u920 00F1                          u681 012D  
                        u761 018B                          u841 01D9                          u825 01C2  
                        u921 00F0                          u930 0103                          u675 011F  
                        u755 017E                          u931 0102                          u780 019D  
                        u860 01ED                          u781 019C                          u861 01EC  
                        u845 01D6                          u870 002C                          u695 0130  
                        u775 018D                          u855 01E1                          u871 002B  
                        u880 0066                          u785 0199                          u881 0065  
                        u890 008C                          u795 01A5                          u891 008B  
                        u895 0088                          _dia 0024                          _mes 0022  
                        _min 0028                          _seg 0054                          fsr0 0004  
                        indf 0000  __size_of_Write_USART_String 001E                         ?_ISR 0070  
                       l1201 02EC                         l1125 02C9                         l1127 02CF  
                       l1311 012A                         l1321 0158                         l1313 012E  
                       l1305 0108                         l1401 026F                         l1323 0161  
                       l1315 0137                         l1307 011A                         l1331 01F6  
                       l1403 0272                         l1411 002C                         l1317 0149  
                       l1309 011D                         l1325 0167                         l1333 01F9  
                       l1405 0273                         l1341 0170                         l1421 0056  
                       l1501 004B                         l1413 0033                         l1271 0293  
                       l1319 0157                         l1335 0228                         l1351 0188  
                       l1343 0174                         l1431 006F                         l1423 005E  
                       l1415 0038                         l1407 0021                         l1265 0282  
                       l1337 0229                         l1329 01F2                         l1361 01AB  
                       l1353 018C                         l1345 017A                         l1441 008D  
                       l1425 0062                         l1409 0026                         l1267 0284  
                       l1195 02F6                         l1339 022A                         l1355 019D  
                       l1347 017D                         l1363 01B1                         l1371 01C1  
                       l1451 00AD                         l1443 0097                         l1427 0066  
                       l1419 0039                         l1269 028F                         l1197 02D4  
                       l1357 01A3                         l1349 0184                         l1381 01E0  
                       l1373 01C8                         l1453 00DD                         l1445 009D  
                       l1437 0071                         l1429 006A                         l1461 0103  
                       l1199 02E6                         l1391 0268                         l1359 01A4  
                       l1383 01E7                         l1375 01CC                         l1367 01B6  
                       l1455 00E4                         l1447 00A4                         l1471 0236  
                       l1393 026B                         l1377 01D0                         l1369 01BE  
                       l1385 01ED                         l1457 00E8                         l1449 00A8  
                       l1473 023B                         l1395 026C                         l1379 01DA  
                       l1459 00F1                         l1475 0240                         l1397 026D  
                       l1389 025E                         l1477 0246                         l1469 022C  
                       l1399 026E                         l1479 0254                         STR_1 02C5  
                       _PEIE 005E                         _RCIF 0065                         i1l70 02AE  
                       _TRMT 04C1                         _main 022C                         _hora 0026  
                       _year 0020                         btemp 007E                         start 000C  
             ??_config_rcsta 0073               ??_config_txsta 0073                        ??_ISR 0070  
           ?_I2C_Master_Init 0046                        ?_main 0070                        _ANSEL 0188  
            __end_of___lldiv 0170                        _IRCF0 047C                        _IRCF1 047D  
                      _IRCF2 047E              __end_of___lwdiv 01B6                        i1l180 02EE  
                      i1l183 02F5              __end_of___lwmod 01F2                        i1l891 02EE  
                      i1l893 02F4                        i1l997 029F                        i1l999 02A5  
                      _RCREG 001A                        u23_20 02F4                        u23_21 02F3  
                      u34_20 02A5                        u34_21 02A4                        _SPBRG 0099  
                      _PORTB 0006                        _TRISB 0086                        _SSPIE 0463  
                      _SSPIF 0063                        _TXREG 0019              __end_of_dpowers 02C5  
                      _setup 025E                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0108              __initialization 000F  
                 _Read_USART 02EE                 __end_of_main 025E                       ??_main 0053  
                     ?_setup 0070                       _ANSELH 0189             __end_of__baudios 02FB  
                     _BUFFER 002A                       i1l1001 02A6                       _SSPADD 0093  
                     _TRISC3 043B                       _TRISC4 043C                       _SSPCON 0014  
                     _SSPBUF 0013                    ??___lldiv 0073                    ??___lwdiv 0077  
                  ??___lwmod 0078         __end_of_config_rcsta 02EE                       saved_w 007E  
       __end_of_config_txsta 02DE                    ??_sprintf 0049      __end_of__initialization 001A  
                ?_Read_USART 0070               __pcstackCOMMON 0070                __end_of_setup 0281  
                    ??_setup 0079                 Write_USART@a 0073                   __pbssBANK0 0020  
                 __pmaintext 022C                ??_Write_USART 0073                   __pintentry 0004  
                  ?__baudios 0070   __end_of_Write_USART_String 029F          __size_of_Read_USART 0008  
                    _SSPCON2 0091                      _SSPSTAT 0094                   __stringtab 02B5  
                    ___lldiv 0108                      ___lwdiv 0170                      ___lwmod 01B6  
      __size_of_config_rcsta 0008                   ??__baudios 0073                      __ptext1 001E  
                    __ptext2 01B6        __size_of_config_txsta 000A                      __ptext3 0170  
                    __ptext4 025E                      __ptext5 01F2                      __ptext6 0108  
                    __ptext7 02D4                      __ptext8 02E6                      __ptext9 02F6  
               __size_of_ISR 0016                      _dpowers 02BB          __end_of_Write_USART 02D4  
   __size_of_I2C_Master_Init 003A                      _sprintf 001E                      clrloop0 02DF  
       end_of_initialization 001A              ___lldiv@divisor 003E              ___lldiv@counter 0078  
               _config_rcsta 02E6                 _config_txsta 02D4                    _RCSTAbits 0018  
           I2C_Master_Init@c 0046                    _PORTBbits 0006                    _TRISCbits 0087  
                  _TXSTAbits 0098                 ??_Read_USART 0070                  _Write_USART 02C8  
        start_initialization 000F                  __end_of_ISR 02B5           __end_of_Read_USART 02F6  
          ??_I2C_Master_Init 004A            __size_of__baudios 0005                  __pbssCOMMON 0079  
                  ___latbits 0002                __pcstackBANK0 003E                  sprintf@flag 004D  
         _Write_USART_String 0281                  sprintf@prec 004E                    __pnvBANK0 0054  
           ___lwdiv@dividend 0075          ?_Write_USART_String 0070                     ?___lldiv 003E  
                   ?___lwdiv 0073                     ?___lwmod 0041                    __pstrings 02B5  
       ??_Write_USART_String 0074             ___lwdiv@quotient 003F                     ?_sprintf 0046  
             __size_of_setup 0023            interrupt_function 0004                    clear_ram0 02DE  
                   _PIE1bits 008C                     _PIR1bits 000C                  __stringbase 02BA  
               ?_Write_USART 0070             __size_of___lldiv 0068             __size_of___lwdiv 0046  
           __size_of___lwmod 003C                     __baudios 02F6           __end_of__stringtab 02BB  
                 sprintf@val 004F              _I2C_Master_Init 01F2                     _lecUSART 0079  
            ___lwdiv@divisor 0073              ___lwdiv@counter 003E                     __ptext10 0281  
                   __ptext11 02C8                     __ptext12 029F                     __ptext13 02EE  
           __size_of_sprintf 00EA                __size_of_main 0032                     _segundos 007A  
                 _INTCONbits 000B          Write_USART_String@a 0075          Write_USART_String@i 0076  
                   intlevel1 0000                    sprintf@ap 004C                    sprintf@sp 0051  
           ___lwmod@dividend 0043             ___lldiv@dividend 0042                    stringcode 02B5  
    __end_of_I2C_Master_Init 022C                     sprintf@c 0052                     sprintf@f 0046  
           ___lldiv@quotient 0074              ___lwmod@divisor 0041              ___lwmod@counter 0045  
                   stringdir 02B5                     stringtab 02B5                  _SSPCON2bits 0091  
              ?_config_rcsta 0070                ?_config_txsta 0070  
