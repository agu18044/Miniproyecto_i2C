

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 17:03:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  0105                     	;# 
   147  0107                     	;# 
   148  0108                     	;# 
   149  0109                     	;# 
   150  010C                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0185                     	;# 
   156  0187                     	;# 
   157  0188                     	;# 
   158  0189                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0185                     	;# 
   234  0187                     	;# 
   235  0188                     	;# 
   236  0189                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  008F                     	;# 
   284  0090                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  0105                     	;# 
   303  0107                     	;# 
   304  0108                     	;# 
   305  0109                     	;# 
   306  010C                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  0185                     	;# 
   312  0187                     	;# 
   313  0188                     	;# 
   314  0189                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000E                     	;# 
   333  000F                     	;# 
   334  0010                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0014                     	;# 
   339  0015                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001B                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001D                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  0081                     	;# 
   353  0085                     	;# 
   354  0086                     	;# 
   355  0087                     	;# 
   356  0088                     	;# 
   357  0089                     	;# 
   358  008C                     	;# 
   359  008D                     	;# 
   360  008E                     	;# 
   361  008F                     	;# 
   362  0090                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0097                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009A                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  0105                     	;# 
   381  0107                     	;# 
   382  0108                     	;# 
   383  0109                     	;# 
   384  010C                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  010E                     	;# 
   388  010F                     	;# 
   389  0185                     	;# 
   390  0187                     	;# 
   391  0188                     	;# 
   392  0189                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  000E                     	;# 
   411  000F                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0015                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001B                     	;# 
   426  001C                     	;# 
   427  001D                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  0081                     	;# 
   431  0085                     	;# 
   432  0086                     	;# 
   433  0087                     	;# 
   434  0088                     	;# 
   435  0089                     	;# 
   436  008C                     	;# 
   437  008D                     	;# 
   438  008E                     	;# 
   439  008F                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0094                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  009F                     	;# 
   458  0105                     	;# 
   459  0107                     	;# 
   460  0108                     	;# 
   461  0109                     	;# 
   462  010C                     	;# 
   463  010C                     	;# 
   464  010D                     	;# 
   465  010E                     	;# 
   466  010F                     	;# 
   467  0185                     	;# 
   468  0187                     	;# 
   469  0188                     	;# 
   470  0189                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473                           
   474                           	psect	strings
   475  0800                     __pstrings:
   476  0800                     stringtab:
   477  0800                     __stringtab:
   478  0800                     stringcode:	
   479                           ;	String table - string pointers are 1 byte each
   480                           
   481  0800                     stringdir:
   482  0800  3008               	movlw	high stringdir
   483  0801  008A               	movwf	10
   484  0802  0804               	movf	4,w
   485  0803  0A84               	incf	4,f
   486  0804  0782               	addwf	2,f
   487  0805                     __stringbase:
   488  0805  3400               	retlw	0
   489  0806                     __end_of__stringtab:
   490  0806                     _dpowers:
   491  0806  3401               	retlw	1
   492  0807  3400               	retlw	0
   493  0808  340A               	retlw	10
   494  0809  3400               	retlw	0
   495  080A  3464               	retlw	100
   496  080B  3400               	retlw	0
   497  080C  34E8               	retlw	232
   498  080D  3403               	retlw	3
   499  080E  3410               	retlw	16
   500  080F  3427               	retlw	39
   501  0810                     __end_of_dpowers:
   502  0019                     _TXREG	set	25
   503  001A                     _RCREG	set	26
   504  0018                     _RCSTAbits	set	24
   505  0013                     _SSPBUF	set	19
   506  0014                     _SSPCON	set	20
   507  000C                     _PIR1bits	set	12
   508  000B                     _INTCONbits	set	11
   509  0009                     _PORTE	set	9
   510  0006                     _PORTB	set	6
   511  0008                     _PORTD	set	8
   512  0006                     _PORTBbits	set	6
   513  0049                     _RE1	set	73
   514  0048                     _RE0	set	72
   515  0047                     _RD7	set	71
   516  0046                     _RD6	set	70
   517  0045                     _RD5	set	69
   518  0044                     _RD4	set	68
   519  0043                     _RD3	set	67
   520  0042                     _RD2	set	66
   521  0041                     _RD1	set	65
   522  0040                     _RD0	set	64
   523  0063                     _SSPIF	set	99
   524  005E                     _PEIE	set	94
   525  005F                     _GIE	set	95
   526  0065                     _RCIF	set	101
   527  0098                     _TXSTAbits	set	152
   528  0099                     _SPBRG	set	153
   529  0091                     _SSPCON2bits	set	145
   530  0087                     _TRISCbits	set	135
   531  0094                     _SSPSTAT	set	148
   532  0093                     _SSPADD	set	147
   533  0091                     _SSPCON2	set	145
   534  008C                     _PIE1bits	set	140
   535  0089                     _TRISE	set	137
   536  0086                     _TRISB	set	134
   537  0088                     _TRISD	set	136
   538  04C1                     _TRMT	set	1217
   539  0463                     _SSPIE	set	1123
   540  043C                     _TRISC4	set	1084
   541  043B                     _TRISC3	set	1083
   542  047E                     _IRCF2	set	1150
   543  047D                     _IRCF1	set	1149
   544  047C                     _IRCF0	set	1148
   545  0189                     _ANSELH	set	393
   546  0188                     _ANSEL	set	392
   547  0810                     STR_2:
   548  0810  3454               	retlw	84	;'T'
   549  0811  3449               	retlw	73	;'I'
   550  0812  3445               	retlw	69	;'E'
   551  0813  344D               	retlw	77	;'M'
   552  0814  3450               	retlw	80	;'P'
   553  0815  344F               	retlw	79	;'O'
   554  0816  3420               	retlw	32	;' '
   555  0817  3400               	retlw	0
   556  0818                     STR_1:
   557  0818  3425               	retlw	37	;'%'
   558  0819  3464               	retlw	100	;'d'
   559  081A  3400               	retlw	0
   560                           
   561                           	psect	cinit
   562  000F                     start_initialization:	
   563                           ; #config settings
   564                           
   565  000F                     __initialization:
   566                           
   567                           ; Clear objects allocated to COMMON
   568  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   569  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   570  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   571                           
   572                           ; Clear objects allocated to BANK0
   573  0012  1383               	bcf	3,7	;select IRP bank0
   574  0013  3020               	movlw	low __pbssBANK0
   575  0014  0084               	movwf	4
   576  0015  303F               	movlw	low (__pbssBANK0+31)
   577  0016  120A  158A  2797  120A  118A  	fcall	clear_ram0
   578  001B                     end_of_initialization:	
   579                           ;End of C runtime variable initialization code
   580                           
   581  001B                     __end_of__initialization:
   582  001B  0183               	clrf	3
   583  001C  120A  118A  2CB0   	ljmp	_main	;jump to C main() function
   584                           
   585                           	psect	bssCOMMON
   586  0078                     __pbssCOMMON:
   587  0078                     _min:
   588  0078                     	ds	2
   589  007A                     _lecUSART:
   590  007A                     	ds	1
   591                           
   592                           	psect	bssBANK0
   593  0020                     __pbssBANK0:
   594  0020                     _year:
   595  0020                     	ds	2
   596  0022                     _mes:
   597  0022                     	ds	2
   598  0024                     _dia:
   599  0024                     	ds	2
   600  0026                     _hora:
   601  0026                     	ds	2
   602  0028                     _seg:
   603  0028                     	ds	2
   604  002A                     _segundos:
   605  002A                     	ds	1
   606  002B                     _BUFFER:
   607  002B                     	ds	20
   608                           
   609                           	psect	clrtext
   610  0F97                     clear_ram0:	
   611                           ;	Called with FSR containing the base address, and
   612                           ;	W with the last address+1
   613                           
   614  0F97  0064               	clrwdt	;clear the watchdog before getting into this loop
   615  0F98                     clrloop0:
   616  0F98  0180               	clrf	0	;clear RAM location pointed to by FSR
   617  0F99  0A84               	incf	4,f	;increment pointer
   618  0F9A  0604               	xorwf	4,w	;XOR with final address
   619  0F9B  1903               	btfsc	3,2	;have we reached the end yet?
   620  0F9C  3400               	retlw	0	;all done for this memory range, return
   621  0F9D  0604               	xorwf	4,w	;XOR again to restore value
   622  0F9E  2F98               	goto	clrloop0	;do the next byte
   623                           
   624                           	psect	cstackCOMMON
   625  0070                     __pcstackCOMMON:
   626  0070                     ?_Read_USART:
   627  0070                     ??_Read_USART:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_setup:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_LCD_init:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_LCD_clear:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?__baudios:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_config_txsta:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_config_rcsta:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_set_tiempo:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_lec_tiempo:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_sep_char_LCD:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_Write_USART_String:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_Write_USART:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_I2C_Master_Start:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_I2C_Master_Stop:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_write_string:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_write_char:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_ISR:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ??_ISR:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_main:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_bcd_a_dec:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_dec_a_bcd:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_I2C_Master_Wait:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_port:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_CMDs:	
   697                           ; 1 bytes @ 0x0
   698                           
   699                           
   700                           ; 1 bytes @ 0x0
   701  0070                     	ds	3
   702  0073                     ??__baudios:
   703  0073                     ??_config_txsta:	
   704                           ; 1 bytes @ 0x3
   705                           
   706  0073                     ??_config_rcsta:	
   707                           ; 1 bytes @ 0x3
   708                           
   709  0073                     ??_Write_USART:	
   710                           ; 1 bytes @ 0x3
   711                           
   712  0073                     ??_I2C_Master_Start:	
   713                           ; 1 bytes @ 0x3
   714                           
   715  0073                     ??_I2C_Master_Stop:	
   716                           ; 1 bytes @ 0x3
   717                           
   718  0073                     ??_I2C_Master_Wait:	
   719                           ; 1 bytes @ 0x3
   720                           
   721  0073                     ??_port:	
   722                           ; 1 bytes @ 0x3
   723                           
   724  0073                     ?___bmul:	
   725                           ; 1 bytes @ 0x3
   726                           
   727  0073                     ??___lldiv:	
   728                           ; 1 bytes @ 0x3
   729                           
   730  0073                     ?_I2C_Master_Read:	
   731                           ; 1 bytes @ 0x3
   732                           
   733  0073                     ?___awdiv:	
   734                           ; 2 bytes @ 0x3
   735                           
   736  0073                     ?___awmod:	
   737                           ; 2 bytes @ 0x3
   738                           
   739  0073                     ?___lwdiv:	
   740                           ; 2 bytes @ 0x3
   741                           
   742  0073                     Write_USART@a:	
   743                           ; 2 bytes @ 0x3
   744                           
   745  0073                     port@a:	
   746                           ; 1 bytes @ 0x3
   747                           
   748  0073                     ___bmul@multiplicand:	
   749                           ; 1 bytes @ 0x3
   750                           
   751  0073                     I2C_Master_Read@a:	
   752                           ; 1 bytes @ 0x3
   753                           
   754  0073                     ___awdiv@divisor:	
   755                           ; 2 bytes @ 0x3
   756                           
   757  0073                     ___awmod@divisor:	
   758                           ; 2 bytes @ 0x3
   759                           
   760  0073                     ___lwdiv@divisor:	
   761                           ; 2 bytes @ 0x3
   762                           
   763                           
   764                           ; 2 bytes @ 0x3
   765  0073                     	ds	1
   766  0074                     ??_Write_USART_String:
   767  0074                     ??_write_char:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0074                     ??_I2C_Master_Init:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0074                     ??_CMDs:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     ??___bmul:	
   777                           ; 1 bytes @ 0x4
   778                           
   779                           
   780                           ; 1 bytes @ 0x4
   781  0074                     	ds	1
   782  0075                     ??_I2C_Master_Read:
   783  0075                     Write_USART_String@a:	
   784                           ; 1 bytes @ 0x5
   785                           
   786  0075                     write_char@a:	
   787                           ; 1 bytes @ 0x5
   788                           
   789  0075                     ___bmul@product:	
   790                           ; 1 bytes @ 0x5
   791                           
   792  0075                     ___awdiv@dividend:	
   793                           ; 1 bytes @ 0x5
   794                           
   795  0075                     ___awmod@dividend:	
   796                           ; 2 bytes @ 0x5
   797                           
   798  0075                     ___lwdiv@dividend:	
   799                           ; 2 bytes @ 0x5
   800                           
   801                           
   802                           ; 2 bytes @ 0x5
   803  0075                     	ds	1
   804  0076                     ??_write_string:
   805  0076                     Write_USART_String@i:	
   806                           ; 1 bytes @ 0x6
   807                           
   808  0076                     CMDs@a:	
   809                           ; 1 bytes @ 0x6
   810                           
   811  0076                     ___bmul@multiplier:	
   812                           ; 1 bytes @ 0x6
   813                           
   814                           
   815                           ; 1 bytes @ 0x6
   816  0076                     	ds	1
   817  0077                     ??_LCD_clear:
   818  0077                     ?_set_cursor:	
   819                           ; 1 bytes @ 0x7
   820                           
   821  0077                     ??___awdiv:	
   822                           ; 1 bytes @ 0x7
   823                           
   824  0077                     ??___awmod:	
   825                           ; 1 bytes @ 0x7
   826                           
   827  0077                     ??___lwdiv:	
   828                           ; 1 bytes @ 0x7
   829                           
   830  0077                     bcd_a_dec@valor:	
   831                           ; 1 bytes @ 0x7
   832                           
   833  0077                     set_cursor@b:	
   834                           ; 1 bytes @ 0x7
   835                           
   836                           
   837                           ; 1 bytes @ 0x7
   838  0077                     	ds	1
   839  0078                     ??_setup:
   840  0078                     ??_I2C_Master_Write:	
   841                           ; 1 bytes @ 0x8
   842                           
   843                           
   844                           	psect	cstackBANK0
   845  003F                     __pcstackBANK0:	
   846                           ; 1 bytes @ 0x8
   847                           
   848  003F                     ??_LCD_init:
   849  003F                     ??_set_cursor:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  003F                     ??_bcd_a_dec:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  003F                     ?___lldiv:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  003F                     write_string@a:	
   859                           ; 4 bytes @ 0x0
   860                           
   861  003F                     ___awdiv@counter:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  003F                     ___awmod@counter:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  003F                     ___lwdiv@counter:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  003F                     I2C_Master_Read@temp:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  003F                     ___lldiv@divisor:	
   874                           ; 2 bytes @ 0x0
   875                           
   876                           
   877                           ; 4 bytes @ 0x0
   878  003F                     	ds	1
   879  0040                     set_cursor@a:
   880  0040                     ___awdiv@sign:	
   881                           ; 1 bytes @ 0x1
   882                           
   883  0040                     ___awmod@sign:	
   884                           ; 1 bytes @ 0x1
   885                           
   886  0040                     write_string@i:	
   887                           ; 1 bytes @ 0x1
   888                           
   889  0040                     ___lwdiv@quotient:	
   890                           ; 2 bytes @ 0x1
   891                           
   892                           
   893                           ; 2 bytes @ 0x1
   894  0040                     	ds	1
   895  0041                     set_cursor@x:
   896  0041                     ___awdiv@quotient:	
   897                           ; 1 bytes @ 0x2
   898                           
   899                           
   900                           ; 2 bytes @ 0x2
   901  0041                     	ds	1
   902  0042                     ?___lwmod:
   903  0042                     ___lwmod@divisor:	
   904                           ; 2 bytes @ 0x3
   905                           
   906                           
   907                           ; 2 bytes @ 0x3
   908  0042                     	ds	1
   909  0043                     ??_sep_char_LCD:
   910  0043                     ??_dec_a_bcd:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0043                     ___lldiv@dividend:	
   914                           ; 1 bytes @ 0x4
   915                           
   916                           
   917                           ; 4 bytes @ 0x4
   918  0043                     	ds	1
   919  0044                     sep_char_LCD@seg_0:
   920  0044                     ___lwmod@dividend:	
   921                           ; 1 bytes @ 0x5
   922                           
   923                           
   924                           ; 2 bytes @ 0x5
   925  0044                     	ds	1
   926  0045                     sep_char_LCD@seg_1:
   927                           
   928                           ; 1 bytes @ 0x6
   929  0045                     	ds	1
   930  0046                     ??___lwmod:
   931  0046                     sep_char_LCD@min_0:	
   932                           ; 1 bytes @ 0x7
   933                           
   934                           
   935                           ; 1 bytes @ 0x7
   936  0046                     	ds	1
   937  0047                     sep_char_LCD@min_1:
   938  0047                     ___lwmod@counter:	
   939                           ; 1 bytes @ 0x8
   940                           
   941  0047                     ___lldiv@quotient:	
   942                           ; 1 bytes @ 0x8
   943                           
   944                           
   945                           ; 4 bytes @ 0x8
   946  0047                     	ds	1
   947  0048                     ?_sprintf:
   948  0048                     dec_a_bcd@valor:	
   949                           ; 2 bytes @ 0x9
   950                           
   951  0048                     sep_char_LCD@hora_0:	
   952                           ; 1 bytes @ 0x9
   953                           
   954  0048                     sprintf@f:	
   955                           ; 1 bytes @ 0x9
   956                           
   957                           
   958                           ; 1 bytes @ 0x9
   959  0048                     	ds	1
   960  0049                     ?_I2C_Master_Write:
   961  0049                     sep_char_LCD@hora_1:	
   962                           ; 1 bytes @ 0xA
   963                           
   964  0049                     I2C_Master_Write@d:	
   965                           ; 1 bytes @ 0xA
   966                           
   967                           
   968                           ; 2 bytes @ 0xA
   969  0049                     	ds	2
   970  004B                     ??_set_tiempo:
   971  004B                     ??_lec_tiempo:	
   972                           ; 1 bytes @ 0xC
   973                           
   974  004B                     ??_sprintf:	
   975                           ; 1 bytes @ 0xC
   976                           
   977  004B                     ___lldiv@counter:	
   978                           ; 1 bytes @ 0xC
   979                           
   980                           
   981                           ; 1 bytes @ 0xC
   982  004B                     	ds	1
   983  004C                     ?_I2C_Master_Init:
   984  004C                     I2C_Master_Init@c:	
   985                           ; 1 bytes @ 0xD
   986                           
   987                           
   988                           ; 4 bytes @ 0xD
   989  004C                     	ds	2
   990  004E                     sprintf@ap:
   991                           
   992                           ; 1 bytes @ 0xF
   993  004E                     	ds	1
   994  004F                     sprintf@flag:
   995                           
   996                           ; 1 bytes @ 0x10
   997  004F                     	ds	1
   998  0050                     sprintf@prec:
   999                           
  1000                           ; 1 bytes @ 0x11
  1001  0050                     	ds	1
  1002  0051                     sprintf@val:
  1003                           
  1004                           ; 2 bytes @ 0x12
  1005  0051                     	ds	2
  1006  0053                     sprintf@sp:
  1007                           
  1008                           ; 1 bytes @ 0x14
  1009  0053                     	ds	1
  1010  0054                     sprintf@c:
  1011                           
  1012                           ; 1 bytes @ 0x15
  1013  0054                     	ds	1
  1014  0055                     ??_main:
  1015                           
  1016                           ; 1 bytes @ 0x16
  1017  0055                     	ds	3
  1018                           
  1019                           	psect	maintext
  1020  04B0                     __pmaintext:	
  1021 ;;
  1022 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1023 ;;
  1024 ;; *************** function _main *****************
  1025 ;; Defined at:
  1026 ;;		line 86 in file "main.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : B00/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0
  1042 ;;      Temps:          0       3       0       0       0
  1043 ;;      Totals:         0       3       0       0       0
  1044 ;;Total ram usage:        3 bytes
  1045 ;; Hardware stack levels required when called:    6
  1046 ;; This function calls:
  1047 ;;		_LCD_clear
  1048 ;;		_LCD_init
  1049 ;;		_Write_USART
  1050 ;;		_Write_USART_String
  1051 ;;		__baudios
  1052 ;;		_config_rcsta
  1053 ;;		_config_txsta
  1054 ;;		_lec_tiempo
  1055 ;;		_sep_char_LCD
  1056 ;;		_set_tiempo
  1057 ;;		_setup
  1058 ;;		_sprintf
  1059 ;; This function is called by:
  1060 ;;		Startup code after reset
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           
  1065                           ;psect for function _main
  1066  04B0                     _main:
  1067  04B0                     l2236:	
  1068                           ;incstack = 0
  1069                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1070                           
  1071                           
  1072                           ;main.c: 87:     I2C_Master_Write (1);
  1073  04B0  120A  118A  2704  120A  118A  	fcall	_setup
  1074                           
  1075                           ;main.c: 88:     I2C_Master_Write(dec_a_bcd(dia));
  1076  04B5  120A  118A  236A  120A  118A  	fcall	_LCD_init
  1077                           
  1078                           ;main.c: 89:     I2C_Master_Write(dec_a_bcd(mes));
  1079  04BA  120A  158A  27D1  120A  118A  	fcall	_LCD_clear
  1080                           
  1081                           ;main.c: 90:     I2C_Master_Write(dec_a_bcd(year));
  1082  04BF  120A  118A  27FB  120A  118A  	fcall	__baudios
  1083  04C4                     l2238:
  1084                           
  1085                           ;main.c: 91:     I2C_Master_Stop();
  1086  04C4  120A  158A  27B1  120A  118A  	fcall	_config_txsta
  1087  04C9                     l2240:
  1088                           
  1089                           ;main.c: 92: 
  1090  04C9  120A  158A  278F  120A  118A  	fcall	_config_rcsta
  1091                           
  1092                           ;main.c: 93: }
  1093  04CE  120A  118A  22C3  120A  118A  	fcall	_set_tiempo
  1094  04D3                     l111:	
  1095                           ;main.c: 94: 
  1096                           
  1097                           
  1098                           ;main.c: 95: void lec_tiempo (void){
  1099  04D3  120A  118A  201F  120A  118A  	fcall	_lec_tiempo
  1100  04D8                     l2242:
  1101                           
  1102                           ;main.c: 97:       I2C_Master_Write(0xD0);
  1103  04D8  120A  118A  21FE  120A  118A  	fcall	_sep_char_LCD
  1104  04DD                     l2244:
  1105                           
  1106                           ;main.c: 99:       I2C_Master_Stop();
  1107  04DD  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1108  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1109  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1110  04E0  00D5               	movwf	??_main
  1111  04E1  0855               	movf	??_main,w
  1112  04E2  00C8               	movwf	sprintf@f
  1113  04E3  0829               	movf	_seg+1,w
  1114  04E4  00CA               	movwf	?_sprintf+2
  1115  04E5  0828               	movf	_seg,w
  1116  04E6  00C9               	movwf	?_sprintf+1
  1117  04E7  302B               	movlw	(low (_BUFFER| 0))& (0+255)
  1118  04E8  120A  118A  2114  120A  118A  	fcall	_sprintf
  1119  04ED                     l2246:
  1120                           
  1121                           ;main.c: 100: 
  1122  04ED  302B               	movlw	(low (_BUFFER| 0))& (0+255)
  1123  04EE  120A  118A  27A4  120A  118A  	fcall	_Write_USART_String
  1124  04F3                     l2248:
  1125                           
  1126                           ;main.c: 101:       I2C_Master_Start();
  1127  04F3  300D               	movlw	13
  1128  04F4  120A  158A  27C5  120A  118A  	fcall	_Write_USART
  1129  04F9                     l2250:
  1130                           
  1131                           ;main.c: 102:       I2C_Master_Write(0xD1);
  1132  04F9  300A               	movlw	10
  1133  04FA  120A  158A  27C5  120A  118A  	fcall	_Write_USART
  1134  04FF                     l2252:
  1135                           
  1136                           ;main.c: 104:       min = bcd_a_dec(I2C_Master_Read(1));
  1137  04FF  3006               	movlw	6
  1138  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0502  00D7               	movwf	??_main+2
  1141  0503  3013               	movlw	19
  1142  0504  00D6               	movwf	??_main+1
  1143  0505  30AD               	movlw	173
  1144  0506  00D5               	movwf	??_main
  1145  0507                     u1987:
  1146  0507  0BD5               	decfsz	??_main,f
  1147  0508  2D07               	goto	u1987
  1148  0509  0BD6               	decfsz	??_main+1,f
  1149  050A  2D07               	goto	u1987
  1150  050B  0BD7               	decfsz	??_main+2,f
  1151  050C  2D07               	goto	u1987
  1152  050D  2CD3               	goto	l111
  1153  050E  120A  118A  280C   	ljmp	start
  1154  0511                     __end_of_main:
  1155                           
  1156                           	psect	text1
  1157  0114                     __ptext1:	
  1158 ;; *************** function _sprintf *****************
  1159 ;; Defined at:
  1160 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  sp              1    wreg     PTR unsigned char 
  1163 ;;		 -> BUFFER(20), 
  1164 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1165 ;;		 -> STR_1(3), 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1168 ;;		 -> BUFFER(20), 
  1169 ;;  tmpval          4    0        struct .
  1170 ;;  val             2   18[BANK0 ] unsigned int 
  1171 ;;  cp              2    0        PTR const unsigned char 
  1172 ;;  len             2    0        unsigned int 
  1173 ;;  c               1   21[BANK0 ] unsigned char 
  1174 ;;  prec            1   17[BANK0 ] char 
  1175 ;;  flag            1   16[BANK0 ] unsigned char 
  1176 ;;  ap              1   15[BANK0 ] PTR void [1]
  1177 ;;		 -> ?_sprintf(2), 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  2    9[BANK0 ] int 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       3       0       0       0
  1188 ;;      Locals:         0       7       0       0       0
  1189 ;;      Temps:          0       3       0       0       0
  1190 ;;      Totals:         0      13       0       0       0
  1191 ;;Total ram usage:       13 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    3
  1194 ;; This function calls:
  1195 ;;		___lwdiv
  1196 ;;		___lwmod
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           
  1203                           ;psect for function _sprintf
  1204  0114                     _sprintf:
  1205                           
  1206                           ;incstack = 0
  1207                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1208                           ;sprintf@sp stored from wreg
  1209  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0116  00D3               	movwf	sprintf@sp
  1212  0117                     l2174:
  1213                           
  1214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1215  0117  3049               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1216  0118  00CB               	movwf	??_sprintf
  1217  0119  084B               	movf	??_sprintf,w
  1218  011A  00CE               	movwf	sprintf@ap
  1219                           
  1220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1221  011B  29E7               	goto	l2226
  1222  011C                     l2176:
  1223                           
  1224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1225  011C  3025               	movlw	37
  1226  011D  0654               	xorwf	sprintf@c,w
  1227  011E  1903               	btfsc	3,2
  1228  011F  2921               	goto	u1911
  1229  0120  2922               	goto	u1910
  1230  0121                     u1911:
  1231  0121  292E               	goto	l2182
  1232  0122                     u1910:
  1233  0122                     l2178:
  1234                           
  1235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1236  0122  0854               	movf	sprintf@c,w
  1237  0123  00CB               	movwf	??_sprintf
  1238  0124  0853               	movf	sprintf@sp,w
  1239  0125  0084               	movwf	4
  1240  0126  084B               	movf	??_sprintf,w
  1241  0127  1383               	bcf	3,7	;select IRP bank0
  1242  0128  0080               	movwf	0
  1243  0129                     l2180:
  1244  0129  3001               	movlw	1
  1245  012A  00CB               	movwf	??_sprintf
  1246  012B  084B               	movf	??_sprintf,w
  1247  012C  07D3               	addwf	sprintf@sp,f
  1248                           
  1249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1250  012D  29E7               	goto	l2226
  1251  012E                     l2182:
  1252                           
  1253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1254  012E  01CF               	clrf	sprintf@flag
  1255  012F                     l2186:	
  1256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1257                           
  1258  012F  3001               	movlw	1
  1259  0130  07C8               	addwf	sprintf@f,f
  1260  0131  30FF               	movlw	-1
  1261  0132  0748               	addwf	sprintf@f,w
  1262  0133  0084               	movwf	4
  1263  0134  120A  158A  2000  120A  118A  	fcall	stringdir
  1264  0139  00D4               	movwf	sprintf@c
  1265  013A  00CB               	movwf	??_sprintf
  1266  013B  01CC               	clrf	??_sprintf+1
  1267                           
  1268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1269                           ; Switch size 1, requested type "simple"
  1270                           ; Number of cases is 1, Range of values is 0 to 0
  1271                           ; switch strategies available:
  1272                           ; Name         Instructions Cycles
  1273                           ; simple_byte            4     3 (average)
  1274                           ; direct_byte           11     8 (fixed)
  1275                           ; jumptable            260     6 (fixed)
  1276                           ;	Chosen strategy is simple_byte
  1277  013C  084C               	movf	??_sprintf+1,w
  1278  013D  3A00               	xorlw	0	; case 0
  1279  013E  1903               	skipnz
  1280  013F  2941               	goto	l2278
  1281  0140  29E7               	goto	l2226
  1282  0141                     l2278:
  1283                           
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 3, Range of values is 0 to 105
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte           10     6 (average)
  1289                           ; jumptable            260     6 (fixed)
  1290                           ;	Chosen strategy is simple_byte
  1291  0141  084B               	movf	??_sprintf,w
  1292  0142  3A00               	xorlw	0	; case 0
  1293  0143  1903               	skipnz
  1294  0144  29F9               	goto	l2228
  1295  0145  3A64               	xorlw	100	; case 100
  1296  0146  1903               	skipnz
  1297  0147  294C               	goto	l2188
  1298  0148  3A0D               	xorlw	13	; case 105
  1299  0149  1903               	skipnz
  1300  014A  294C               	goto	l2188
  1301  014B  29E7               	goto	l2226
  1302  014C                     l2188:
  1303                           
  1304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1305  014C  084E               	movf	sprintf@ap,w
  1306  014D  0084               	movwf	4
  1307  014E  1383               	bcf	3,7	;select IRP bank0
  1308  014F  0800               	movf	0,w
  1309  0150  00D1               	movwf	sprintf@val
  1310  0151  0A84               	incf	4,f
  1311  0152  0800               	movf	0,w
  1312  0153  00D2               	movwf	sprintf@val+1
  1313  0154                     l2190:
  1314  0154  3002               	movlw	2
  1315  0155  00CB               	movwf	??_sprintf
  1316  0156  084B               	movf	??_sprintf,w
  1317  0157  07CE               	addwf	sprintf@ap,f
  1318  0158                     l2192:
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1321  0158  1FD2               	btfss	sprintf@val+1,7
  1322  0159  295B               	goto	u1921
  1323  015A  295C               	goto	u1920
  1324  015B                     u1921:
  1325  015B  2965               	goto	l2198
  1326  015C                     u1920:
  1327  015C                     l2194:
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1330  015C  3003               	movlw	3
  1331  015D  00CB               	movwf	??_sprintf
  1332  015E  084B               	movf	??_sprintf,w
  1333  015F  04CF               	iorwf	sprintf@flag,f
  1334  0160                     l2196:
  1335                           
  1336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1337  0160  09D1               	comf	sprintf@val,f
  1338  0161  09D2               	comf	sprintf@val+1,f
  1339  0162  0AD1               	incf	sprintf@val,f
  1340  0163  1903               	skipnz
  1341  0164  0AD2               	incf	sprintf@val+1,f
  1342  0165                     l2198:
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1345  0165  01D4               	clrf	sprintf@c
  1346  0166  0AD4               	incf	sprintf@c,f
  1347  0167                     l2204:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1350  0167  0854               	movf	sprintf@c,w
  1351  0168  00CB               	movwf	??_sprintf
  1352  0169  074B               	addwf	??_sprintf,w
  1353  016A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1354  016B  0084               	movwf	4
  1355  016C  120A  158A  2000  120A  118A  	fcall	stringdir
  1356  0171  00CC               	movwf	??_sprintf+1
  1357  0172  120A  158A  2000  120A  118A  	fcall	stringdir
  1358  0177  00CD               	movwf	??_sprintf+2
  1359  0178  084D               	movf	??_sprintf+2,w
  1360  0179  0252               	subwf	sprintf@val+1,w
  1361  017A  1D03               	skipz
  1362  017B  297E               	goto	u1935
  1363  017C  084C               	movf	??_sprintf+1,w
  1364  017D  0251               	subwf	sprintf@val,w
  1365  017E                     u1935:
  1366  017E  1803               	skipnc
  1367  017F  2981               	goto	u1931
  1368  0180  2982               	goto	u1930
  1369  0181                     u1931:
  1370  0181  2983               	goto	l2208
  1371  0182                     u1930:
  1372  0182  298D               	goto	l2210
  1373  0183                     l2208:
  1374  0183  3001               	movlw	1
  1375  0184  00CB               	movwf	??_sprintf
  1376  0185  084B               	movf	??_sprintf,w
  1377  0186  07D4               	addwf	sprintf@c,f
  1378  0187  3005               	movlw	5
  1379  0188  0654               	xorwf	sprintf@c,w
  1380  0189  1D03               	btfss	3,2
  1381  018A  298C               	goto	u1941
  1382  018B  298D               	goto	u1940
  1383  018C                     u1941:
  1384  018C  2967               	goto	l2204
  1385  018D                     u1940:
  1386  018D                     l2210:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1389  018D  084F               	movf	sprintf@flag,w
  1390  018E  3903               	andlw	3
  1391  018F  1903               	btfsc	3,2
  1392  0190  2992               	goto	u1951
  1393  0191  2993               	goto	u1950
  1394  0192                     u1951:
  1395  0192  299E               	goto	l2216
  1396  0193                     u1950:
  1397  0193                     l2212:
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1400  0193  302D               	movlw	45
  1401  0194  00CB               	movwf	??_sprintf
  1402  0195  0853               	movf	sprintf@sp,w
  1403  0196  0084               	movwf	4
  1404  0197  084B               	movf	??_sprintf,w
  1405  0198  1383               	bcf	3,7	;select IRP bank0
  1406  0199  0080               	movwf	0
  1407  019A                     l2214:
  1408  019A  3001               	movlw	1
  1409  019B  00CB               	movwf	??_sprintf
  1410  019C  084B               	movf	??_sprintf,w
  1411  019D  07D3               	addwf	sprintf@sp,f
  1412  019E                     l2216:
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1415  019E  0854               	movf	sprintf@c,w
  1416  019F  00CB               	movwf	??_sprintf
  1417  01A0  084B               	movf	??_sprintf,w
  1418  01A1  00D0               	movwf	sprintf@prec
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1421  01A2  29DE               	goto	l2224
  1422  01A3                     l2218:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1425  01A3  300A               	movlw	10
  1426  01A4  00C2               	movwf	___lwmod@divisor
  1427  01A5  3000               	movlw	0
  1428  01A6  00C3               	movwf	___lwmod@divisor+1
  1429  01A7  0850               	movf	sprintf@prec,w
  1430  01A8  00CB               	movwf	??_sprintf
  1431  01A9  074B               	addwf	??_sprintf,w
  1432  01AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1433  01AB  0084               	movwf	4
  1434  01AC  120A  158A  2000  120A  118A  	fcall	stringdir
  1435  01B1  00F3               	movwf	___lwdiv@divisor
  1436  01B2  120A  158A  2000  120A  118A  	fcall	stringdir
  1437  01B7  00F4               	movwf	___lwdiv@divisor+1
  1438  01B8  0852               	movf	sprintf@val+1,w
  1439  01B9  00F6               	movwf	___lwdiv@dividend+1
  1440  01BA  0851               	movf	sprintf@val,w
  1441  01BB  00F5               	movwf	___lwdiv@dividend
  1442  01BC  120A  118A  256C  120A  118A  	fcall	___lwdiv
  1443  01C1  0874               	movf	?___lwdiv+1,w
  1444  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1445  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1446  01C4  00C5               	movwf	___lwmod@dividend+1
  1447  01C5  0873               	movf	?___lwdiv,w
  1448  01C6  00C4               	movwf	___lwmod@dividend
  1449  01C7  120A  118A  25F0  120A  118A  	fcall	___lwmod
  1450  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1451  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1452  01CE  0842               	movf	?___lwmod,w
  1453  01CF  3E30               	addlw	48
  1454  01D0  00CC               	movwf	??_sprintf+1
  1455  01D1  084C               	movf	??_sprintf+1,w
  1456  01D2  00D4               	movwf	sprintf@c
  1457  01D3                     l2220:
  1458                           
  1459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1460  01D3  0854               	movf	sprintf@c,w
  1461  01D4  00CB               	movwf	??_sprintf
  1462  01D5  0853               	movf	sprintf@sp,w
  1463  01D6  0084               	movwf	4
  1464  01D7  084B               	movf	??_sprintf,w
  1465  01D8  1383               	bcf	3,7	;select IRP bank0
  1466  01D9  0080               	movwf	0
  1467  01DA                     l2222:
  1468  01DA  3001               	movlw	1
  1469  01DB  00CB               	movwf	??_sprintf
  1470  01DC  084B               	movf	??_sprintf,w
  1471  01DD  07D3               	addwf	sprintf@sp,f
  1472  01DE                     l2224:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1475  01DE  30FF               	movlw	255
  1476  01DF  00CB               	movwf	??_sprintf
  1477  01E0  084B               	movf	??_sprintf,w
  1478  01E1  07D0               	addwf	sprintf@prec,f
  1479  01E2  0A50               	incf	sprintf@prec,w
  1480  01E3  1D03               	btfss	3,2
  1481  01E4  29E6               	goto	u1961
  1482  01E5  29E7               	goto	u1960
  1483  01E6                     u1961:
  1484  01E6  29A3               	goto	l2218
  1485  01E7                     u1960:
  1486  01E7                     l2226:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1489  01E7  3001               	movlw	1
  1490  01E8  07C8               	addwf	sprintf@f,f
  1491  01E9  30FF               	movlw	-1
  1492  01EA  0748               	addwf	sprintf@f,w
  1493  01EB  0084               	movwf	4
  1494  01EC  120A  158A  2000  120A  118A  	fcall	stringdir
  1495  01F1  00CB               	movwf	??_sprintf
  1496  01F2  084B               	movf	??_sprintf,w
  1497  01F3  00D4               	movwf	sprintf@c
  1498  01F4  0854               	movf	sprintf@c,w
  1499  01F5  1D03               	btfss	3,2
  1500  01F6  29F8               	goto	u1971
  1501  01F7  29F9               	goto	u1970
  1502  01F8                     u1971:
  1503  01F8  291C               	goto	l2176
  1504  01F9                     u1970:
  1505  01F9                     l2228:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1508  01F9  0853               	movf	sprintf@sp,w
  1509  01FA  0084               	movwf	4
  1510  01FB  1383               	bcf	3,7	;select IRP bank0
  1511  01FC  0180               	clrf	0
  1512  01FD                     l403:
  1513  01FD  0008               	return
  1514  01FE                     __end_of_sprintf:
  1515                           
  1516                           	psect	text2
  1517  05F0                     __ptext2:	
  1518 ;; *************** function ___lwmod *****************
  1519 ;; Defined at:
  1520 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  divisor         2    3[BANK0 ] unsigned int 
  1523 ;;  dividend        2    5[BANK0 ] unsigned int 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  counter         1    8[BANK0 ] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  2    3[BANK0 ] unsigned int 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       4       0       0       0
  1536 ;;      Locals:         0       1       0       0       0
  1537 ;;      Temps:          0       1       0       0       0
  1538 ;;      Totals:         0       6       0       0       0
  1539 ;;Total ram usage:        6 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    2
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_sprintf
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           
  1550                           ;psect for function ___lwmod
  1551  05F0                     ___lwmod:
  1552  05F0                     l1642:	
  1553                           ;incstack = 0
  1554                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1555                           
  1556  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1557  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1558  05F2  0842               	movf	___lwmod@divisor,w
  1559  05F3  0443               	iorwf	___lwmod@divisor+1,w
  1560  05F4  1903               	btfsc	3,2
  1561  05F5  2DF7               	goto	u1271
  1562  05F6  2DF8               	goto	u1270
  1563  05F7                     u1271:
  1564  05F7  2E27               	goto	l1660
  1565  05F8                     u1270:
  1566  05F8                     l1644:
  1567  05F8  01C7               	clrf	___lwmod@counter
  1568  05F9  0AC7               	incf	___lwmod@counter,f
  1569  05FA  2E06               	goto	l1650
  1570  05FB                     l1646:
  1571  05FB  3001               	movlw	1
  1572  05FC                     u1285:
  1573  05FC  1003               	clrc
  1574  05FD  0DC2               	rlf	___lwmod@divisor,f
  1575  05FE  0DC3               	rlf	___lwmod@divisor+1,f
  1576  05FF  3EFF               	addlw	-1
  1577  0600  1D03               	skipz
  1578  0601  2DFC               	goto	u1285
  1579  0602                     l1648:
  1580  0602  3001               	movlw	1
  1581  0603  00C6               	movwf	??___lwmod
  1582  0604  0846               	movf	??___lwmod,w
  1583  0605  07C7               	addwf	___lwmod@counter,f
  1584  0606                     l1650:
  1585  0606  1FC3               	btfss	___lwmod@divisor+1,7
  1586  0607  2E09               	goto	u1291
  1587  0608  2E0A               	goto	u1290
  1588  0609                     u1291:
  1589  0609  2DFB               	goto	l1646
  1590  060A                     u1290:
  1591  060A                     l1652:
  1592  060A  0843               	movf	___lwmod@divisor+1,w
  1593  060B  0245               	subwf	___lwmod@dividend+1,w
  1594  060C  1D03               	skipz
  1595  060D  2E10               	goto	u1305
  1596  060E  0842               	movf	___lwmod@divisor,w
  1597  060F  0244               	subwf	___lwmod@dividend,w
  1598  0610                     u1305:
  1599  0610  1C03               	skipc
  1600  0611  2E13               	goto	u1301
  1601  0612  2E14               	goto	u1300
  1602  0613                     u1301:
  1603  0613  2E1A               	goto	l1656
  1604  0614                     u1300:
  1605  0614                     l1654:
  1606  0614  0842               	movf	___lwmod@divisor,w
  1607  0615  02C4               	subwf	___lwmod@dividend,f
  1608  0616  0843               	movf	___lwmod@divisor+1,w
  1609  0617  1C03               	skipc
  1610  0618  03C5               	decf	___lwmod@dividend+1,f
  1611  0619  02C5               	subwf	___lwmod@dividend+1,f
  1612  061A                     l1656:
  1613  061A  3001               	movlw	1
  1614  061B                     u1315:
  1615  061B  1003               	clrc
  1616  061C  0CC3               	rrf	___lwmod@divisor+1,f
  1617  061D  0CC2               	rrf	___lwmod@divisor,f
  1618  061E  3EFF               	addlw	-1
  1619  061F  1D03               	skipz
  1620  0620  2E1B               	goto	u1315
  1621  0621                     l1658:
  1622  0621  3001               	movlw	1
  1623  0622  02C7               	subwf	___lwmod@counter,f
  1624  0623  1D03               	btfss	3,2
  1625  0624  2E26               	goto	u1321
  1626  0625  2E27               	goto	u1320
  1627  0626                     u1321:
  1628  0626  2E0A               	goto	l1652
  1629  0627                     u1320:
  1630  0627                     l1660:
  1631  0627  0845               	movf	___lwmod@dividend+1,w
  1632  0628  00C3               	movwf	?___lwmod+1
  1633  0629  0844               	movf	___lwmod@dividend,w
  1634  062A  00C2               	movwf	?___lwmod
  1635  062B                     l825:
  1636  062B  0008               	return
  1637  062C                     __end_of___lwmod:
  1638                           
  1639                           	psect	text3
  1640  056C                     __ptext3:	
  1641 ;; *************** function ___lwdiv *****************
  1642 ;; Defined at:
  1643 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  divisor         2    3[COMMON] unsigned int 
  1646 ;;  dividend        2    5[COMMON] unsigned int 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  quotient        2    1[BANK0 ] unsigned int 
  1649 ;;  counter         1    0[BANK0 ] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  2    3[COMMON] unsigned int 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         4       0       0       0       0
  1660 ;;      Locals:         0       3       0       0       0
  1661 ;;      Temps:          1       0       0       0       0
  1662 ;;      Totals:         5       3       0       0       0
  1663 ;;Total ram usage:        8 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    2
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_sprintf
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           
  1674                           ;psect for function ___lwdiv
  1675  056C                     ___lwdiv:
  1676  056C                     l2078:	
  1677                           ;incstack = 0
  1678                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1679                           
  1680  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1681  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1682  056E  01C0               	clrf	___lwdiv@quotient
  1683  056F  01C1               	clrf	___lwdiv@quotient+1
  1684  0570                     l2080:
  1685  0570  0873               	movf	___lwdiv@divisor,w
  1686  0571  0474               	iorwf	___lwdiv@divisor+1,w
  1687  0572  1903               	btfsc	3,2
  1688  0573  2D75               	goto	u1841
  1689  0574  2D76               	goto	u1840
  1690  0575                     u1841:
  1691  0575  2DAD               	goto	l2100
  1692  0576                     u1840:
  1693  0576                     l2082:
  1694  0576  01BF               	clrf	___lwdiv@counter
  1695  0577  0ABF               	incf	___lwdiv@counter,f
  1696  0578  2D84               	goto	l2088
  1697  0579                     l2084:
  1698  0579  3001               	movlw	1
  1699  057A                     u1855:
  1700  057A  1003               	clrc
  1701  057B  0DF3               	rlf	___lwdiv@divisor,f
  1702  057C  0DF4               	rlf	___lwdiv@divisor+1,f
  1703  057D  3EFF               	addlw	-1
  1704  057E  1D03               	skipz
  1705  057F  2D7A               	goto	u1855
  1706  0580                     l2086:
  1707  0580  3001               	movlw	1
  1708  0581  00F7               	movwf	??___lwdiv
  1709  0582  0877               	movf	??___lwdiv,w
  1710  0583  07BF               	addwf	___lwdiv@counter,f
  1711  0584                     l2088:
  1712  0584  1FF4               	btfss	___lwdiv@divisor+1,7
  1713  0585  2D87               	goto	u1861
  1714  0586  2D88               	goto	u1860
  1715  0587                     u1861:
  1716  0587  2D79               	goto	l2084
  1717  0588                     u1860:
  1718  0588                     l2090:
  1719  0588  3001               	movlw	1
  1720  0589                     u1875:
  1721  0589  1003               	clrc
  1722  058A  0DC0               	rlf	___lwdiv@quotient,f
  1723  058B  0DC1               	rlf	___lwdiv@quotient+1,f
  1724  058C  3EFF               	addlw	-1
  1725  058D  1D03               	skipz
  1726  058E  2D89               	goto	u1875
  1727  058F  0874               	movf	___lwdiv@divisor+1,w
  1728  0590  0276               	subwf	___lwdiv@dividend+1,w
  1729  0591  1D03               	skipz
  1730  0592  2D95               	goto	u1885
  1731  0593  0873               	movf	___lwdiv@divisor,w
  1732  0594  0275               	subwf	___lwdiv@dividend,w
  1733  0595                     u1885:
  1734  0595  1C03               	skipc
  1735  0596  2D98               	goto	u1881
  1736  0597  2D99               	goto	u1880
  1737  0598                     u1881:
  1738  0598  2DA0               	goto	l2096
  1739  0599                     u1880:
  1740  0599                     l2092:
  1741  0599  0873               	movf	___lwdiv@divisor,w
  1742  059A  02F5               	subwf	___lwdiv@dividend,f
  1743  059B  0874               	movf	___lwdiv@divisor+1,w
  1744  059C  1C03               	skipc
  1745  059D  03F6               	decf	___lwdiv@dividend+1,f
  1746  059E  02F6               	subwf	___lwdiv@dividend+1,f
  1747  059F                     l2094:
  1748  059F  1440               	bsf	___lwdiv@quotient,0
  1749  05A0                     l2096:
  1750  05A0  3001               	movlw	1
  1751  05A1                     u1895:
  1752  05A1  1003               	clrc
  1753  05A2  0CF4               	rrf	___lwdiv@divisor+1,f
  1754  05A3  0CF3               	rrf	___lwdiv@divisor,f
  1755  05A4  3EFF               	addlw	-1
  1756  05A5  1D03               	skipz
  1757  05A6  2DA1               	goto	u1895
  1758  05A7                     l2098:
  1759  05A7  3001               	movlw	1
  1760  05A8  02BF               	subwf	___lwdiv@counter,f
  1761  05A9  1D03               	btfss	3,2
  1762  05AA  2DAC               	goto	u1901
  1763  05AB  2DAD               	goto	u1900
  1764  05AC                     u1901:
  1765  05AC  2D88               	goto	l2090
  1766  05AD                     u1900:
  1767  05AD                     l2100:
  1768  05AD  0841               	movf	___lwdiv@quotient+1,w
  1769  05AE  00F4               	movwf	?___lwdiv+1
  1770  05AF  0840               	movf	___lwdiv@quotient,w
  1771  05B0  00F3               	movwf	?___lwdiv
  1772  05B1                     l815:
  1773  05B1  0008               	return
  1774  05B2                     __end_of___lwdiv:
  1775                           
  1776                           	psect	text4
  1777  0704                     __ptext4:	
  1778 ;; *************** function _setup *****************
  1779 ;; Defined at:
  1780 ;;		line 178 in file "main.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1794 ;;      Params:         0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0
  1797 ;;      Totals:         0       0       0       0       0
  1798 ;;Total ram usage:        0 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    4
  1801 ;; This function calls:
  1802 ;;		_I2C_Master_Init
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _setup
  1810  0704                     _setup:
  1811  0704                     l2104:	
  1812                           ;incstack = 0
  1813                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1814                           
  1815  0704  1683               	bsf	3,5	;RP0=1, select bank3
  1816  0705  1703               	bsf	3,6	;RP1=1, select bank3
  1817  0706  0188               	clrf	8	;volatile
  1818  0707  0189               	clrf	9	;volatile
  1819  0708  1683               	bsf	3,5	;RP0=1, select bank1
  1820  0709  1303               	bcf	3,6	;RP1=0, select bank1
  1821  070A  0188               	clrf	8	;volatile
  1822  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1823  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1824  070D  0188               	clrf	8	;volatile
  1825  070E  1683               	bsf	3,5	;RP0=1, select bank1
  1826  070F  1303               	bcf	3,6	;RP1=0, select bank1
  1827  0710  0186               	clrf	6	;volatile
  1828  0711  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0712  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0713  0186               	clrf	6	;volatile
  1831  0714  1683               	bsf	3,5	;RP0=1, select bank1
  1832  0715  1303               	bcf	3,6	;RP1=0, select bank1
  1833  0716  0189               	clrf	9	;volatile
  1834  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1835  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1836  0719  0189               	clrf	9	;volatile
  1837  071A                     l2106:
  1838  071A  1683               	bsf	3,5	;RP0=1, select bank1
  1839  071B  1303               	bcf	3,6	;RP1=0, select bank1
  1840  071C  160F               	bsf	15,4	;volatile
  1841  071D                     l2108:
  1842  071D  168F               	bsf	15,5	;volatile
  1843  071E                     l2110:
  1844  071E  170F               	bsf	15,6	;volatile
  1845  071F                     l2112:
  1846  071F  170B               	bsf	11,6	;volatile
  1847  0720                     l2114:
  1848  0720  168C               	bsf	12,5	;volatile
  1849  0721                     l2116:
  1850  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0723  128C               	bcf	12,5	;volatile
  1853  0724                     l2118:
  1854  0724  178B               	bsf	11,7	;volatile
  1855  0725                     l2120:
  1856  0725  3000               	movlw	0
  1857  0726  00CF               	movwf	I2C_Master_Init@c+3
  1858  0727  3001               	movlw	1
  1859  0728  00CE               	movwf	I2C_Master_Init@c+2
  1860  0729  3086               	movlw	134
  1861  072A  00CD               	movwf	I2C_Master_Init@c+1
  1862  072B  30A0               	movlw	160
  1863  072C  00CC               	movwf	I2C_Master_Init@c
  1864  072D  120A  118A  2668  120A  118A  	fcall	_I2C_Master_Init
  1865  0732                     l132:
  1866  0732  0008               	return
  1867  0733                     __end_of_setup:
  1868                           
  1869                           	psect	text5
  1870  0668                     __ptext5:	
  1871 ;; *************** function _I2C_Master_Init *****************
  1872 ;; Defined at:
  1873 ;;		line 16 in file "I2C.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  c               4   13[BANK0 ] const unsigned long 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0, pclath, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1887 ;;      Params:         0       4       0       0       0
  1888 ;;      Locals:         0       0       0       0       0
  1889 ;;      Temps:          4       0       0       0       0
  1890 ;;      Totals:         4       4       0       0       0
  1891 ;;Total ram usage:        8 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    3
  1894 ;; This function calls:
  1895 ;;		___lldiv
  1896 ;; This function is called by:
  1897 ;;		_setup
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _I2C_Master_Init
  1903  0668                     _I2C_Master_Init:
  1904  0668                     l2066:	
  1905                           ;incstack = 0
  1906                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1907                           
  1908                           
  1909                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1910  0668  3028               	movlw	40
  1911  0669  1283               	bcf	3,5	;RP0=0, select bank0
  1912  066A  1303               	bcf	3,6	;RP1=0, select bank0
  1913  066B  0094               	movwf	20	;volatile
  1914  066C                     l2068:
  1915                           
  1916                           ;I2C.c: 19:     SSPCON2 = 0;
  1917  066C  1683               	bsf	3,5	;RP0=1, select bank1
  1918  066D  1303               	bcf	3,6	;RP1=0, select bank1
  1919  066E  0191               	clrf	17	;volatile
  1920  066F                     l2070:
  1921                           
  1922                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1923  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0671  084C               	movf	I2C_Master_Init@c,w
  1926  0672  00F4               	movwf	??_I2C_Master_Init
  1927  0673  084D               	movf	I2C_Master_Init@c+1,w
  1928  0674  00F5               	movwf	??_I2C_Master_Init+1
  1929  0675  084E               	movf	I2C_Master_Init@c+2,w
  1930  0676  00F6               	movwf	??_I2C_Master_Init+2
  1931  0677  084F               	movf	I2C_Master_Init@c+3,w
  1932  0678  00F7               	movwf	??_I2C_Master_Init+3
  1933  0679  3002               	movlw	2
  1934  067A                     u1835:
  1935  067A  1003               	clrc
  1936  067B  0DF4               	rlf	??_I2C_Master_Init,f
  1937  067C  0DF5               	rlf	??_I2C_Master_Init+1,f
  1938  067D  0DF6               	rlf	??_I2C_Master_Init+2,f
  1939  067E  0DF7               	rlf	??_I2C_Master_Init+3,f
  1940  067F                     u1830:
  1941  067F  3EFF               	addlw	-1
  1942  0680  1D03               	skipz
  1943  0681  2E7A               	goto	u1835
  1944  0682  0877               	movf	??_I2C_Master_Init+3,w
  1945  0683  00C2               	movwf	___lldiv@divisor+3
  1946  0684  0876               	movf	??_I2C_Master_Init+2,w
  1947  0685  00C1               	movwf	___lldiv@divisor+2
  1948  0686  0875               	movf	??_I2C_Master_Init+1,w
  1949  0687  00C0               	movwf	___lldiv@divisor+1
  1950  0688  0874               	movf	??_I2C_Master_Init,w
  1951  0689  00BF               	movwf	___lldiv@divisor
  1952  068A  3000               	movlw	0
  1953  068B  00C6               	movwf	___lldiv@dividend+3
  1954  068C  307A               	movlw	122
  1955  068D  00C5               	movwf	___lldiv@dividend+2
  1956  068E  3012               	movlw	18
  1957  068F  00C4               	movwf	___lldiv@dividend+1
  1958  0690  3000               	movlw	0
  1959  0691  00C3               	movwf	___lldiv@dividend
  1960  0692  120A  118A  2448  120A  118A  	fcall	___lldiv
  1961  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0699  083F               	movf	?___lldiv,w
  1964  069A  3EFF               	addlw	255
  1965  069B  1683               	bsf	3,5	;RP0=1, select bank1
  1966  069C  1303               	bcf	3,6	;RP1=0, select bank1
  1967  069D  0093               	movwf	19	;volatile
  1968  069E                     l2072:
  1969                           
  1970                           ;I2C.c: 21:     SSPSTAT = 0;
  1971  069E  0194               	clrf	20	;volatile
  1972  069F                     l2074:
  1973                           
  1974                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1975  069F  1587               	bsf	7,3	;volatile
  1976  06A0                     l2076:
  1977                           
  1978                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1979  06A0  1607               	bsf	7,4	;volatile
  1980  06A1                     l161:
  1981  06A1  0008               	return
  1982  06A2                     __end_of_I2C_Master_Init:
  1983                           
  1984                           	psect	text6
  1985  0448                     __ptext6:	
  1986 ;; *************** function ___lldiv *****************
  1987 ;; Defined at:
  1988 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  divisor         4    0[BANK0 ] unsigned long 
  1991 ;;  dividend        4    4[BANK0 ] unsigned long 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  quotient        4    8[BANK0 ] unsigned long 
  1994 ;;  counter         1   12[BANK0 ] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  4    0[BANK0 ] unsigned long 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         0       8       0       0       0
  2005 ;;      Locals:         0       5       0       0       0
  2006 ;;      Temps:          1       0       0       0       0
  2007 ;;      Totals:         1      13       0       0       0
  2008 ;;Total ram usage:       14 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    2
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_I2C_Master_Init
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function ___lldiv
  2020  0448                     ___lldiv:
  2021  0448                     l1904:	
  2022                           ;incstack = 0
  2023                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2024                           
  2025  0448  3000               	movlw	0
  2026  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2027  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2028  044B  00CA               	movwf	___lldiv@quotient+3
  2029  044C  3000               	movlw	0
  2030  044D  00C9               	movwf	___lldiv@quotient+2
  2031  044E  3000               	movlw	0
  2032  044F  00C8               	movwf	___lldiv@quotient+1
  2033  0450  3000               	movlw	0
  2034  0451  00C7               	movwf	___lldiv@quotient
  2035  0452  0842               	movf	___lldiv@divisor+3,w
  2036  0453  0441               	iorwf	___lldiv@divisor+2,w
  2037  0454  0440               	iorwf	___lldiv@divisor+1,w
  2038  0455  043F               	iorwf	___lldiv@divisor,w
  2039  0456  1903               	skipnz
  2040  0457  2C59               	goto	u1511
  2041  0458  2C5A               	goto	u1510
  2042  0459                     u1511:
  2043  0459  2CA7               	goto	l1924
  2044  045A                     u1510:
  2045  045A                     l1906:
  2046  045A  01CB               	clrf	___lldiv@counter
  2047  045B  0ACB               	incf	___lldiv@counter,f
  2048  045C  2C6A               	goto	l1910
  2049  045D                     l1908:
  2050  045D  3001               	movlw	1
  2051  045E  00F3               	movwf	??___lldiv
  2052  045F                     u1525:
  2053  045F  1003               	clrc
  2054  0460  0DBF               	rlf	___lldiv@divisor,f
  2055  0461  0DC0               	rlf	___lldiv@divisor+1,f
  2056  0462  0DC1               	rlf	___lldiv@divisor+2,f
  2057  0463  0DC2               	rlf	___lldiv@divisor+3,f
  2058  0464  0BF3               	decfsz	??___lldiv,f
  2059  0465  2C5F               	goto	u1525
  2060  0466  3001               	movlw	1
  2061  0467  00F3               	movwf	??___lldiv
  2062  0468  0873               	movf	??___lldiv,w
  2063  0469  07CB               	addwf	___lldiv@counter,f
  2064  046A                     l1910:
  2065  046A  1FC2               	btfss	___lldiv@divisor+3,7
  2066  046B  2C6D               	goto	u1531
  2067  046C  2C6E               	goto	u1530
  2068  046D                     u1531:
  2069  046D  2C5D               	goto	l1908
  2070  046E                     u1530:
  2071  046E                     l1912:
  2072  046E  3001               	movlw	1
  2073  046F  00F3               	movwf	??___lldiv
  2074  0470                     u1545:
  2075  0470  1003               	clrc
  2076  0471  0DC7               	rlf	___lldiv@quotient,f
  2077  0472  0DC8               	rlf	___lldiv@quotient+1,f
  2078  0473  0DC9               	rlf	___lldiv@quotient+2,f
  2079  0474  0DCA               	rlf	___lldiv@quotient+3,f
  2080  0475  0BF3               	decfsz	??___lldiv,f
  2081  0476  2C70               	goto	u1545
  2082  0477                     l1914:
  2083  0477  0842               	movf	___lldiv@divisor+3,w
  2084  0478  0246               	subwf	___lldiv@dividend+3,w
  2085  0479  1D03               	skipz
  2086  047A  2C85               	goto	u1555
  2087  047B  0841               	movf	___lldiv@divisor+2,w
  2088  047C  0245               	subwf	___lldiv@dividend+2,w
  2089  047D  1D03               	skipz
  2090  047E  2C85               	goto	u1555
  2091  047F  0840               	movf	___lldiv@divisor+1,w
  2092  0480  0244               	subwf	___lldiv@dividend+1,w
  2093  0481  1D03               	skipz
  2094  0482  2C85               	goto	u1555
  2095  0483  083F               	movf	___lldiv@divisor,w
  2096  0484  0243               	subwf	___lldiv@dividend,w
  2097  0485                     u1555:
  2098  0485  1C03               	skipc
  2099  0486  2C88               	goto	u1551
  2100  0487  2C89               	goto	u1550
  2101  0488                     u1551:
  2102  0488  2C98               	goto	l1920
  2103  0489                     u1550:
  2104  0489                     l1916:
  2105  0489  083F               	movf	___lldiv@divisor,w
  2106  048A  02C3               	subwf	___lldiv@dividend,f
  2107  048B  0840               	movf	___lldiv@divisor+1,w
  2108  048C  1C03               	skipc
  2109  048D  0F40               	incfsz	___lldiv@divisor+1,w
  2110  048E  02C4               	subwf	___lldiv@dividend+1,f
  2111  048F  0841               	movf	___lldiv@divisor+2,w
  2112  0490  1C03               	skipc
  2113  0491  0F41               	incfsz	___lldiv@divisor+2,w
  2114  0492  02C5               	subwf	___lldiv@dividend+2,f
  2115  0493  0842               	movf	___lldiv@divisor+3,w
  2116  0494  1C03               	skipc
  2117  0495  0F42               	incfsz	___lldiv@divisor+3,w
  2118  0496  02C6               	subwf	___lldiv@dividend+3,f
  2119  0497                     l1918:
  2120  0497  1447               	bsf	___lldiv@quotient,0
  2121  0498                     l1920:
  2122  0498  3001               	movlw	1
  2123  0499                     u1565:
  2124  0499  1003               	clrc
  2125  049A  0CC2               	rrf	___lldiv@divisor+3,f
  2126  049B  0CC1               	rrf	___lldiv@divisor+2,f
  2127  049C  0CC0               	rrf	___lldiv@divisor+1,f
  2128  049D  0CBF               	rrf	___lldiv@divisor,f
  2129  049E  3EFF               	addlw	-1
  2130  049F  1D03               	skipz
  2131  04A0  2C99               	goto	u1565
  2132  04A1                     l1922:
  2133  04A1  3001               	movlw	1
  2134  04A2  02CB               	subwf	___lldiv@counter,f
  2135  04A3  1D03               	btfss	3,2
  2136  04A4  2CA6               	goto	u1571
  2137  04A5  2CA7               	goto	u1570
  2138  04A6                     u1571:
  2139  04A6  2C6E               	goto	l1912
  2140  04A7                     u1570:
  2141  04A7                     l1924:
  2142  04A7  084A               	movf	___lldiv@quotient+3,w
  2143  04A8  00C2               	movwf	?___lldiv+3
  2144  04A9  0849               	movf	___lldiv@quotient+2,w
  2145  04AA  00C1               	movwf	?___lldiv+2
  2146  04AB  0848               	movf	___lldiv@quotient+1,w
  2147  04AC  00C0               	movwf	?___lldiv+1
  2148  04AD  0847               	movf	___lldiv@quotient,w
  2149  04AE  00BF               	movwf	?___lldiv
  2150  04AF                     l443:
  2151  04AF  0008               	return
  2152  04B0                     __end_of___lldiv:
  2153                           
  2154                           	psect	text7
  2155  02C3                     __ptext7:	
  2156 ;; *************** function _set_tiempo *****************
  2157 ;; Defined at:
  2158 ;;		line 115 in file "main.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0
  2174 ;;      Temps:          0       2       0       0       0
  2175 ;;      Totals:         0       2       0       0       0
  2176 ;;Total ram usage:        2 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    4
  2179 ;; This function calls:
  2180 ;;		_I2C_Master_Start
  2181 ;;		_I2C_Master_Stop
  2182 ;;		_I2C_Master_Write
  2183 ;;		_dec_a_bcd
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           
  2190                           ;psect for function _set_tiempo
  2191  02C3                     _set_tiempo:
  2192  02C3                     l2148:	
  2193                           ;incstack = 0
  2194                           ; Regs used in _set_tiempo: [wreg+status,2+status,0+pclath+cstack]
  2195                           
  2196                           
  2197                           ;main.c: 116:       _delay((unsigned long)((200)*(8000000/4000.0)));
  2198  02C3  120A  158A  279F  120A  118A  	fcall	_I2C_Master_Start
  2199                           
  2200                           ;main.c: 117: 
  2201  02C8  30D0               	movlw	208
  2202  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2203  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2204  02CB  00C9               	movwf	I2C_Master_Write@d
  2205  02CC  3000               	movlw	0
  2206  02CD  00CA               	movwf	I2C_Master_Write@d+1
  2207  02CE  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  2208                           
  2209                           ;main.c: 118: }
  2210  02D3  3000               	movlw	0
  2211  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2212  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2213  02D6  00C9               	movwf	I2C_Master_Write@d
  2214  02D7  00CA               	movwf	I2C_Master_Write@d+1
  2215  02D8  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  2216                           
  2217                           ;main.c: 119: 
  2218  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2219  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2220  02DF  0828               	movf	_seg,w
  2221  02E0  120A  118A  26A2  120A  118A  	fcall	_dec_a_bcd
  2222  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2223  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2224  02E7  00CB               	movwf	??_set_tiempo
  2225  02E8  01CC               	clrf	??_set_tiempo+1
  2226  02E9  084B               	movf	??_set_tiempo,w
  2227  02EA  00C9               	movwf	I2C_Master_Write@d
  2228  02EB  084C               	movf	??_set_tiempo+1,w
  2229  02EC  00CA               	movwf	I2C_Master_Write@d+1
  2230  02ED  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  2231                           
  2232                           ;main.c: 120: void sep_char_LCD (void){
  2233  02F2  0878               	movf	_min,w
  2234  02F3  120A  118A  26A2  120A  118A  	fcall	_dec_a_bcd
  2235  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2236  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2237  02FA  00CB               	movwf	??_set_tiempo
  2238  02FB  01CC               	clrf	??_set_tiempo+1
  2239  02FC  084B               	movf	??_set_tiempo,w
  2240  02FD  00C9               	movwf	I2C_Master_Write@d
  2241  02FE  084C               	movf	??_set_tiempo+1,w
  2242  02FF  00CA               	movwf	I2C_Master_Write@d+1
  2243  0300  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  2244                           
  2245                           ;main.c: 121:     char seg_0 = seg%10;
  2246  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0307  0826               	movf	_hora,w
  2249  0308  120A  118A  26A2  120A  118A  	fcall	_dec_a_bcd
  2250  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2251  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2252  030F  00CB               	movwf	??_set_tiempo
  2253  0310  01CC               	clrf	??_set_tiempo+1
  2254  0311  084B               	movf	??_set_tiempo,w
  2255  0312  00C9               	movwf	I2C_Master_Write@d
  2256  0313  084C               	movf	??_set_tiempo+1,w
  2257  0314  00CA               	movwf	I2C_Master_Write@d+1
  2258  0315  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  2259                           
  2260                           ;main.c: 122:     char seg_1 = (seg/10);
  2261  031A  3001               	movlw	1
  2262  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2263  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2264  031D  00C9               	movwf	I2C_Master_Write@d
  2265  031E  3000               	movlw	0
  2266  031F  00CA               	movwf	I2C_Master_Write@d+1
  2267  0320  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  2268                           
  2269                           ;main.c: 123:     char min_0 = min%10;
  2270  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0327  0824               	movf	_dia,w
  2273  0328  120A  118A  26A2  120A  118A  	fcall	_dec_a_bcd
  2274  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2275  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2276  032F  00CB               	movwf	??_set_tiempo
  2277  0330  01CC               	clrf	??_set_tiempo+1
  2278  0331  084B               	movf	??_set_tiempo,w
  2279  0332  00C9               	movwf	I2C_Master_Write@d
  2280  0333  084C               	movf	??_set_tiempo+1,w
  2281  0334  00CA               	movwf	I2C_Master_Write@d+1
  2282  0335  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  2283                           
  2284                           ;main.c: 124:     char min_1 = (min/10);
  2285  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2286  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2287  033C  0822               	movf	_mes,w
  2288  033D  120A  118A  26A2  120A  118A  	fcall	_dec_a_bcd
  2289  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0344  00CB               	movwf	??_set_tiempo
  2292  0345  01CC               	clrf	??_set_tiempo+1
  2293  0346  084B               	movf	??_set_tiempo,w
  2294  0347  00C9               	movwf	I2C_Master_Write@d
  2295  0348  084C               	movf	??_set_tiempo+1,w
  2296  0349  00CA               	movwf	I2C_Master_Write@d+1
  2297  034A  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  2298                           
  2299                           ;main.c: 125:     char hora_0 = hora%10;
  2300  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0351  0820               	movf	_year,w
  2303  0352  120A  118A  26A2  120A  118A  	fcall	_dec_a_bcd
  2304  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0359  00CB               	movwf	??_set_tiempo
  2307  035A  01CC               	clrf	??_set_tiempo+1
  2308  035B  084B               	movf	??_set_tiempo,w
  2309  035C  00C9               	movwf	I2C_Master_Write@d
  2310  035D  084C               	movf	??_set_tiempo+1,w
  2311  035E  00CA               	movwf	I2C_Master_Write@d+1
  2312  035F  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  2313                           
  2314                           ;main.c: 126:     char hora_1 = (hora/10);
  2315  0364  120A  158A  27A8  120A  118A  	fcall	_I2C_Master_Stop
  2316  0369                     l123:
  2317  0369  0008               	return
  2318  036A                     __end_of_set_tiempo:
  2319                           
  2320                           	psect	text8
  2321  06A2                     __ptext8:	
  2322 ;; *************** function _dec_a_bcd *****************
  2323 ;; Defined at:
  2324 ;;		line 111 in file "main.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  valor           1    wreg     unsigned char 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  valor           1    9[BANK0 ] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      unsigned char 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0, pclath, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         0       0       0       0       0
  2339 ;;      Locals:         0       1       0       0       0
  2340 ;;      Temps:          0       5       0       0       0
  2341 ;;      Totals:         0       6       0       0       0
  2342 ;;Total ram usage:        6 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    3
  2345 ;; This function calls:
  2346 ;;		___awdiv
  2347 ;;		___awmod
  2348 ;; This function is called by:
  2349 ;;		_set_tiempo
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           
  2354                           ;psect for function _dec_a_bcd
  2355  06A2                     _dec_a_bcd:
  2356                           
  2357                           ;incstack = 0
  2358                           ; Regs used in _dec_a_bcd: [wreg+status,2+status,0+pclath+cstack]
  2359                           ;dec_a_bcd@valor stored from wreg
  2360  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2361  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2362  06A4  00C8               	movwf	dec_a_bcd@valor
  2363  06A5                     l2014:
  2364                           
  2365                           ;main.c: 112:       I2C_Master_Start();
  2366  06A5  300A               	movlw	10
  2367  06A6  00F3               	movwf	___awdiv@divisor
  2368  06A7  3000               	movlw	0
  2369  06A8  00F4               	movwf	___awdiv@divisor+1
  2370  06A9  0848               	movf	dec_a_bcd@valor,w
  2371  06AA  00C3               	movwf	??_dec_a_bcd
  2372  06AB  01C4               	clrf	??_dec_a_bcd+1
  2373  06AC  0843               	movf	??_dec_a_bcd,w
  2374  06AD  00F5               	movwf	___awdiv@dividend
  2375  06AE  0844               	movf	??_dec_a_bcd+1,w
  2376  06AF  00F6               	movwf	___awdiv@dividend+1
  2377  06B0  120A  118A  23DF  120A  118A  	fcall	___awdiv
  2378  06B5  0873               	movf	?___awdiv,w
  2379  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2380  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2381  06B8  00C5               	movwf	??_dec_a_bcd+2
  2382  06B9  3004               	movlw	4
  2383  06BA                     u1785:
  2384  06BA  1003               	clrc
  2385  06BB  0DC5               	rlf	??_dec_a_bcd+2,f
  2386  06BC  3EFF               	addlw	-1
  2387  06BD  1D03               	skipz
  2388  06BE  2EBA               	goto	u1785
  2389  06BF  300A               	movlw	10
  2390  06C0  00F3               	movwf	___awmod@divisor
  2391  06C1  3000               	movlw	0
  2392  06C2  00F4               	movwf	___awmod@divisor+1
  2393  06C3  0848               	movf	dec_a_bcd@valor,w
  2394  06C4  00C6               	movwf	??_dec_a_bcd+3
  2395  06C5  01C7               	clrf	??_dec_a_bcd+4
  2396  06C6  0846               	movf	??_dec_a_bcd+3,w
  2397  06C7  00F5               	movwf	___awmod@dividend
  2398  06C8  0847               	movf	??_dec_a_bcd+4,w
  2399  06C9  00F6               	movwf	___awmod@dividend+1
  2400  06CA  120A  118A  2511  120A  118A  	fcall	___awmod
  2401  06CF  0873               	movf	?___awmod,w
  2402  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  2403  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  2404  06D2  0745               	addwf	??_dec_a_bcd+2,w
  2405  06D3                     l120:
  2406  06D3  0008               	return
  2407  06D4                     __end_of_dec_a_bcd:
  2408                           
  2409                           	psect	text9
  2410  01FE                     __ptext9:	
  2411 ;; *************** function _sep_char_LCD *****************
  2412 ;; Defined at:
  2413 ;;		line 155 in file "main.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;		None
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  hora_1          1   10[BANK0 ] unsigned char 
  2418 ;;  hora_0          1    9[BANK0 ] unsigned char 
  2419 ;;  min_1           1    8[BANK0 ] unsigned char 
  2420 ;;  min_0           1    7[BANK0 ] unsigned char 
  2421 ;;  seg_1           1    6[BANK0 ] unsigned char 
  2422 ;;  seg_0           1    5[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         0       6       0       0       0
  2434 ;;      Temps:          0       1       0       0       0
  2435 ;;      Totals:         0       7       0       0       0
  2436 ;;Total ram usage:        7 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    5
  2439 ;; This function calls:
  2440 ;;		___awdiv
  2441 ;;		___awmod
  2442 ;;		_set_cursor
  2443 ;;		_write_char
  2444 ;;		_write_string
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _sep_char_LCD
  2452  01FE                     _sep_char_LCD:
  2453  01FE                     l2154:	
  2454                           ;incstack = 0
  2455                           ; Regs used in _sep_char_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2456                           
  2457                           
  2458                           ;main.c: 156:     INTCONbits.PEIE = 1;
  2459  01FE  300A               	movlw	10
  2460  01FF  00F3               	movwf	___awmod@divisor
  2461  0200  3000               	movlw	0
  2462  0201  00F4               	movwf	___awmod@divisor+1
  2463  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0204  0829               	movf	_seg+1,w
  2466  0205  00F6               	movwf	___awmod@dividend+1
  2467  0206  0828               	movf	_seg,w
  2468  0207  00F5               	movwf	___awmod@dividend
  2469  0208  120A  118A  2511  120A  118A  	fcall	___awmod
  2470  020D  0873               	movf	?___awmod,w
  2471  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2472  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0210  00C3               	movwf	??_sep_char_LCD
  2474  0211  0843               	movf	??_sep_char_LCD,w
  2475  0212  00C4               	movwf	sep_char_LCD@seg_0
  2476                           
  2477                           ;main.c: 157:     PIE1bits.RCIE = 1;
  2478  0213  300A               	movlw	10
  2479  0214  00F3               	movwf	___awdiv@divisor
  2480  0215  3000               	movlw	0
  2481  0216  00F4               	movwf	___awdiv@divisor+1
  2482  0217  0829               	movf	_seg+1,w
  2483  0218  00F6               	movwf	___awdiv@dividend+1
  2484  0219  0828               	movf	_seg,w
  2485  021A  00F5               	movwf	___awdiv@dividend
  2486  021B  120A  118A  23DF  120A  118A  	fcall	___awdiv
  2487  0220  0873               	movf	?___awdiv,w
  2488  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0223  00C3               	movwf	??_sep_char_LCD
  2491  0224  0843               	movf	??_sep_char_LCD,w
  2492  0225  00C5               	movwf	sep_char_LCD@seg_1
  2493                           
  2494                           ;main.c: 158:     PIR1bits.RCIF = 0;
  2495  0226  300A               	movlw	10
  2496  0227  00F3               	movwf	___awmod@divisor
  2497  0228  3000               	movlw	0
  2498  0229  00F4               	movwf	___awmod@divisor+1
  2499  022A  0879               	movf	_min+1,w
  2500  022B  00F6               	movwf	___awmod@dividend+1
  2501  022C  0878               	movf	_min,w
  2502  022D  00F5               	movwf	___awmod@dividend
  2503  022E  120A  118A  2511  120A  118A  	fcall	___awmod
  2504  0233  0873               	movf	?___awmod,w
  2505  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0236  00C3               	movwf	??_sep_char_LCD
  2508  0237  0843               	movf	??_sep_char_LCD,w
  2509  0238  00C6               	movwf	sep_char_LCD@min_0
  2510                           
  2511                           ;main.c: 159:     INTCONbits.GIE = 1;
  2512  0239  300A               	movlw	10
  2513  023A  00F3               	movwf	___awdiv@divisor
  2514  023B  3000               	movlw	0
  2515  023C  00F4               	movwf	___awdiv@divisor+1
  2516  023D  0879               	movf	_min+1,w
  2517  023E  00F6               	movwf	___awdiv@dividend+1
  2518  023F  0878               	movf	_min,w
  2519  0240  00F5               	movwf	___awdiv@dividend
  2520  0241  120A  118A  23DF  120A  118A  	fcall	___awdiv
  2521  0246  0873               	movf	?___awdiv,w
  2522  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0249  00C3               	movwf	??_sep_char_LCD
  2525  024A  0843               	movf	??_sep_char_LCD,w
  2526  024B  00C7               	movwf	sep_char_LCD@min_1
  2527                           
  2528                           ;main.c: 160: 
  2529  024C  300A               	movlw	10
  2530  024D  00F3               	movwf	___awmod@divisor
  2531  024E  3000               	movlw	0
  2532  024F  00F4               	movwf	___awmod@divisor+1
  2533  0250  0827               	movf	_hora+1,w
  2534  0251  00F6               	movwf	___awmod@dividend+1
  2535  0252  0826               	movf	_hora,w
  2536  0253  00F5               	movwf	___awmod@dividend
  2537  0254  120A  118A  2511  120A  118A  	fcall	___awmod
  2538  0259  0873               	movf	?___awmod,w
  2539  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2540  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2541  025C  00C3               	movwf	??_sep_char_LCD
  2542  025D  0843               	movf	??_sep_char_LCD,w
  2543  025E  00C8               	movwf	sep_char_LCD@hora_0
  2544                           
  2545                           ;main.c: 161:     I2C_Master_Init(100000);
  2546  025F  300A               	movlw	10
  2547  0260  00F3               	movwf	___awdiv@divisor
  2548  0261  3000               	movlw	0
  2549  0262  00F4               	movwf	___awdiv@divisor+1
  2550  0263  0827               	movf	_hora+1,w
  2551  0264  00F6               	movwf	___awdiv@dividend+1
  2552  0265  0826               	movf	_hora,w
  2553  0266  00F5               	movwf	___awdiv@dividend
  2554  0267  120A  118A  23DF  120A  118A  	fcall	___awdiv
  2555  026C  0873               	movf	?___awdiv,w
  2556  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2557  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2558  026F  00C3               	movwf	??_sep_char_LCD
  2559  0270  0843               	movf	??_sep_char_LCD,w
  2560  0271  00C9               	movwf	sep_char_LCD@hora_1
  2561  0272  01F7               	clrf	set_cursor@b
  2562  0273  0AF7               	incf	set_cursor@b,f
  2563  0274  3001               	movlw	1
  2564  0275  120A  118A  275C  120A  118A  	fcall	_set_cursor
  2565  027A                     l2156:
  2566  027A  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2567  027B  120A  118A  2733  120A  118A  	fcall	_write_string
  2568  0280                     l2158:
  2569  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0282  0849               	movf	sep_char_LCD@hora_1,w
  2572  0283  3E30               	addlw	48
  2573  0284  120A  118A  27C2  120A  118A  	fcall	_write_char
  2574  0289                     l2160:
  2575  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2576  028A  1303               	bcf	3,6	;RP1=0, select bank0
  2577  028B  0848               	movf	sep_char_LCD@hora_0,w
  2578  028C  3E30               	addlw	48
  2579  028D  120A  118A  27C2  120A  118A  	fcall	_write_char
  2580  0292                     l2162:
  2581  0292  303A               	movlw	58
  2582  0293  120A  118A  27C2  120A  118A  	fcall	_write_char
  2583  0298                     l2164:
  2584  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2586  029A  0847               	movf	sep_char_LCD@min_1,w
  2587  029B  3E30               	addlw	48
  2588  029C  120A  118A  27C2  120A  118A  	fcall	_write_char
  2589  02A1                     l2166:
  2590  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2591  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2592  02A3  0846               	movf	sep_char_LCD@min_0,w
  2593  02A4  3E30               	addlw	48
  2594  02A5  120A  118A  27C2  120A  118A  	fcall	_write_char
  2595  02AA                     l2168:
  2596  02AA  303A               	movlw	58
  2597  02AB  120A  118A  27C2  120A  118A  	fcall	_write_char
  2598  02B0                     l2170:
  2599  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2600  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2601  02B2  0845               	movf	sep_char_LCD@seg_1,w
  2602  02B3  3E30               	addlw	48
  2603  02B4  120A  118A  27C2  120A  118A  	fcall	_write_char
  2604  02B9                     l2172:
  2605  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2606  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2607  02BB  0844               	movf	sep_char_LCD@seg_0,w
  2608  02BC  3E30               	addlw	48
  2609  02BD  120A  118A  27C2  120A  118A  	fcall	_write_char
  2610  02C2                     l129:
  2611  02C2  0008               	return
  2612  02C3                     __end_of_sep_char_LCD:
  2613                           
  2614                           	psect	text10
  2615  0733                     __ptext10:	
  2616 ;; *************** function _write_string *****************
  2617 ;; Defined at:
  2618 ;;		line 99 in file "LCD.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  a               1    wreg     PTR unsigned char 
  2621 ;;		 -> STR_2(8), 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  a               1    0[BANK0 ] PTR unsigned char 
  2624 ;;		 -> STR_2(8), 
  2625 ;;  i               2    1[BANK0 ] int 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         0       0       0       0       0
  2636 ;;      Locals:         0       3       0       0       0
  2637 ;;      Temps:          0       0       0       0       0
  2638 ;;      Totals:         0       3       0       0       0
  2639 ;;Total ram usage:        3 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    4
  2642 ;; This function calls:
  2643 ;;		_write_char
  2644 ;; This function is called by:
  2645 ;;		_sep_char_LCD
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _write_string
  2651  0733                     _write_string:
  2652                           
  2653                           ;incstack = 0
  2654                           ; Regs used in _write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2655                           ;write_string@a stored from wreg
  2656  0733  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0734  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0735  00BF               	movwf	write_string@a
  2659  0736                     l2058:
  2660                           
  2661                           ;LCD.c: 100:     int i;;LCD.c: 101:  for(i=0;a[i]!='\0';i++)
  2662  0736  01C0               	clrf	write_string@i
  2663  0737  01C1               	clrf	write_string@i+1
  2664  0738  2F4E               	goto	l2064
  2665  0739                     l2060:
  2666                           
  2667                           ;LCD.c: 102:  write_char(a[i]);
  2668  0739  0840               	movf	write_string@i,w
  2669  073A  073F               	addwf	write_string@a,w
  2670  073B  0084               	movwf	4
  2671  073C  120A  158A  2000  120A  118A  	fcall	stringdir
  2672  0741  120A  118A  27C2  120A  118A  	fcall	_write_char
  2673  0746                     l2062:
  2674  0746  3001               	movlw	1
  2675  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0748  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0749  07C0               	addwf	write_string@i,f
  2678  074A  1803               	skipnc
  2679  074B  0AC1               	incf	write_string@i+1,f
  2680  074C  3000               	movlw	0
  2681  074D  07C1               	addwf	write_string@i+1,f
  2682  074E                     l2064:
  2683  074E  0840               	movf	write_string@i,w
  2684  074F  073F               	addwf	write_string@a,w
  2685  0750  0084               	movwf	4
  2686  0751  120A  158A  2000  120A  118A  	fcall	stringdir
  2687  0756  3A00               	xorlw	0
  2688  0757  1D03               	skipz
  2689  0758  2F5A               	goto	u1821
  2690  0759  2F5B               	goto	u1820
  2691  075A                     u1821:
  2692  075A  2F39               	goto	l2060
  2693  075B                     u1820:
  2694  075B                     l293:
  2695  075B  0008               	return
  2696  075C                     __end_of_write_string:
  2697                           
  2698                           	psect	text11
  2699  07C2                     __ptext11:	
  2700 ;; *************** function _write_char *****************
  2701 ;; Defined at:
  2702 ;;		line 89 in file "LCD.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  a               1    wreg     unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  a               1    5[COMMON] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0, pclath, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2716 ;;      Params:         0       0       0       0       0
  2717 ;;      Locals:         1       0       0       0       0
  2718 ;;      Temps:          1       0       0       0       0
  2719 ;;      Totals:         2       0       0       0       0
  2720 ;;Total ram usage:        2 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    3
  2723 ;; This function calls:
  2724 ;;		_port
  2725 ;; This function is called by:
  2726 ;;		_sep_char_LCD
  2727 ;;		_write_string
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           
  2732                           ;psect for function _write_char
  2733  07C2                     _write_char:
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  2737                           ;write_char@a stored from wreg
  2738  07C2  00F5               	movwf	write_char@a
  2739  07C3                     l1872:
  2740                           
  2741                           ;LCD.c: 90:     RE0 = 1;
  2742  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  2743  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  2744  07C5  1409               	bsf	9,0	;volatile
  2745  07C6                     l1874:
  2746                           
  2747                           ;LCD.c: 91:     port(a);
  2748  07C6  0875               	movf	write_char@a,w
  2749  07C7  120A  118A  25B2  120A  118A  	fcall	_port
  2750  07CC                     l1876:
  2751                           
  2752                           ;LCD.c: 92:     RE1 = 1;
  2753  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  2754  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  2755  07CE  1489               	bsf	9,1	;volatile
  2756  07CF                     l1878:
  2757                           
  2758                           ;LCD.c: 93:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  2759  07CF  3003               	movlw	3
  2760  07D0  00F4               	movwf	??_write_char
  2761  07D1                     u1997:
  2762  07D1  0BF4               	decfsz	??_write_char,f
  2763  07D2  2FD1               	goto	u1997
  2764  07D3                     l1880:
  2765                           
  2766                           ;LCD.c: 94:     RE1 = 0;
  2767  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  2768  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  2769  07D5  1089               	bcf	9,1	;volatile
  2770  07D6                     l1882:
  2771                           
  2772                           ;LCD.c: 95:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  2773  07D6  3003               	movlw	3
  2774  07D7  00F4               	movwf	??_write_char
  2775  07D8                     u2007:
  2776  07D8  0BF4               	decfsz	??_write_char,f
  2777  07D9  2FD8               	goto	u2007
  2778  07DA                     l1884:
  2779                           
  2780                           ;LCD.c: 96:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2781  07DA  3021               	movlw	33
  2782  07DB  00F4               	movwf	??_write_char
  2783  07DC                     u2017:
  2784  07DC  0BF4               	decfsz	??_write_char,f
  2785  07DD  2FDC               	goto	u2017
  2786  07DE                     l287:
  2787  07DE  0008               	return
  2788  07DF                     __end_of_write_char:
  2789                           
  2790                           	psect	text12
  2791  075C                     __ptext12:	
  2792 ;; *************** function _set_cursor *****************
  2793 ;; Defined at:
  2794 ;;		line 57 in file "LCD.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  a               1    wreg     unsigned char 
  2797 ;;  b               1    7[COMMON] unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  a               1    1[BANK0 ] unsigned char 
  2800 ;;  x               1    2[BANK0 ] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         1       0       0       0       0
  2811 ;;      Locals:         0       2       0       0       0
  2812 ;;      Temps:          0       1       0       0       0
  2813 ;;      Totals:         1       3       0       0       0
  2814 ;;Total ram usage:        4 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    4
  2817 ;; This function calls:
  2818 ;;		_CMDs
  2819 ;; This function is called by:
  2820 ;;		_sep_char_LCD
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _set_cursor
  2826  075C                     _set_cursor:
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  2830                           ;set_cursor@a stored from wreg
  2831  075C  1283               	bcf	3,5	;RP0=0, select bank0
  2832  075D  1303               	bcf	3,6	;RP1=0, select bank0
  2833  075E  00C0               	movwf	set_cursor@a
  2834  075F                     l2046:
  2835                           
  2836                           ;LCD.c: 58:     uint8_t x;;LCD.c: 59:     if (a == 1){
  2837  075F  0340               	decf	set_cursor@a,w
  2838  0760  1D03               	btfss	3,2
  2839  0761  2F63               	goto	u1801
  2840  0762  2F64               	goto	u1800
  2841  0763                     u1801:
  2842  0763  2F70               	goto	l2052
  2843  0764                     u1800:
  2844  0764                     l2048:
  2845                           
  2846                           ;LCD.c: 60:        x = 0x80 + b;
  2847  0764  0877               	movf	set_cursor@b,w
  2848  0765  3E80               	addlw	128
  2849  0766  00BF               	movwf	??_set_cursor
  2850  0767  083F               	movf	??_set_cursor,w
  2851  0768  00C1               	movwf	set_cursor@x
  2852  0769                     l2050:
  2853                           
  2854                           ;LCD.c: 61:        CMDs(x);
  2855  0769  0841               	movf	set_cursor@x,w
  2856  076A  120A  118A  2782  120A  118A  	fcall	_CMDs
  2857                           
  2858                           ;LCD.c: 62:     }
  2859  076F  2F81               	goto	l281
  2860  0770                     l2052:
  2861  0770  3002               	movlw	2
  2862  0771  0640               	xorwf	set_cursor@a,w
  2863  0772  1D03               	btfss	3,2
  2864  0773  2F75               	goto	u1811
  2865  0774  2F76               	goto	u1810
  2866  0775                     u1811:
  2867  0775  2F81               	goto	l281
  2868  0776                     u1810:
  2869  0776                     l2054:
  2870                           
  2871                           ;LCD.c: 64:         x = 0xC0 + b;
  2872  0776  0877               	movf	set_cursor@b,w
  2873  0777  3EC0               	addlw	192
  2874  0778  00BF               	movwf	??_set_cursor
  2875  0779  083F               	movf	??_set_cursor,w
  2876  077A  00C1               	movwf	set_cursor@x
  2877  077B                     l2056:
  2878                           
  2879                           ;LCD.c: 65:         CMDs(x);
  2880  077B  0841               	movf	set_cursor@x,w
  2881  077C  120A  118A  2782  120A  118A  	fcall	_CMDs
  2882  0781                     l281:
  2883  0781  0008               	return
  2884  0782                     __end_of_set_cursor:
  2885                           
  2886                           	psect	text13
  2887  0511                     __ptext13:	
  2888 ;; *************** function ___awmod *****************
  2889 ;; Defined at:
  2890 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  divisor         2    3[COMMON] int 
  2893 ;;  dividend        2    5[COMMON] int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  sign            1    1[BANK0 ] unsigned char 
  2896 ;;  counter         1    0[BANK0 ] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  2    3[COMMON] int 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         4       0       0       0       0
  2907 ;;      Locals:         0       2       0       0       0
  2908 ;;      Temps:          1       0       0       0       0
  2909 ;;      Totals:         5       2       0       0       0
  2910 ;;Total ram usage:        7 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    2
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_dec_a_bcd
  2917 ;;		_sep_char_LCD
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           
  2922                           ;psect for function ___awmod
  2923  0511                     ___awmod:
  2924  0511                     l1972:	
  2925                           ;incstack = 0
  2926                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2927                           
  2928  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0512  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0513  01C0               	clrf	___awmod@sign
  2931  0514                     l1974:
  2932  0514  1FF6               	btfss	___awmod@dividend+1,7
  2933  0515  2D17               	goto	u1681
  2934  0516  2D18               	goto	u1680
  2935  0517                     u1681:
  2936  0517  2D1F               	goto	l1980
  2937  0518                     u1680:
  2938  0518                     l1976:
  2939  0518  09F5               	comf	___awmod@dividend,f
  2940  0519  09F6               	comf	___awmod@dividend+1,f
  2941  051A  0AF5               	incf	___awmod@dividend,f
  2942  051B  1903               	skipnz
  2943  051C  0AF6               	incf	___awmod@dividend+1,f
  2944  051D                     l1978:
  2945  051D  01C0               	clrf	___awmod@sign
  2946  051E  0AC0               	incf	___awmod@sign,f
  2947  051F                     l1980:
  2948  051F  1FF4               	btfss	___awmod@divisor+1,7
  2949  0520  2D22               	goto	u1691
  2950  0521  2D23               	goto	u1690
  2951  0522                     u1691:
  2952  0522  2D28               	goto	l1984
  2953  0523                     u1690:
  2954  0523                     l1982:
  2955  0523  09F3               	comf	___awmod@divisor,f
  2956  0524  09F4               	comf	___awmod@divisor+1,f
  2957  0525  0AF3               	incf	___awmod@divisor,f
  2958  0526  1903               	skipnz
  2959  0527  0AF4               	incf	___awmod@divisor+1,f
  2960  0528                     l1984:
  2961  0528  0873               	movf	___awmod@divisor,w
  2962  0529  0474               	iorwf	___awmod@divisor+1,w
  2963  052A  1903               	btfsc	3,2
  2964  052B  2D2D               	goto	u1701
  2965  052C  2D2E               	goto	u1700
  2966  052D                     u1701:
  2967  052D  2D5D               	goto	l2002
  2968  052E                     u1700:
  2969  052E                     l1986:
  2970  052E  01BF               	clrf	___awmod@counter
  2971  052F  0ABF               	incf	___awmod@counter,f
  2972  0530  2D3C               	goto	l1992
  2973  0531                     l1988:
  2974  0531  3001               	movlw	1
  2975  0532                     u1715:
  2976  0532  1003               	clrc
  2977  0533  0DF3               	rlf	___awmod@divisor,f
  2978  0534  0DF4               	rlf	___awmod@divisor+1,f
  2979  0535  3EFF               	addlw	-1
  2980  0536  1D03               	skipz
  2981  0537  2D32               	goto	u1715
  2982  0538                     l1990:
  2983  0538  3001               	movlw	1
  2984  0539  00F7               	movwf	??___awmod
  2985  053A  0877               	movf	??___awmod,w
  2986  053B  07BF               	addwf	___awmod@counter,f
  2987  053C                     l1992:
  2988  053C  1FF4               	btfss	___awmod@divisor+1,7
  2989  053D  2D3F               	goto	u1721
  2990  053E  2D40               	goto	u1720
  2991  053F                     u1721:
  2992  053F  2D31               	goto	l1988
  2993  0540                     u1720:
  2994  0540                     l1994:
  2995  0540  0874               	movf	___awmod@divisor+1,w
  2996  0541  0276               	subwf	___awmod@dividend+1,w
  2997  0542  1D03               	skipz
  2998  0543  2D46               	goto	u1735
  2999  0544  0873               	movf	___awmod@divisor,w
  3000  0545  0275               	subwf	___awmod@dividend,w
  3001  0546                     u1735:
  3002  0546  1C03               	skipc
  3003  0547  2D49               	goto	u1731
  3004  0548  2D4A               	goto	u1730
  3005  0549                     u1731:
  3006  0549  2D50               	goto	l1998
  3007  054A                     u1730:
  3008  054A                     l1996:
  3009  054A  0873               	movf	___awmod@divisor,w
  3010  054B  02F5               	subwf	___awmod@dividend,f
  3011  054C  0874               	movf	___awmod@divisor+1,w
  3012  054D  1C03               	skipc
  3013  054E  03F6               	decf	___awmod@dividend+1,f
  3014  054F  02F6               	subwf	___awmod@dividend+1,f
  3015  0550                     l1998:
  3016  0550  3001               	movlw	1
  3017  0551                     u1745:
  3018  0551  1003               	clrc
  3019  0552  0CF4               	rrf	___awmod@divisor+1,f
  3020  0553  0CF3               	rrf	___awmod@divisor,f
  3021  0554  3EFF               	addlw	-1
  3022  0555  1D03               	skipz
  3023  0556  2D51               	goto	u1745
  3024  0557                     l2000:
  3025  0557  3001               	movlw	1
  3026  0558  02BF               	subwf	___awmod@counter,f
  3027  0559  1D03               	btfss	3,2
  3028  055A  2D5C               	goto	u1751
  3029  055B  2D5D               	goto	u1750
  3030  055C                     u1751:
  3031  055C  2D40               	goto	l1994
  3032  055D                     u1750:
  3033  055D                     l2002:
  3034  055D  0840               	movf	___awmod@sign,w
  3035  055E  1903               	btfsc	3,2
  3036  055F  2D61               	goto	u1761
  3037  0560  2D62               	goto	u1760
  3038  0561                     u1761:
  3039  0561  2D67               	goto	l2006
  3040  0562                     u1760:
  3041  0562                     l2004:
  3042  0562  09F5               	comf	___awmod@dividend,f
  3043  0563  09F6               	comf	___awmod@dividend+1,f
  3044  0564  0AF5               	incf	___awmod@dividend,f
  3045  0565  1903               	skipnz
  3046  0566  0AF6               	incf	___awmod@dividend+1,f
  3047  0567                     l2006:
  3048  0567  0876               	movf	___awmod@dividend+1,w
  3049  0568  00F4               	movwf	?___awmod+1
  3050  0569  0875               	movf	___awmod@dividend,w
  3051  056A  00F3               	movwf	?___awmod
  3052  056B                     l603:
  3053  056B  0008               	return
  3054  056C                     __end_of___awmod:
  3055                           
  3056                           	psect	text14
  3057  03DF                     __ptext14:	
  3058 ;; *************** function ___awdiv *****************
  3059 ;; Defined at:
  3060 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  divisor         2    3[COMMON] int 
  3063 ;;  dividend        2    5[COMMON] int 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  quotient        2    2[BANK0 ] int 
  3066 ;;  sign            1    1[BANK0 ] unsigned char 
  3067 ;;  counter         1    0[BANK0 ] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  2    3[COMMON] int 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         4       0       0       0       0
  3078 ;;      Locals:         0       4       0       0       0
  3079 ;;      Temps:          1       0       0       0       0
  3080 ;;      Totals:         5       4       0       0       0
  3081 ;;Total ram usage:        9 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    2
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_dec_a_bcd
  3088 ;;		_sep_char_LCD
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function ___awdiv
  3094  03DF                     ___awdiv:
  3095  03DF                     l1928:	
  3096                           ;incstack = 0
  3097                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3098                           
  3099  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  3100  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  3101  03E1  01C0               	clrf	___awdiv@sign
  3102  03E2                     l1930:
  3103  03E2  1FF4               	btfss	___awdiv@divisor+1,7
  3104  03E3  2BE5               	goto	u1581
  3105  03E4  2BE6               	goto	u1580
  3106  03E5                     u1581:
  3107  03E5  2BED               	goto	l1936
  3108  03E6                     u1580:
  3109  03E6                     l1932:
  3110  03E6  09F3               	comf	___awdiv@divisor,f
  3111  03E7  09F4               	comf	___awdiv@divisor+1,f
  3112  03E8  0AF3               	incf	___awdiv@divisor,f
  3113  03E9  1903               	skipnz
  3114  03EA  0AF4               	incf	___awdiv@divisor+1,f
  3115  03EB                     l1934:
  3116  03EB  01C0               	clrf	___awdiv@sign
  3117  03EC  0AC0               	incf	___awdiv@sign,f
  3118  03ED                     l1936:
  3119  03ED  1FF6               	btfss	___awdiv@dividend+1,7
  3120  03EE  2BF0               	goto	u1591
  3121  03EF  2BF1               	goto	u1590
  3122  03F0                     u1591:
  3123  03F0  2BFA               	goto	l1942
  3124  03F1                     u1590:
  3125  03F1                     l1938:
  3126  03F1  09F5               	comf	___awdiv@dividend,f
  3127  03F2  09F6               	comf	___awdiv@dividend+1,f
  3128  03F3  0AF5               	incf	___awdiv@dividend,f
  3129  03F4  1903               	skipnz
  3130  03F5  0AF6               	incf	___awdiv@dividend+1,f
  3131  03F6                     l1940:
  3132  03F6  3001               	movlw	1
  3133  03F7  00F7               	movwf	??___awdiv
  3134  03F8  0877               	movf	??___awdiv,w
  3135  03F9  06C0               	xorwf	___awdiv@sign,f
  3136  03FA                     l1942:
  3137  03FA  01C1               	clrf	___awdiv@quotient
  3138  03FB  01C2               	clrf	___awdiv@quotient+1
  3139  03FC                     l1944:
  3140  03FC  0873               	movf	___awdiv@divisor,w
  3141  03FD  0474               	iorwf	___awdiv@divisor+1,w
  3142  03FE  1903               	btfsc	3,2
  3143  03FF  2C01               	goto	u1601
  3144  0400  2C02               	goto	u1600
  3145  0401                     u1601:
  3146  0401  2C39               	goto	l1964
  3147  0402                     u1600:
  3148  0402                     l1946:
  3149  0402  01BF               	clrf	___awdiv@counter
  3150  0403  0ABF               	incf	___awdiv@counter,f
  3151  0404  2C10               	goto	l1952
  3152  0405                     l1948:
  3153  0405  3001               	movlw	1
  3154  0406                     u1615:
  3155  0406  1003               	clrc
  3156  0407  0DF3               	rlf	___awdiv@divisor,f
  3157  0408  0DF4               	rlf	___awdiv@divisor+1,f
  3158  0409  3EFF               	addlw	-1
  3159  040A  1D03               	skipz
  3160  040B  2C06               	goto	u1615
  3161  040C                     l1950:
  3162  040C  3001               	movlw	1
  3163  040D  00F7               	movwf	??___awdiv
  3164  040E  0877               	movf	??___awdiv,w
  3165  040F  07BF               	addwf	___awdiv@counter,f
  3166  0410                     l1952:
  3167  0410  1FF4               	btfss	___awdiv@divisor+1,7
  3168  0411  2C13               	goto	u1621
  3169  0412  2C14               	goto	u1620
  3170  0413                     u1621:
  3171  0413  2C05               	goto	l1948
  3172  0414                     u1620:
  3173  0414                     l1954:
  3174  0414  3001               	movlw	1
  3175  0415                     u1635:
  3176  0415  1003               	clrc
  3177  0416  0DC1               	rlf	___awdiv@quotient,f
  3178  0417  0DC2               	rlf	___awdiv@quotient+1,f
  3179  0418  3EFF               	addlw	-1
  3180  0419  1D03               	skipz
  3181  041A  2C15               	goto	u1635
  3182  041B  0874               	movf	___awdiv@divisor+1,w
  3183  041C  0276               	subwf	___awdiv@dividend+1,w
  3184  041D  1D03               	skipz
  3185  041E  2C21               	goto	u1645
  3186  041F  0873               	movf	___awdiv@divisor,w
  3187  0420  0275               	subwf	___awdiv@dividend,w
  3188  0421                     u1645:
  3189  0421  1C03               	skipc
  3190  0422  2C24               	goto	u1641
  3191  0423  2C25               	goto	u1640
  3192  0424                     u1641:
  3193  0424  2C2C               	goto	l1960
  3194  0425                     u1640:
  3195  0425                     l1956:
  3196  0425  0873               	movf	___awdiv@divisor,w
  3197  0426  02F5               	subwf	___awdiv@dividend,f
  3198  0427  0874               	movf	___awdiv@divisor+1,w
  3199  0428  1C03               	skipc
  3200  0429  03F6               	decf	___awdiv@dividend+1,f
  3201  042A  02F6               	subwf	___awdiv@dividend+1,f
  3202  042B                     l1958:
  3203  042B  1441               	bsf	___awdiv@quotient,0
  3204  042C                     l1960:
  3205  042C  3001               	movlw	1
  3206  042D                     u1655:
  3207  042D  1003               	clrc
  3208  042E  0CF4               	rrf	___awdiv@divisor+1,f
  3209  042F  0CF3               	rrf	___awdiv@divisor,f
  3210  0430  3EFF               	addlw	-1
  3211  0431  1D03               	skipz
  3212  0432  2C2D               	goto	u1655
  3213  0433                     l1962:
  3214  0433  3001               	movlw	1
  3215  0434  02BF               	subwf	___awdiv@counter,f
  3216  0435  1D03               	btfss	3,2
  3217  0436  2C38               	goto	u1661
  3218  0437  2C39               	goto	u1660
  3219  0438                     u1661:
  3220  0438  2C14               	goto	l1954
  3221  0439                     u1660:
  3222  0439                     l1964:
  3223  0439  0840               	movf	___awdiv@sign,w
  3224  043A  1903               	btfsc	3,2
  3225  043B  2C3D               	goto	u1671
  3226  043C  2C3E               	goto	u1670
  3227  043D                     u1671:
  3228  043D  2C43               	goto	l1968
  3229  043E                     u1670:
  3230  043E                     l1966:
  3231  043E  09C1               	comf	___awdiv@quotient,f
  3232  043F  09C2               	comf	___awdiv@quotient+1,f
  3233  0440  0AC1               	incf	___awdiv@quotient,f
  3234  0441  1903               	skipnz
  3235  0442  0AC2               	incf	___awdiv@quotient+1,f
  3236  0443                     l1968:
  3237  0443  0842               	movf	___awdiv@quotient+1,w
  3238  0444  00F4               	movwf	?___awdiv+1
  3239  0445  0841               	movf	___awdiv@quotient,w
  3240  0446  00F3               	movwf	?___awdiv
  3241  0447                     l590:
  3242  0447  0008               	return
  3243  0448                     __end_of___awdiv:
  3244                           
  3245                           	psect	text15
  3246  001F                     __ptext15:	
  3247 ;; *************** function _lec_tiempo *****************
  3248 ;; Defined at:
  3249 ;;		line 130 in file "main.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         0       0       0       0       0
  3264 ;;      Locals:         0       0       0       0       0
  3265 ;;      Temps:          0       3       0       0       0
  3266 ;;      Totals:         0       3       0       0       0
  3267 ;;Total ram usage:        3 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    4
  3270 ;; This function calls:
  3271 ;;		_I2C_Master_Read
  3272 ;;		_I2C_Master_Start
  3273 ;;		_I2C_Master_Stop
  3274 ;;		_I2C_Master_Write
  3275 ;;		_bcd_a_dec
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _lec_tiempo
  3283  001F                     _lec_tiempo:
  3284  001F                     l2150:	
  3285                           ;incstack = 0
  3286                           ; Regs used in _lec_tiempo: [wreg+status,2+status,0+pclath+cstack]
  3287                           
  3288                           
  3289                           ;main.c: 131:     write_char(hora_0 + '0');
  3290  001F  120A  158A  279F  120A  118A  	fcall	_I2C_Master_Start
  3291                           
  3292                           ;main.c: 132:     write_char(':');
  3293  0024  30D0               	movlw	208
  3294  0025  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0026  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0027  00C9               	movwf	I2C_Master_Write@d
  3297  0028  3000               	movlw	0
  3298  0029  00CA               	movwf	I2C_Master_Write@d+1
  3299  002A  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  3300                           
  3301                           ;main.c: 133:     write_char(min_1 + '0');
  3302  002F  3000               	movlw	0
  3303  0030  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0031  1303               	bcf	3,6	;RP1=0, select bank0
  3305  0032  00C9               	movwf	I2C_Master_Write@d
  3306  0033  00CA               	movwf	I2C_Master_Write@d+1
  3307  0034  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  3308                           
  3309                           ;main.c: 134:     write_char(min_0 + '0');
  3310  0039  120A  158A  27A8  120A  118A  	fcall	_I2C_Master_Stop
  3311                           
  3312                           ;main.c: 136:     write_char(seg_1 + '0');
  3313  003E  120A  158A  279F  120A  118A  	fcall	_I2C_Master_Start
  3314                           
  3315                           ;main.c: 137:     write_char(seg_0 + '0');
  3316  0043  30D1               	movlw	209
  3317  0044  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0045  1303               	bcf	3,6	;RP1=0, select bank0
  3319  0046  00C9               	movwf	I2C_Master_Write@d
  3320  0047  3000               	movlw	0
  3321  0048  00CA               	movwf	I2C_Master_Write@d+1
  3322  0049  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  3323                           
  3324                           ;main.c: 138: }
  3325  004E  3001               	movlw	1
  3326  004F  00F3               	movwf	I2C_Master_Read@a
  3327  0050  3000               	movlw	0
  3328  0051  00F4               	movwf	I2C_Master_Read@a+1
  3329  0052  120A  118A  26D4  120A  118A  	fcall	_I2C_Master_Read
  3330  0057  0873               	movf	?_I2C_Master_Read,w
  3331  0058  120A  118A  27DF  120A  118A  	fcall	_bcd_a_dec
  3332  005D  1283               	bcf	3,5	;RP0=0, select bank0
  3333  005E  1303               	bcf	3,6	;RP1=0, select bank0
  3334  005F  00CB               	movwf	??_lec_tiempo
  3335  0060  01CC               	clrf	??_lec_tiempo+1
  3336  0061  084B               	movf	??_lec_tiempo,w
  3337  0062  00A8               	movwf	_seg
  3338  0063  084C               	movf	??_lec_tiempo+1,w
  3339  0064  00A9               	movwf	_seg+1
  3340                           
  3341                           ;main.c: 139: 
  3342  0065  3001               	movlw	1
  3343  0066  00F3               	movwf	I2C_Master_Read@a
  3344  0067  3000               	movlw	0
  3345  0068  00F4               	movwf	I2C_Master_Read@a+1
  3346  0069  120A  118A  26D4  120A  118A  	fcall	_I2C_Master_Read
  3347  006E  0873               	movf	?_I2C_Master_Read,w
  3348  006F  120A  118A  27DF  120A  118A  	fcall	_bcd_a_dec
  3349  0074  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0075  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0076  00CB               	movwf	??_lec_tiempo
  3352  0077  01CC               	clrf	??_lec_tiempo+1
  3353  0078  084B               	movf	??_lec_tiempo,w
  3354  0079  00F8               	movwf	_min
  3355  007A  084C               	movf	??_lec_tiempo+1,w
  3356  007B  00F9               	movwf	_min+1
  3357                           
  3358                           ;main.c: 140: 
  3359  007C  3001               	movlw	1
  3360  007D  00F3               	movwf	I2C_Master_Read@a
  3361  007E  3000               	movlw	0
  3362  007F  00F4               	movwf	I2C_Master_Read@a+1
  3363  0080  120A  118A  26D4  120A  118A  	fcall	_I2C_Master_Read
  3364  0085  0873               	movf	?_I2C_Master_Read,w
  3365  0086  120A  118A  27DF  120A  118A  	fcall	_bcd_a_dec
  3366  008B  1283               	bcf	3,5	;RP0=0, select bank0
  3367  008C  1303               	bcf	3,6	;RP1=0, select bank0
  3368  008D  00CB               	movwf	??_lec_tiempo
  3369  008E  01CC               	clrf	??_lec_tiempo+1
  3370  008F  084B               	movf	??_lec_tiempo,w
  3371  0090  00A6               	movwf	_hora
  3372  0091  084C               	movf	??_lec_tiempo+1,w
  3373  0092  00A7               	movwf	_hora+1
  3374                           
  3375                           ;main.c: 141: 
  3376  0093  3001               	movlw	1
  3377  0094  00F3               	movwf	I2C_Master_Read@a
  3378  0095  3000               	movlw	0
  3379  0096  00F4               	movwf	I2C_Master_Read@a+1
  3380  0097  120A  118A  26D4  120A  118A  	fcall	_I2C_Master_Read
  3381                           
  3382                           ;main.c: 142: 
  3383  009C  3001               	movlw	1
  3384  009D  00F3               	movwf	I2C_Master_Read@a
  3385  009E  3000               	movlw	0
  3386  009F  00F4               	movwf	I2C_Master_Read@a+1
  3387  00A0  120A  118A  26D4  120A  118A  	fcall	_I2C_Master_Read
  3388  00A5  0873               	movf	?_I2C_Master_Read,w
  3389  00A6  120A  118A  27DF  120A  118A  	fcall	_bcd_a_dec
  3390  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  3391  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  3392  00AD  00CB               	movwf	??_lec_tiempo
  3393  00AE  01CC               	clrf	??_lec_tiempo+1
  3394  00AF  084B               	movf	??_lec_tiempo,w
  3395  00B0  00A4               	movwf	_dia
  3396  00B1  084C               	movf	??_lec_tiempo+1,w
  3397  00B2  00A5               	movwf	_dia+1
  3398                           
  3399                           ;main.c: 143: void setup(void) {
  3400  00B3  3001               	movlw	1
  3401  00B4  00F3               	movwf	I2C_Master_Read@a
  3402  00B5  3000               	movlw	0
  3403  00B6  00F4               	movwf	I2C_Master_Read@a+1
  3404  00B7  120A  118A  26D4  120A  118A  	fcall	_I2C_Master_Read
  3405  00BC  0873               	movf	?_I2C_Master_Read,w
  3406  00BD  120A  118A  27DF  120A  118A  	fcall	_bcd_a_dec
  3407  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  3408  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  3409  00C4  00CB               	movwf	??_lec_tiempo
  3410  00C5  01CC               	clrf	??_lec_tiempo+1
  3411  00C6  084B               	movf	??_lec_tiempo,w
  3412  00C7  00A2               	movwf	_mes
  3413  00C8  084C               	movf	??_lec_tiempo+1,w
  3414  00C9  00A3               	movwf	_mes+1
  3415                           
  3416                           ;main.c: 144:     ANSEL = 0;
  3417  00CA  3001               	movlw	1
  3418  00CB  00F3               	movwf	I2C_Master_Read@a
  3419  00CC  3000               	movlw	0
  3420  00CD  00F4               	movwf	I2C_Master_Read@a+1
  3421  00CE  120A  118A  26D4  120A  118A  	fcall	_I2C_Master_Read
  3422  00D3  0873               	movf	?_I2C_Master_Read,w
  3423  00D4  120A  118A  27DF  120A  118A  	fcall	_bcd_a_dec
  3424  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  3425  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  3426  00DB  00CB               	movwf	??_lec_tiempo
  3427  00DC  01CC               	clrf	??_lec_tiempo+1
  3428  00DD  084B               	movf	??_lec_tiempo,w
  3429  00DE  00A0               	movwf	_year
  3430  00DF  084C               	movf	??_lec_tiempo+1,w
  3431  00E0  00A1               	movwf	_year+1
  3432                           
  3433                           ;main.c: 145:     ANSELH = 0;
  3434  00E1  120A  158A  27A8  120A  118A  	fcall	_I2C_Master_Stop
  3435                           
  3436                           ;main.c: 147:     PORTD = 0;
  3437  00E6  120A  158A  279F  120A  118A  	fcall	_I2C_Master_Start
  3438                           
  3439                           ;main.c: 148:     TRISB = 0;
  3440  00EB  30D1               	movlw	209
  3441  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  3442  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  3443  00EE  00C9               	movwf	I2C_Master_Write@d
  3444  00EF  3000               	movlw	0
  3445  00F0  00CA               	movwf	I2C_Master_Write@d+1
  3446  00F1  120A  158A  27BB  120A  118A  	fcall	_I2C_Master_Write
  3447                           
  3448                           ;main.c: 149:     PORTB = 0;
  3449  00F6  3001               	movlw	1
  3450  00F7  00F3               	movwf	I2C_Master_Read@a
  3451  00F8  3000               	movlw	0
  3452  00F9  00F4               	movwf	I2C_Master_Read@a+1
  3453  00FA  120A  118A  26D4  120A  118A  	fcall	_I2C_Master_Read
  3454                           
  3455                           ;main.c: 150:     TRISE = 0;
  3456  00FF  120A  158A  27A8  120A  118A  	fcall	_I2C_Master_Stop
  3457  0104                     l2152:
  3458                           
  3459                           ;main.c: 151:     PORTE = 0;
  3460  0104  3003               	movlw	3
  3461  0105  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0106  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0107  00CD               	movwf	??_lec_tiempo+2
  3464  0108  3008               	movlw	8
  3465  0109  00CC               	movwf	??_lec_tiempo+1
  3466  010A  3076               	movlw	118
  3467  010B  00CB               	movwf	??_lec_tiempo
  3468  010C                     u2027:
  3469  010C  0BCB               	decfsz	??_lec_tiempo,f
  3470  010D  290C               	goto	u2027
  3471  010E  0BCC               	decfsz	??_lec_tiempo+1,f
  3472  010F  290C               	goto	u2027
  3473  0110  0BCD               	decfsz	??_lec_tiempo+2,f
  3474  0111  290C               	goto	u2027
  3475  0112  0000               	nop
  3476  0113                     l126:
  3477  0113  0008               	return
  3478  0114                     __end_of_lec_tiempo:
  3479                           
  3480                           	psect	text16
  3481  07DF                     __ptext16:	
  3482 ;; *************** function _bcd_a_dec *****************
  3483 ;; Defined at:
  3484 ;;		line 107 in file "main.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  valor           1    wreg     unsigned char 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  valor           1    7[COMMON] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      unsigned char 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0, pclath, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3498 ;;      Params:         0       0       0       0       0
  3499 ;;      Locals:         1       0       0       0       0
  3500 ;;      Temps:          0       3       0       0       0
  3501 ;;      Totals:         1       3       0       0       0
  3502 ;;Total ram usage:        4 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    3
  3505 ;; This function calls:
  3506 ;;		___bmul
  3507 ;; This function is called by:
  3508 ;;		_lec_tiempo
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function _bcd_a_dec
  3514  07DF                     _bcd_a_dec:
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in _bcd_a_dec: [wreg+status,2+status,0+pclath+cstack]
  3518                           ;bcd_a_dec@valor stored from wreg
  3519  07DF  00F7               	movwf	bcd_a_dec@valor
  3520  07E0                     l2010:
  3521                           
  3522                           ;main.c: 108:       mes = bcd_a_dec(I2C_Master_Read(1));
  3523  07E0  300F               	movlw	15
  3524  07E1  0577               	andwf	bcd_a_dec@valor,w
  3525  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  3526  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  3527  07E4  00BF               	movwf	??_bcd_a_dec
  3528  07E5  300A               	movlw	10
  3529  07E6  00C0               	movwf	??_bcd_a_dec+1
  3530  07E7  0840               	movf	??_bcd_a_dec+1,w
  3531  07E8  00F3               	movwf	___bmul@multiplicand
  3532  07E9  0877               	movf	bcd_a_dec@valor,w
  3533  07EA  00C1               	movwf	??_bcd_a_dec+2
  3534  07EB  3004               	movlw	4
  3535  07EC                     u1775:
  3536  07EC  1003               	clrc
  3537  07ED  0CC1               	rrf	??_bcd_a_dec+2,f
  3538  07EE  3EFF               	addlw	-1
  3539  07EF  1D03               	skipz
  3540  07F0  2FEC               	goto	u1775
  3541  07F1  0841               	movf	??_bcd_a_dec+2,w
  3542  07F2  120A  158A  27EB  120A  118A  	fcall	___bmul
  3543  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  3544  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  3545  07F9  073F               	addwf	??_bcd_a_dec,w
  3546  07FA                     l117:
  3547  07FA  0008               	return
  3548  07FB                     __end_of_bcd_a_dec:
  3549                           
  3550                           	psect	text17
  3551  0FEB                     __ptext17:	
  3552 ;; *************** function ___bmul *****************
  3553 ;; Defined at:
  3554 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  multiplier      1    wreg     unsigned char 
  3557 ;;  multiplicand    1    3[COMMON] unsigned char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  multiplier      1    6[COMMON] unsigned char 
  3560 ;;  product         1    5[COMMON] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      unsigned char 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3570 ;;      Params:         1       0       0       0       0
  3571 ;;      Locals:         2       0       0       0       0
  3572 ;;      Temps:          1       0       0       0       0
  3573 ;;      Totals:         4       0       0       0       0
  3574 ;;Total ram usage:        4 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    2
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_bcd_a_dec
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           
  3585                           ;psect for function ___bmul
  3586  0FEB                     ___bmul:
  3587                           
  3588                           ;incstack = 0
  3589                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3590                           ;___bmul@multiplier stored from wreg
  3591  0FEB  00F6               	movwf	___bmul@multiplier
  3592  0FEC                     l1424:
  3593  0FEC  01F5               	clrf	___bmul@product
  3594  0FED                     l1426:
  3595  0FED  1C76               	btfss	___bmul@multiplier,0
  3596  0FEE  2FF0               	goto	u841
  3597  0FEF  2FF1               	goto	u840
  3598  0FF0                     u841:
  3599  0FF0  2FF5               	goto	l1430
  3600  0FF1                     u840:
  3601  0FF1                     l1428:
  3602  0FF1  0873               	movf	___bmul@multiplicand,w
  3603  0FF2  00F4               	movwf	??___bmul
  3604  0FF3  0874               	movf	??___bmul,w
  3605  0FF4  07F5               	addwf	___bmul@product,f
  3606  0FF5                     l1430:
  3607  0FF5  1003               	clrc
  3608  0FF6  0DF3               	rlf	___bmul@multiplicand,f
  3609  0FF7                     l1432:
  3610  0FF7  1003               	clrc
  3611  0FF8  0CF6               	rrf	___bmul@multiplier,f
  3612  0FF9  0876               	movf	___bmul@multiplier,w
  3613  0FFA  1D03               	btfss	3,2
  3614  0FFB  2FFD               	goto	u851
  3615  0FFC  2FFE               	goto	u850
  3616  0FFD                     u851:
  3617  0FFD  2FED               	goto	l1426
  3618  0FFE                     u850:
  3619  0FFE                     l1434:
  3620  0FFE  0875               	movf	___bmul@product,w
  3621  0FFF                     l433:
  3622  0FFF  0008               	return
  3623  1000                     __end_of___bmul:
  3624                           
  3625                           	psect	text18
  3626  0FBB                     __ptext18:	
  3627 ;; *************** function _I2C_Master_Write *****************
  3628 ;; Defined at:
  3629 ;;		line 65 in file "I2C.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  d               2   10[BANK0 ] unsigned int 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0, pclath, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3643 ;;      Params:         0       2       0       0       0
  3644 ;;      Locals:         0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0
  3646 ;;      Totals:         0       2       0       0       0
  3647 ;;Total ram usage:        2 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    3
  3650 ;; This function calls:
  3651 ;;		_I2C_Master_Wait
  3652 ;; This function is called by:
  3653 ;;		_set_tiempo
  3654 ;;		_lec_tiempo
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function _I2C_Master_Write
  3660  0FBB                     _I2C_Master_Write:
  3661  0FBB                     l2022:	
  3662                           ;incstack = 0
  3663                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3664                           
  3665                           
  3666                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3667  0FBB  120A  158A  27DE  120A  158A  	fcall	_I2C_Master_Wait
  3668  0FC0                     l2024:
  3669                           
  3670                           ;I2C.c: 68:     SSPBUF = d;
  3671  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0FC2  0849               	movf	I2C_Master_Write@d,w
  3674  0FC3  0093               	movwf	19	;volatile
  3675  0FC4                     l179:
  3676  0FC4  0008               	return
  3677  0FC5                     __end_of_I2C_Master_Write:
  3678                           
  3679                           	psect	text19
  3680  0FA8                     __ptext19:	
  3681 ;; *************** function _I2C_Master_Stop *****************
  3682 ;; Defined at:
  3683 ;;		line 55 in file "I2C.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    3
  3704 ;; This function calls:
  3705 ;;		_I2C_Master_Wait
  3706 ;; This function is called by:
  3707 ;;		_set_tiempo
  3708 ;;		_lec_tiempo
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           
  3713                           ;psect for function _I2C_Master_Stop
  3714  0FA8                     _I2C_Master_Stop:
  3715  0FA8                     l2026:	
  3716                           ;incstack = 0
  3717                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3718                           
  3719                           
  3720                           ;I2C.c: 57:     I2C_Master_Wait();
  3721  0FA8  120A  158A  27DE  120A  158A  	fcall	_I2C_Master_Wait
  3722  0FAD                     l2028:
  3723                           
  3724                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3725  0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0FAE  1303               	bcf	3,6	;RP1=0, select bank1
  3727  0FAF  1511               	bsf	17,2	;volatile
  3728  0FB0                     l176:
  3729  0FB0  0008               	return
  3730  0FB1                     __end_of_I2C_Master_Stop:
  3731                           
  3732                           	psect	text20
  3733  0F9F                     __ptext20:	
  3734 ;; *************** function _I2C_Master_Start *****************
  3735 ;; Defined at:
  3736 ;;		line 39 in file "I2C.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, pclath, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3750 ;;      Params:         0       0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0
  3753 ;;      Totals:         0       0       0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    3
  3757 ;; This function calls:
  3758 ;;		_I2C_Master_Wait
  3759 ;; This function is called by:
  3760 ;;		_set_tiempo
  3761 ;;		_lec_tiempo
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           
  3766                           ;psect for function _I2C_Master_Start
  3767  0F9F                     _I2C_Master_Start:
  3768  0F9F                     l2018:	
  3769                           ;incstack = 0
  3770                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3771                           
  3772                           
  3773                           ;I2C.c: 41:     I2C_Master_Wait();
  3774  0F9F  120A  158A  27DE  120A  158A  	fcall	_I2C_Master_Wait
  3775  0FA4                     l2020:
  3776                           
  3777                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3778  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3779  0FA5  1303               	bcf	3,6	;RP1=0, select bank1
  3780  0FA6  1411               	bsf	17,0	;volatile
  3781  0FA7                     l170:
  3782  0FA7  0008               	return
  3783  0FA8                     __end_of_I2C_Master_Start:
  3784                           
  3785                           	psect	text21
  3786  06D4                     __ptext21:	
  3787 ;; *************** function _I2C_Master_Read *****************
  3788 ;; Defined at:
  3789 ;;		line 74 in file "I2C.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  a               2    3[COMMON] unsigned short 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  temp            2    0[BANK0 ] unsigned short 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  2    3[COMMON] unsigned short 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, pclath, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3803 ;;      Params:         2       0       0       0       0
  3804 ;;      Locals:         0       2       0       0       0
  3805 ;;      Temps:          2       0       0       0       0
  3806 ;;      Totals:         4       2       0       0       0
  3807 ;;Total ram usage:        6 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    3
  3810 ;; This function calls:
  3811 ;;		_I2C_Master_Wait
  3812 ;; This function is called by:
  3813 ;;		_lec_tiempo
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           
  3818                           ;psect for function _I2C_Master_Read
  3819  06D4                     _I2C_Master_Read:
  3820  06D4                     l2030:	
  3821                           ;incstack = 0
  3822                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3823                           
  3824                           
  3825                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3826  06D4  120A  158A  27DE  120A  118A  	fcall	_I2C_Master_Wait
  3827  06D9                     l2032:
  3828                           
  3829                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3830  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  3831  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  3832  06DB  1591               	bsf	17,3	;volatile
  3833                           
  3834                           ;I2C.c: 79:     I2C_Master_Wait();
  3835  06DC  120A  158A  27DE  120A  118A  	fcall	_I2C_Master_Wait
  3836  06E1                     l2034:
  3837                           
  3838                           ;I2C.c: 80:     temp = SSPBUF;
  3839  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  3840  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  3841  06E3  0813               	movf	19,w	;volatile
  3842  06E4  00F5               	movwf	??_I2C_Master_Read
  3843  06E5  01F6               	clrf	??_I2C_Master_Read+1
  3844  06E6  0875               	movf	??_I2C_Master_Read,w
  3845  06E7  00BF               	movwf	I2C_Master_Read@temp
  3846  06E8  0876               	movf	??_I2C_Master_Read+1,w
  3847  06E9  00C0               	movwf	I2C_Master_Read@temp+1
  3848  06EA                     l2036:
  3849                           
  3850                           ;I2C.c: 81:     I2C_Master_Wait();
  3851  06EA  120A  158A  27DE  120A  118A  	fcall	_I2C_Master_Wait
  3852  06EF                     l2038:
  3853                           
  3854                           ;I2C.c: 82:     if(a == 1){
  3855  06EF  0373               	decf	I2C_Master_Read@a,w
  3856  06F0  0474               	iorwf	I2C_Master_Read@a+1,w
  3857  06F1  1D03               	btfss	3,2
  3858  06F2  2EF4               	goto	u1791
  3859  06F3  2EF5               	goto	u1790
  3860  06F4                     u1791:
  3861  06F4  2EF9               	goto	l182
  3862  06F5                     u1790:
  3863  06F5                     l2040:
  3864                           
  3865                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3866  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3867  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3868  06F7  1291               	bcf	17,5	;volatile
  3869                           
  3870                           ;I2C.c: 84:     }else{
  3871  06F8  2EFC               	goto	l183
  3872  06F9                     l182:
  3873                           
  3874                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3875  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  3876  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  3877  06FB  1691               	bsf	17,5	;volatile
  3878  06FC                     l183:	
  3879                           ;I2C.c: 86:     }
  3880                           
  3881                           
  3882                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3883  06FC  1611               	bsf	17,4	;volatile
  3884  06FD                     l2042:
  3885                           
  3886                           ;I2C.c: 88:     return temp;
  3887  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3888  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  3889  06FF  0840               	movf	I2C_Master_Read@temp+1,w
  3890  0700  00F4               	movwf	?_I2C_Master_Read+1
  3891  0701  083F               	movf	I2C_Master_Read@temp,w
  3892  0702  00F3               	movwf	?_I2C_Master_Read
  3893  0703                     l184:
  3894  0703  0008               	return
  3895  0704                     __end_of_I2C_Master_Read:
  3896                           
  3897                           	psect	text22
  3898  0FDE                     __ptext22:	
  3899 ;; *************** function _I2C_Master_Wait *****************
  3900 ;; Defined at:
  3901 ;;		line 32 in file "I2C.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       0       0       0       0
  3916 ;;      Locals:         0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0
  3918 ;;      Totals:         0       0       0       0       0
  3919 ;;Total ram usage:        0 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    2
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_I2C_Master_Start
  3926 ;;		_I2C_Master_Stop
  3927 ;;		_I2C_Master_Write
  3928 ;;		_I2C_Master_Read
  3929 ;;		_I2C_Master_RepeatedStart
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function _I2C_Master_Wait
  3935  0FDE                     _I2C_Master_Wait:
  3936  0FDE                     l1886:	
  3937                           ;incstack = 0
  3938                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3939                           
  3940  0FDE                     l164:	
  3941                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3942                           
  3943  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  3944  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  3945  0FE0  1914               	btfsc	20,2	;volatile
  3946  0FE1  2FE3               	goto	u1491
  3947  0FE2  2FE4               	goto	u1490
  3948  0FE3                     u1491:
  3949  0FE3  2FDE               	goto	l164
  3950  0FE4                     u1490:
  3951  0FE4                     l1888:
  3952  0FE4  0811               	movf	17,w	;volatile
  3953  0FE5  391F               	andlw	31
  3954  0FE6  1D03               	btfss	3,2
  3955  0FE7  2FE9               	goto	u1501
  3956  0FE8  2FEA               	goto	u1500
  3957  0FE9                     u1501:
  3958  0FE9  2FDE               	goto	l164
  3959  0FEA                     u1500:
  3960  0FEA                     l167:
  3961  0FEA  0008               	return
  3962  0FEB                     __end_of_I2C_Master_Wait:
  3963                           
  3964                           	psect	text23
  3965  0FB1                     __ptext23:	
  3966 ;; *************** function _config_txsta *****************
  3967 ;; Defined at:
  3968 ;;		line 9 in file "USART.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		None
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3982 ;;      Params:         0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    2
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_main
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           
  3997                           ;psect for function _config_txsta
  3998  0FB1                     _config_txsta:
  3999  0FB1                     l1710:	
  4000                           ;incstack = 0
  4001                           ; Regs used in _config_txsta: []
  4002                           
  4003                           
  4004                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  4005  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  4006  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  4007  0FB3  1398               	bcf	24,7	;volatile
  4008                           
  4009                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  4010  0FB4  1318               	bcf	24,6	;volatile
  4011                           
  4012                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  4013  0FB5  1698               	bsf	24,5	;volatile
  4014                           
  4015                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  4016  0FB6  1218               	bcf	24,4	;volatile
  4017                           
  4018                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  4019  0FB7  1118               	bcf	24,2	;volatile
  4020                           
  4021                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  4022  0FB8  1098               	bcf	24,1	;volatile
  4023                           
  4024                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  4025  0FB9  1018               	bcf	24,0	;volatile
  4026  0FBA                     l207:
  4027  0FBA  0008               	return
  4028  0FBB                     __end_of_config_txsta:
  4029                           
  4030                           	psect	text24
  4031  0F8F                     __ptext24:	
  4032 ;; *************** function _config_rcsta *****************
  4033 ;; Defined at:
  4034 ;;		line 19 in file "USART.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;		None
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		status,2
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4048 ;;      Params:         0       0       0       0       0
  4049 ;;      Locals:         0       0       0       0       0
  4050 ;;      Temps:          0       0       0       0       0
  4051 ;;      Totals:         0       0       0       0       0
  4052 ;;Total ram usage:        0 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    2
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_main
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           
  4063                           ;psect for function _config_rcsta
  4064  0F8F                     _config_rcsta:
  4065  0F8F                     l1712:	
  4066                           ;incstack = 0
  4067                           ; Regs used in _config_rcsta: [status,2]
  4068                           
  4069                           
  4070                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  4071  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0F91  1798               	bsf	24,7	;volatile
  4074                           
  4075                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  4076  0F92  1318               	bcf	24,6	;volatile
  4077                           
  4078                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  4079  0F93  1298               	bcf	24,5	;volatile
  4080                           
  4081                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  4082  0F94  1618               	bsf	24,4	;volatile
  4083  0F95                     l1714:
  4084                           
  4085                           ;USART.c: 24:     RCREG = 0;
  4086  0F95  019A               	clrf	26	;volatile
  4087  0F96                     l210:
  4088  0F96  0008               	return
  4089  0F97                     __end_of_config_rcsta:
  4090                           
  4091                           	psect	text25
  4092  07FB                     __ptext25:	
  4093 ;; *************** function __baudios *****************
  4094 ;; Defined at:
  4095 ;;		line 5 in file "USART.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4109 ;;      Params:         0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0
  4112 ;;      Totals:         0       0       0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    2
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           
  4124                           ;psect for function __baudios
  4125  07FB                     __baudios:
  4126  07FB                     l1708:	
  4127                           ;incstack = 0
  4128                           ; Regs used in __baudios: [wreg]
  4129                           
  4130                           
  4131                           ;USART.c: 6:     SPBRG = 12;
  4132  07FB  300C               	movlw	12
  4133  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  4134  07FD  1303               	bcf	3,6	;RP1=0, select bank1
  4135  07FE  0099               	movwf	25	;volatile
  4136  07FF                     l204:
  4137  07FF  0008               	return
  4138  0800                     __end_of__baudios:
  4139                           
  4140                           	psect	text26
  4141  07A4                     __ptext26:	
  4142 ;; *************** function _Write_USART_String *****************
  4143 ;; Defined at:
  4144 ;;		line 30 in file "USART.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  a               1    wreg     PTR unsigned char 
  4147 ;;		 -> BUFFER(20), 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  a               1    5[COMMON] PTR unsigned char 
  4150 ;;		 -> BUFFER(20), 
  4151 ;;  i               1    6[COMMON] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4161 ;;      Params:         0       0       0       0       0
  4162 ;;      Locals:         2       0       0       0       0
  4163 ;;      Temps:          1       0       0       0       0
  4164 ;;      Totals:         3       0       0       0       0
  4165 ;;Total ram usage:        3 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    3
  4168 ;; This function calls:
  4169 ;;		_Write_USART
  4170 ;; This function is called by:
  4171 ;;		_main
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           
  4176                           ;psect for function _Write_USART_String
  4177  07A4                     _Write_USART_String:
  4178                           
  4179                           ;incstack = 0
  4180                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4181                           ;Write_USART_String@a stored from wreg
  4182  07A4  00F5               	movwf	Write_USART_String@a
  4183  07A5                     l1804:
  4184                           
  4185                           ;USART.c: 31:     uint8_t i;;USART.c: 32:     for(i=0;a[i]!='\0';i++){
  4186  07A5  01F6               	clrf	Write_USART_String@i
  4187  07A6  2FB6               	goto	l1810
  4188  07A7                     l1806:
  4189                           
  4190                           ;USART.c: 33:         Write_USART(a[i]);
  4191  07A7  0876               	movf	Write_USART_String@i,w
  4192  07A8  0775               	addwf	Write_USART_String@a,w
  4193  07A9  00F4               	movwf	??_Write_USART_String
  4194  07AA  0874               	movf	??_Write_USART_String,w
  4195  07AB  0084               	movwf	4
  4196  07AC  0800               	movf	0,w
  4197  07AD  120A  158A  27C5  120A  118A  	fcall	_Write_USART
  4198  07B2                     l1808:
  4199                           
  4200                           ;USART.c: 34:     }
  4201  07B2  3001               	movlw	1
  4202  07B3  00F4               	movwf	??_Write_USART_String
  4203  07B4  0874               	movf	??_Write_USART_String,w
  4204  07B5  07F6               	addwf	Write_USART_String@i,f
  4205  07B6                     l1810:
  4206  07B6  0876               	movf	Write_USART_String@i,w
  4207  07B7  0775               	addwf	Write_USART_String@a,w
  4208  07B8  00F4               	movwf	??_Write_USART_String
  4209  07B9  0874               	movf	??_Write_USART_String,w
  4210  07BA  0084               	movwf	4
  4211  07BB  1383               	bcf	3,7	;select IRP bank0
  4212  07BC  0800               	movf	0,w
  4213  07BD  1D03               	btfss	3,2
  4214  07BE  2FC0               	goto	u1401
  4215  07BF  2FC1               	goto	u1400
  4216  07C0                     u1401:
  4217  07C0  2FA7               	goto	l1806
  4218  07C1                     u1400:
  4219  07C1                     l222:
  4220  07C1  0008               	return
  4221  07C2                     __end_of_Write_USART_String:
  4222                           
  4223                           	psect	text27
  4224  0FC5                     __ptext27:	
  4225 ;; *************** function _Write_USART *****************
  4226 ;; Defined at:
  4227 ;;		line 26 in file "USART.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  a               1    wreg     unsigned char 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  a               1    3[COMMON] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4241 ;;      Params:         0       0       0       0       0
  4242 ;;      Locals:         1       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0
  4244 ;;      Totals:         1       0       0       0       0
  4245 ;;Total ram usage:        1 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    2
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_main
  4252 ;;		_Write_USART_String
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function _Write_USART
  4258  0FC5                     _Write_USART:
  4259                           
  4260                           ;incstack = 0
  4261                           ; Regs used in _Write_USART: [wreg]
  4262                           ;Write_USART@a stored from wreg
  4263  0FC5  00F3               	movwf	Write_USART@a
  4264  0FC6                     l1544:
  4265  0FC6                     l213:	
  4266                           ;USART.c: 27:     while(!TRMT);
  4267                           
  4268  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  4269  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  4270  0FC8  1C98               	btfss	24,1	;volatile
  4271  0FC9  2FCB               	goto	u1121
  4272  0FCA  2FCC               	goto	u1120
  4273  0FCB                     u1121:
  4274  0FCB  2FC6               	goto	l213
  4275  0FCC                     u1120:
  4276  0FCC                     l1546:
  4277                           
  4278                           ;USART.c: 28:     TXREG=a;
  4279  0FCC  0873               	movf	Write_USART@a,w
  4280  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  4281  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0FCF  0099               	movwf	25	;volatile
  4283  0FD0                     l216:
  4284  0FD0  0008               	return
  4285  0FD1                     __end_of_Write_USART:
  4286                           
  4287                           	psect	text28
  4288  036A                     __ptext28:	
  4289 ;; *************** function _LCD_init *****************
  4290 ;; Defined at:
  4291 ;;		line 69 in file "LCD.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;		None
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0, pclath, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4305 ;;      Params:         0       0       0       0       0
  4306 ;;      Locals:         0       0       0       0       0
  4307 ;;      Temps:          0       2       0       0       0
  4308 ;;      Totals:         0       2       0       0       0
  4309 ;;Total ram usage:        2 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    4
  4312 ;; This function calls:
  4313 ;;		_CMDs
  4314 ;; This function is called by:
  4315 ;;		_main
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           
  4320                           ;psect for function _LCD_init
  4321  036A                     _LCD_init:
  4322  036A                     l2122:	
  4323                           ;incstack = 0
  4324                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  4325                           
  4326                           
  4327                           ;LCD.c: 70:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4328  036A  3034               	movlw	52
  4329  036B  1283               	bcf	3,5	;RP0=0, select bank0
  4330  036C  1303               	bcf	3,6	;RP1=0, select bank0
  4331  036D  00C0               	movwf	??_LCD_init+1
  4332  036E  30F1               	movlw	241
  4333  036F  00BF               	movwf	??_LCD_init
  4334  0370                     u2037:
  4335  0370  0BBF               	decfsz	??_LCD_init,f
  4336  0371  2B70               	goto	u2037
  4337  0372  0BC0               	decfsz	??_LCD_init+1,f
  4338  0373  2B70               	goto	u2037
  4339  0374                     l2124:
  4340                           
  4341                           ;LCD.c: 71:     CMDs (0x30);
  4342  0374  3030               	movlw	48
  4343  0375  120A  118A  2782  120A  118A  	fcall	_CMDs
  4344  037A                     l2126:
  4345                           
  4346                           ;LCD.c: 72:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4347  037A  300D               	movlw	13
  4348  037B  1283               	bcf	3,5	;RP0=0, select bank0
  4349  037C  1303               	bcf	3,6	;RP1=0, select bank0
  4350  037D  00C0               	movwf	??_LCD_init+1
  4351  037E  30FB               	movlw	251
  4352  037F  00BF               	movwf	??_LCD_init
  4353  0380                     u2047:
  4354  0380  0BBF               	decfsz	??_LCD_init,f
  4355  0381  2B80               	goto	u2047
  4356  0382  0BC0               	decfsz	??_LCD_init+1,f
  4357  0383  2B80               	goto	u2047
  4358                           
  4359                           ;LCD.c: 73:     CMDs (0x30);
  4360  0384  3030               	movlw	48
  4361  0385  120A  118A  2782  120A  118A  	fcall	_CMDs
  4362  038A                     l2128:
  4363                           
  4364                           ;LCD.c: 74:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4365  038A  3041               	movlw	65
  4366  038B  1283               	bcf	3,5	;RP0=0, select bank0
  4367  038C  1303               	bcf	3,6	;RP1=0, select bank0
  4368  038D  00BF               	movwf	??_LCD_init
  4369  038E                     u2057:
  4370  038E  0BBF               	decfsz	??_LCD_init,f
  4371  038F  2B8E               	goto	u2057
  4372  0390  2B91               	nop2
  4373  0391                     l2130:
  4374                           
  4375                           ;LCD.c: 75:     CMDs (0x30);
  4376  0391  3030               	movlw	48
  4377  0392  120A  118A  2782  120A  118A  	fcall	_CMDs
  4378                           
  4379                           ;LCD.c: 76:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4380  0397  3041               	movlw	65
  4381  0398  1283               	bcf	3,5	;RP0=0, select bank0
  4382  0399  1303               	bcf	3,6	;RP1=0, select bank0
  4383  039A  00BF               	movwf	??_LCD_init
  4384  039B                     u2067:
  4385  039B  0BBF               	decfsz	??_LCD_init,f
  4386  039C  2B9B               	goto	u2067
  4387  039D  2B9E               	nop2
  4388  039E                     l2132:
  4389                           
  4390                           ;LCD.c: 77:     CMDs (0x38);
  4391  039E  3038               	movlw	56
  4392  039F  120A  118A  2782  120A  118A  	fcall	_CMDs
  4393  03A4                     l2134:
  4394                           
  4395                           ;LCD.c: 78:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  4396  03A4  3027               	movlw	39
  4397  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  4398  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  4399  03A7  00BF               	movwf	??_LCD_init
  4400  03A8                     u2077:
  4401  03A8  0BBF               	decfsz	??_LCD_init,f
  4402  03A9  2BA8               	goto	u2077
  4403                           
  4404                           ;LCD.c: 79:     CMDs (0x08);
  4405  03AA  3008               	movlw	8
  4406  03AB  120A  118A  2782  120A  118A  	fcall	_CMDs
  4407  03B0                     l2136:
  4408                           
  4409                           ;LCD.c: 80:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  4410  03B0  3027               	movlw	39
  4411  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  4412  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  4413  03B3  00BF               	movwf	??_LCD_init
  4414  03B4                     u2087:
  4415  03B4  0BBF               	decfsz	??_LCD_init,f
  4416  03B5  2BB4               	goto	u2087
  4417  03B6                     l2138:
  4418                           
  4419                           ;LCD.c: 81:     CMDs (0x01);
  4420  03B6  3001               	movlw	1
  4421  03B7  120A  118A  2782  120A  118A  	fcall	_CMDs
  4422                           
  4423                           ;LCD.c: 82:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4424  03BC  300D               	movlw	13
  4425  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  4426  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  4427  03BF  00C0               	movwf	??_LCD_init+1
  4428  03C0  30FB               	movlw	251
  4429  03C1  00BF               	movwf	??_LCD_init
  4430  03C2                     u2097:
  4431  03C2  0BBF               	decfsz	??_LCD_init,f
  4432  03C3  2BC2               	goto	u2097
  4433  03C4  0BC0               	decfsz	??_LCD_init+1,f
  4434  03C5  2BC2               	goto	u2097
  4435  03C6                     l2140:
  4436                           
  4437                           ;LCD.c: 83:     CMDs (0x06);
  4438  03C6  3006               	movlw	6
  4439  03C7  120A  118A  2782  120A  118A  	fcall	_CMDs
  4440  03CC                     l2142:
  4441                           
  4442                           ;LCD.c: 84:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  4443  03CC  3027               	movlw	39
  4444  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  4445  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  4446  03CF  00BF               	movwf	??_LCD_init
  4447  03D0                     u2107:
  4448  03D0  0BBF               	decfsz	??_LCD_init,f
  4449  03D1  2BD0               	goto	u2107
  4450                           
  4451                           ;LCD.c: 85:     CMDs (0x0C);
  4452  03D2  300C               	movlw	12
  4453  03D3  120A  118A  2782  120A  118A  	fcall	_CMDs
  4454  03D8                     l2144:
  4455                           
  4456                           ;LCD.c: 86:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  4457  03D8  3027               	movlw	39
  4458  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  4459  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  4460  03DB  00BF               	movwf	??_LCD_init
  4461  03DC                     u2117:
  4462  03DC  0BBF               	decfsz	??_LCD_init,f
  4463  03DD  2BDC               	goto	u2117
  4464  03DE                     l284:
  4465  03DE  0008               	return
  4466  03DF                     __end_of_LCD_init:
  4467                           
  4468                           	psect	text29
  4469  0FD1                     __ptext29:	
  4470 ;; *************** function _LCD_clear *****************
  4471 ;; Defined at:
  4472 ;;		line 52 in file "LCD.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0, pclath, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4486 ;;      Params:         0       0       0       0       0
  4487 ;;      Locals:         0       0       0       0       0
  4488 ;;      Temps:          0       0       0       0       0
  4489 ;;      Totals:         0       0       0       0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    4
  4493 ;; This function calls:
  4494 ;;		_CMDs
  4495 ;; This function is called by:
  4496 ;;		_main
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _LCD_clear
  4502  0FD1                     _LCD_clear:
  4503  0FD1                     l2146:	
  4504                           ;incstack = 0
  4505                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  4506                           
  4507                           
  4508                           ;LCD.c: 53:     CMDs(0);
  4509  0FD1  3000               	movlw	0
  4510  0FD2  120A  118A  2782  120A  158A  	fcall	_CMDs
  4511                           
  4512                           ;LCD.c: 54:     CMDs(1);
  4513  0FD7  3001               	movlw	1
  4514  0FD8  120A  118A  2782  120A  158A  	fcall	_CMDs
  4515  0FDD                     l275:
  4516  0FDD  0008               	return
  4517  0FDE                     __end_of_LCD_clear:
  4518                           
  4519                           	psect	text30
  4520  0782                     __ptext30:	
  4521 ;; *************** function _CMDs *****************
  4522 ;; Defined at:
  4523 ;;		line 42 in file "LCD.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  a               1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  a               1    6[COMMON] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4537 ;;      Params:         0       0       0       0       0
  4538 ;;      Locals:         1       0       0       0       0
  4539 ;;      Temps:          2       0       0       0       0
  4540 ;;      Totals:         3       0       0       0       0
  4541 ;;Total ram usage:        3 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    3
  4544 ;; This function calls:
  4545 ;;		_port
  4546 ;; This function is called by:
  4547 ;;		_LCD_clear
  4548 ;;		_set_cursor
  4549 ;;		_LCD_init
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           
  4554                           ;psect for function _CMDs
  4555  0782                     _CMDs:
  4556                           
  4557                           ;incstack = 0
  4558                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  4559                           ;CMDs@a stored from wreg
  4560  0782  00F6               	movwf	CMDs@a
  4561  0783                     l1890:
  4562                           
  4563                           ;LCD.c: 43:     RE0 = 0;
  4564  0783  1283               	bcf	3,5	;RP0=0, select bank0
  4565  0784  1303               	bcf	3,6	;RP1=0, select bank0
  4566  0785  1009               	bcf	9,0	;volatile
  4567  0786                     l1892:
  4568                           
  4569                           ;LCD.c: 44:     port(a);
  4570  0786  0876               	movf	CMDs@a,w
  4571  0787  120A  118A  25B2  120A  118A  	fcall	_port
  4572  078C                     l1894:
  4573                           
  4574                           ;LCD.c: 45:     RE1 = 1;
  4575  078C  1283               	bcf	3,5	;RP0=0, select bank0
  4576  078D  1303               	bcf	3,6	;RP1=0, select bank0
  4577  078E  1489               	bsf	9,1	;volatile
  4578  078F                     l1896:
  4579                           
  4580                           ;LCD.c: 46:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  4581  078F  3003               	movlw	3
  4582  0790  00F4               	movwf	??_CMDs
  4583  0791                     u2127:
  4584  0791  0BF4               	decfsz	??_CMDs,f
  4585  0792  2F91               	goto	u2127
  4586  0793                     l1898:
  4587                           
  4588                           ;LCD.c: 47:     RE1 = 0;
  4589  0793  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0794  1303               	bcf	3,6	;RP1=0, select bank0
  4591  0795  1089               	bcf	9,1	;volatile
  4592  0796                     l1900:
  4593                           
  4594                           ;LCD.c: 48:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  4595  0796  3003               	movlw	3
  4596  0797  00F4               	movwf	??_CMDs
  4597  0798                     u2137:
  4598  0798  0BF4               	decfsz	??_CMDs,f
  4599  0799  2F98               	goto	u2137
  4600  079A                     l1902:
  4601                           
  4602                           ;LCD.c: 49:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4603  079A  3006               	movlw	6
  4604  079B  00F5               	movwf	??_CMDs+1
  4605  079C  3030               	movlw	48
  4606  079D  00F4               	movwf	??_CMDs
  4607  079E                     u2147:
  4608  079E  0BF4               	decfsz	??_CMDs,f
  4609  079F  2F9E               	goto	u2147
  4610  07A0  0BF5               	decfsz	??_CMDs+1,f
  4611  07A1  2F9E               	goto	u2147
  4612  07A2  0000               	nop
  4613  07A3                     l272:
  4614  07A3  0008               	return
  4615  07A4                     __end_of_CMDs:
  4616                           
  4617                           	psect	text31
  4618  05B2                     __ptext31:	
  4619 ;; *************** function _port *****************
  4620 ;; Defined at:
  4621 ;;		line 7 in file "LCD.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  a               1    wreg     unsigned char 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  a               1    3[COMMON] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4635 ;;      Params:         0       0       0       0       0
  4636 ;;      Locals:         1       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0
  4638 ;;      Totals:         1       0       0       0       0
  4639 ;;Total ram usage:        1 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    2
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_CMDs
  4646 ;;		_write_char
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           
  4651                           ;psect for function _port
  4652  05B2                     _port:
  4653                           
  4654                           ;incstack = 0
  4655                           ; Regs used in _port: [wreg]
  4656                           ;port@a stored from wreg
  4657  05B2  00F3               	movwf	port@a
  4658  05B3                     l1854:
  4659                           
  4660                           ;LCD.c: 8:     if(a & 1){
  4661  05B3  1C73               	btfss	port@a,0
  4662  05B4  2DB6               	goto	u1411
  4663  05B5  2DB7               	goto	u1410
  4664  05B6                     u1411:
  4665  05B6  2DBB               	goto	l253
  4666  05B7                     u1410:
  4667  05B7                     l1856:
  4668                           
  4669                           ;LCD.c: 9:         RD0=1;}
  4670  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  4671  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  4672  05B9  1408               	bsf	8,0	;volatile
  4673  05BA  2DBE               	goto	l254
  4674  05BB                     l253:	
  4675                           ;LCD.c: 10:     else{
  4676                           
  4677                           
  4678                           ;LCD.c: 11:         RD0=0;}
  4679  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  4680  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  4681  05BD  1008               	bcf	8,0	;volatile
  4682  05BE                     l254:
  4683                           
  4684                           ;LCD.c: 12:     if(a & 2){
  4685  05BE  1CF3               	btfss	port@a,1
  4686  05BF  2DC1               	goto	u1421
  4687  05C0  2DC2               	goto	u1420
  4688  05C1                     u1421:
  4689  05C1  2DC4               	goto	l255
  4690  05C2                     u1420:
  4691  05C2                     l1858:
  4692                           
  4693                           ;LCD.c: 13:         RD1=1;}
  4694  05C2  1488               	bsf	8,1	;volatile
  4695  05C3  2DC5               	goto	l256
  4696  05C4                     l255:	
  4697                           ;LCD.c: 14:     else{
  4698                           
  4699                           
  4700                           ;LCD.c: 15:         RD1=0;}
  4701  05C4  1088               	bcf	8,1	;volatile
  4702  05C5                     l256:
  4703                           
  4704                           ;LCD.c: 16:     if(a & 4){
  4705  05C5  1D73               	btfss	port@a,2
  4706  05C6  2DC8               	goto	u1431
  4707  05C7  2DC9               	goto	u1430
  4708  05C8                     u1431:
  4709  05C8  2DCB               	goto	l257
  4710  05C9                     u1430:
  4711  05C9                     l1860:
  4712                           
  4713                           ;LCD.c: 17:         RD2=1;}
  4714  05C9  1508               	bsf	8,2	;volatile
  4715  05CA  2DCC               	goto	l258
  4716  05CB                     l257:	
  4717                           ;LCD.c: 18:     else{
  4718                           
  4719                           
  4720                           ;LCD.c: 19:         RD2=0;}
  4721  05CB  1108               	bcf	8,2	;volatile
  4722  05CC                     l258:
  4723                           
  4724                           ;LCD.c: 20:     if(a & 8){
  4725  05CC  1DF3               	btfss	port@a,3
  4726  05CD  2DCF               	goto	u1441
  4727  05CE  2DD0               	goto	u1440
  4728  05CF                     u1441:
  4729  05CF  2DD2               	goto	l259
  4730  05D0                     u1440:
  4731  05D0                     l1862:
  4732                           
  4733                           ;LCD.c: 21:         RD3=1;}
  4734  05D0  1588               	bsf	8,3	;volatile
  4735  05D1  2DD3               	goto	l260
  4736  05D2                     l259:	
  4737                           ;LCD.c: 22:     else{
  4738                           
  4739                           
  4740                           ;LCD.c: 23:         RD3=0;}
  4741  05D2  1188               	bcf	8,3	;volatile
  4742  05D3                     l260:
  4743                           
  4744                           ;LCD.c: 24:     if(a & 16){
  4745  05D3  1E73               	btfss	port@a,4
  4746  05D4  2DD6               	goto	u1451
  4747  05D5  2DD7               	goto	u1450
  4748  05D6                     u1451:
  4749  05D6  2DD9               	goto	l261
  4750  05D7                     u1450:
  4751  05D7                     l1864:
  4752                           
  4753                           ;LCD.c: 25:         RD4=1;}
  4754  05D7  1608               	bsf	8,4	;volatile
  4755  05D8  2DDA               	goto	l262
  4756  05D9                     l261:	
  4757                           ;LCD.c: 26:     else{
  4758                           
  4759                           
  4760                           ;LCD.c: 27:         RD4=0;}
  4761  05D9  1208               	bcf	8,4	;volatile
  4762  05DA                     l262:
  4763                           
  4764                           ;LCD.c: 28:     if(a & 32){
  4765  05DA  1EF3               	btfss	port@a,5
  4766  05DB  2DDD               	goto	u1461
  4767  05DC  2DDE               	goto	u1460
  4768  05DD                     u1461:
  4769  05DD  2DE0               	goto	l263
  4770  05DE                     u1460:
  4771  05DE                     l1866:
  4772                           
  4773                           ;LCD.c: 29:         RD5=1;}
  4774  05DE  1688               	bsf	8,5	;volatile
  4775  05DF  2DE1               	goto	l264
  4776  05E0                     l263:	
  4777                           ;LCD.c: 30:     else{
  4778                           
  4779                           
  4780                           ;LCD.c: 31:         RD5=0;}
  4781  05E0  1288               	bcf	8,5	;volatile
  4782  05E1                     l264:
  4783                           
  4784                           ;LCD.c: 32:     if(a & 64){
  4785  05E1  1F73               	btfss	port@a,6
  4786  05E2  2DE4               	goto	u1471
  4787  05E3  2DE5               	goto	u1470
  4788  05E4                     u1471:
  4789  05E4  2DE7               	goto	l265
  4790  05E5                     u1470:
  4791  05E5                     l1868:
  4792                           
  4793                           ;LCD.c: 33:         RD6=1;}
  4794  05E5  1708               	bsf	8,6	;volatile
  4795  05E6  2DE8               	goto	l266
  4796  05E7                     l265:	
  4797                           ;LCD.c: 34:     else{
  4798                           
  4799                           
  4800                           ;LCD.c: 35:         RD6=0;}
  4801  05E7  1308               	bcf	8,6	;volatile
  4802  05E8                     l266:
  4803                           
  4804                           ;LCD.c: 36:     if(a & 128){
  4805  05E8  1FF3               	btfss	port@a,7
  4806  05E9  2DEB               	goto	u1481
  4807  05EA  2DEC               	goto	u1480
  4808  05EB                     u1481:
  4809  05EB  2DEE               	goto	l267
  4810  05EC                     u1480:
  4811  05EC                     l1870:
  4812                           
  4813                           ;LCD.c: 37:         RD7=1;}
  4814  05EC  1788               	bsf	8,7	;volatile
  4815  05ED  2DEF               	goto	l269
  4816  05EE                     l267:	
  4817                           ;LCD.c: 38:     else{
  4818                           
  4819                           
  4820                           ;LCD.c: 39:         RD7=0;}
  4821  05EE  1388               	bcf	8,7	;volatile
  4822  05EF                     l269:
  4823  05EF  0008               	return
  4824  05F0                     __end_of_port:
  4825                           
  4826                           	psect	text32
  4827  062C                     __ptext32:	
  4828 ;; *************** function _ISR *****************
  4829 ;; Defined at:
  4830 ;;		line 64 in file "main.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;		None
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, status,2, status,0, pclath, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4844 ;;      Params:         0       0       0       0       0
  4845 ;;      Locals:         0       0       0       0       0
  4846 ;;      Temps:          3       0       0       0       0
  4847 ;;      Totals:         3       0       0       0       0
  4848 ;;Total ram usage:        3 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; Hardware stack levels required when called:    1
  4851 ;; This function calls:
  4852 ;;		_Read_USART
  4853 ;; This function is called by:
  4854 ;;		Interrupt level 1
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           
  4859                           ;psect for function _ISR
  4860  062C                     _ISR:
  4861  062C                     i1l1296:
  4862                           
  4863                           ;main.c: 65:         Write_USART_String(BUFFER);
  4864  062C  1283               	bcf	3,5	;RP0=0, select bank0
  4865  062D  1303               	bcf	3,6	;RP1=0, select bank0
  4866  062E  1E8C               	btfss	12,5	;volatile
  4867  062F  2E31               	goto	u69_21
  4868  0630  2E32               	goto	u69_20
  4869  0631                     u69_21:
  4870  0631  2E61               	goto	i1l106
  4871  0632                     u69_20:
  4872  0632                     i1l1298:
  4873                           
  4874                           ;main.c: 66:         Write_USART(13);
  4875  0632  128C               	bcf	12,5	;volatile
  4876  0633                     i1l1300:
  4877                           
  4878                           ;main.c: 67:         Write_USART(10);
  4879  0633  120A  158A  2787  120A  118A  	fcall	_Read_USART
  4880  0638  00F0               	movwf	??_ISR
  4881  0639  0870               	movf	??_ISR,w
  4882  063A  00FA               	movwf	_lecUSART
  4883  063B                     i1l1302:
  4884                           
  4885                           ;main.c: 68: 
  4886  063B  302B               	movlw	43
  4887  063C  067A               	xorwf	_lecUSART,w
  4888  063D  1D03               	btfss	3,2
  4889  063E  2E40               	goto	u70_21
  4890  063F  2E41               	goto	u70_20
  4891  0640                     u70_21:
  4892  0640  2E45               	goto	i1l1306
  4893  0641                     u70_20:
  4894  0641                     i1l1304:
  4895                           
  4896                           ;main.c: 69:         _delay((unsigned long)((500)*(8000000/4000.0)));
  4897  0641  1283               	bcf	3,5	;RP0=0, select bank0
  4898  0642  1303               	bcf	3,6	;RP1=0, select bank0
  4899  0643  1406               	bsf	6,0	;volatile
  4900                           
  4901                           ;main.c: 70:     }
  4902  0644  2E4E               	goto	i1l1310
  4903  0645                     i1l1306:
  4904  0645  302D               	movlw	45
  4905  0646  067A               	xorwf	_lecUSART,w
  4906  0647  1D03               	btfss	3,2
  4907  0648  2E4A               	goto	u71_21
  4908  0649  2E4B               	goto	u71_20
  4909  064A                     u71_21:
  4910  064A  2E4E               	goto	i1l1310
  4911  064B                     u71_20:
  4912  064B                     i1l1308:
  4913                           
  4914                           ;main.c: 72: uint8_t bcd_a_dec (uint8_t valor){
  4915  064B  1283               	bcf	3,5	;RP0=0, select bank0
  4916  064C  1303               	bcf	3,6	;RP1=0, select bank0
  4917  064D  1006               	bcf	6,0	;volatile
  4918  064E                     i1l1310:
  4919                           
  4920                           ;main.c: 74: }
  4921  064E  302A               	movlw	42
  4922  064F  067A               	xorwf	_lecUSART,w
  4923  0650  1D03               	btfss	3,2
  4924  0651  2E53               	goto	u72_21
  4925  0652  2E54               	goto	u72_20
  4926  0653                     u72_21:
  4927  0653  2E58               	goto	i1l1314
  4928  0654                     u72_20:
  4929  0654                     i1l1312:
  4930                           
  4931                           ;main.c: 75: 
  4932  0654  1283               	bcf	3,5	;RP0=0, select bank0
  4933  0655  1303               	bcf	3,6	;RP1=0, select bank0
  4934  0656  1486               	bsf	6,1	;volatile
  4935                           
  4936                           ;main.c: 76: uint8_t dec_a_bcd (uint8_t valor){
  4937  0657  2E61               	goto	i1l106
  4938  0658                     i1l1314:
  4939  0658  302F               	movlw	47
  4940  0659  067A               	xorwf	_lecUSART,w
  4941  065A  1D03               	btfss	3,2
  4942  065B  2E5D               	goto	u73_21
  4943  065C  2E5E               	goto	u73_20
  4944  065D                     u73_21:
  4945  065D  2E61               	goto	i1l106
  4946  065E                     u73_20:
  4947  065E                     i1l1316:
  4948                           
  4949                           ;main.c: 78: }
  4950  065E  1283               	bcf	3,5	;RP0=0, select bank0
  4951  065F  1303               	bcf	3,6	;RP1=0, select bank0
  4952  0660  1086               	bcf	6,1	;volatile
  4953  0661                     i1l106:
  4954  0661  0872               	movf	??_ISR+2,w
  4955  0662  008A               	movwf	10
  4956  0663  0E71               	swapf	??_ISR+1,w
  4957  0664  0083               	movwf	3
  4958  0665  0EFE               	swapf	btemp,f
  4959  0666  0E7E               	swapf	btemp,w
  4960  0667  0009               	retfie
  4961  0668                     __end_of_ISR:
  4962                           
  4963                           	psect	intentry
  4964  0004                     __pintentry:	
  4965                           ;incstack = 0
  4966                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4967                           
  4968  0004                     interrupt_function:
  4969  007E                     saved_w	set	btemp
  4970  0004  00FE               	movwf	btemp
  4971  0005  0E03               	swapf	3,w
  4972  0006  00F1               	movwf	??_ISR+1
  4973  0007  080A               	movf	10,w
  4974  0008  00F2               	movwf	??_ISR+2
  4975  0009  120A  118A  2E2C   	ljmp	_ISR
  4976                           
  4977                           	psect	text33
  4978  0F87                     __ptext33:	
  4979 ;; *************** function _Read_USART *****************
  4980 ;; Defined at:
  4981 ;;		line 36 in file "USART.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      unsigned char 
  4988 ;; Registers used:
  4989 ;;		wreg
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4995 ;;      Params:         0       0       0       0       0
  4996 ;;      Locals:         0       0       0       0       0
  4997 ;;      Temps:          0       0       0       0       0
  4998 ;;      Totals:         0       0       0       0       0
  4999 ;;Total ram usage:        0 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_ISR
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           
  5009                           ;psect for function _Read_USART
  5010  0F87                     _Read_USART:
  5011  0F87                     i1l1142:	
  5012                           ;incstack = 0
  5013                           ; Regs used in _Read_USART: [wreg]
  5014                           
  5015  0F87                     i1l225:	
  5016                           ;USART.c: 37:   while(!RCIF);
  5017                           
  5018  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  5019  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  5020  0F89  1E8C               	btfss	12,5	;volatile
  5021  0F8A  2F8C               	goto	u60_21
  5022  0F8B  2F8D               	goto	u60_20
  5023  0F8C                     u60_21:
  5024  0F8C  2F87               	goto	i1l225
  5025  0F8D                     u60_20:
  5026  0F8D                     i1l1144:
  5027                           
  5028                           ;USART.c: 38:   return RCREG;
  5029  0F8D  081A               	movf	26,w	;volatile
  5030  0F8E                     i1l228:
  5031  0F8E  0008               	return
  5032  0F8F                     __end_of_Read_USART:
  5033  007E                     btemp	set	126	;btemp
  5034  007E                     wtemp0	set	126
  5035                           
  5036                           	psect	config
  5037                           
  5038                           ;Config register CONFIG1 @ 0x2007
  5039                           ;	Oscillator Selection bits
  5040                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5041                           ;	Watchdog Timer Enable bit
  5042                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5043                           ;	Power-up Timer Enable bit
  5044                           ;	PWRTE = OFF, PWRT disabled
  5045                           ;	RE3/MCLR pin function select bit
  5046                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5047                           ;	Code Protection bit
  5048                           ;	CP = OFF, Program memory code protection is disabled
  5049                           ;	Data Code Protection bit
  5050                           ;	CPD = OFF, Data memory code protection is disabled
  5051                           ;	Brown Out Reset Selection bits
  5052                           ;	BOREN = OFF, BOR disabled
  5053                           ;	Internal External Switchover bit
  5054                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5055                           ;	Fail-Safe Clock Monitor Enabled bit
  5056                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5057                           ;	Low Voltage Programming Enable bit
  5058                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5059                           ;	In-Circuit Debugger Mode bit
  5060                           ;	DEBUG = 0x1, unprogrammed default
  5061  2007                     	org	8199
  5062  2007  20D4               	dw	8404
  5063                           
  5064                           ;Config register CONFIG2 @ 0x2008
  5065                           ;	Brown-out Reset Selection bit
  5066                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5067                           ;	Flash Program Memory Self Write Enable bits
  5068                           ;	WRT = OFF, Write protection off
  5069  2008                     	org	8200
  5070  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    10
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    write_string@a	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _dec_a_bcd->___awdiv
    _dec_a_bcd->___awmod
    _sep_char_LCD->___awdiv
    _sep_char_LCD->___awmod
    _sep_char_LCD->_set_cursor
    _write_string->_write_char
    _write_char->_port
    _set_cursor->_CMDs
    _lec_tiempo->_bcd_a_dec
    _bcd_a_dec->___bmul
    _Write_USART_String->_Write_USART
    _LCD_init->_CMDs
    _LCD_clear->_CMDs
    _CMDs->_port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _set_tiempo->_I2C_Master_Write
    _dec_a_bcd->___awdiv
    _sep_char_LCD->___awdiv
    _lec_tiempo->_I2C_Master_Write
    _I2C_Master_Write->_dec_a_bcd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10513
                                             22 BANK0      3     3      0
                          _LCD_clear
                           _LCD_init
                        _Write_USART
                 _Write_USART_String
                           __baudios
                       _config_rcsta
                       _config_txsta
                         _lec_tiempo
                       _sep_char_LCD
                         _set_tiempo
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1427
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     467
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     467
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     371
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _set_tiempo                                           2     2      0    2856
                                             12 BANK0      2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _dec_a_bcd
 ---------------------------------------------------------------------------------
 (2) _dec_a_bcd                                            6     6      0    1980
                                              4 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _sep_char_LCD                                         7     7      0    3376
                                              4 BANK0      7     7      0
                            ___awdiv
                            ___awmod
                         _set_cursor
                         _write_char
                       _write_string
 ---------------------------------------------------------------------------------
 (2) _write_string                                         3     3      0     439
                                              0 BANK0      3     3      0
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           2     2      0     279
                                              4 COMMON     2     2      0
                               _port
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     536
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     953
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     965
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lec_tiempo                                           3     3      0    1668
                                             12 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _bcd_a_dec
 ---------------------------------------------------------------------------------
 (2) _bcd_a_dec                                            4     4      0     207
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     145
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     876
                                             10 BANK0      2     0      2
                    _I2C_Master_Wait
                          _dec_a_bcd (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     585
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     139
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     279
                                              0 BANK0      2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0     279
                               _CMDs
 ---------------------------------------------------------------------------------
 (3) _CMDs                                                 3     3      0     279
                                              4 COMMON     3     3      0
                               _port
 ---------------------------------------------------------------------------------
 (4) _port                                                 1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _CMDs
       _port
   _LCD_init
     _CMDs
       _port
   _Write_USART
   _Write_USART_String
     _Write_USART
   __baudios
   _config_rcsta
   _config_txsta
   _lec_tiempo
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
       _dec_a_bcd (ARG)
         ___awdiv
         ___awmod
     _bcd_a_dec
       ___bmul
   _sep_char_LCD
     ___awdiv
     ___awmod
     _set_cursor
       _CMDs
         _port
     _write_char
       _port
     _write_string
       _write_char
         _port
   _set_tiempo
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
       _dec_a_bcd (ARG)
         ___awdiv
         ___awmod
     _dec_a_bcd
       ___awdiv
       ___awmod
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      43       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      43      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 17:03:47 2021

                          pc 0002               ___bmul@product 0075                 ___awdiv@sign 0040  
                         fsr 0004         __size_of_Write_USART 000C                          l111 04D3  
                        l120 06D3                          l210 0F96                          l123 0369  
                        l204 07FF                          l132 0732                          l213 0FC6  
                        l117 07FA                          l222 07C1                          l126 0113  
                        l207 0FBA                          l216 0FD0                          l129 02C2  
                        l161 06A1                          l170 0FA7                          l403 01FD  
                        l260 05D3                          l164 0FDE                          l261 05D9  
                        l253 05BB                          l262 05DA                          l254 05BE  
                        l182 06F9                          l263 05E0                          l255 05C4  
                        l167 0FEA                          l183 06FC                          l264 05E1  
                        l256 05C5                          l272 07A3                          l184 0703  
                        l176 0FB0                          l265 05E7                          l257 05CB  
                        l433 0FFF                          l281 0781                          l266 05E8  
                        l258 05CC                          l267 05EE                          l259 05D2  
                        l275 0FDD                          l179 0FC4                          l603 056B  
                        l443 04AF                          l284 03DE                          l269 05EF  
                        l293 075B                          l287 07DE                          l590 0447  
                        l815 05B1                          l825 062B                          _GIE 005F  
                        _RD0 0040                          _RD1 0041                          _RD2 0042  
                        _RE0 0048                          _RD3 0043                          _RE1 0049  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          _ISR 062C                          u840 0FF1  
                        u841 0FF0                          u850 0FFE                          u851 0FFD  
                        _dia 0024                          _mes 0022                          _min 0078  
                        _seg 0028                          fsr0 0004                          indf 0000  
               ___awmod@sign 0040  __size_of_Write_USART_String 001E                         ?_ISR 0070  
                       l2000 0557                         l2010 07E0                         l2002 055D  
                       l2020 0FA4                         l2004 0562                         l2100 05AD  
                       l2030 06D4                         l2022 0FBB                         l2006 0567  
                       l2014 06A5                         l2110 071E                         l2040 06F5  
                       l2032 06D9                         l2024 0FC0                         l2120 0725  
                       l2112 071F                         l2104 0704                         l2130 0391  
                       l2122 036A                         l2042 06FD                         l2034 06E1  
                       l2018 0F9F                         l2026 0FA8                         l2050 0769  
                       l2114 0720                         l2106 071A                         l2210 018D  
                       l2140 03C6                         l2132 039E                         l2124 0374  
                       l2036 06EA                         l2028 0FAD                         l2052 0770  
                       l2060 0739                         l2116 0721                         l2108 071D  
                       l2220 01D3                         l2212 0193                         l2204 0167  
                       l2142 03CC                         l2134 03A4                         l2126 037A  
                       l2038 06EF                         l1430 0FF5                         l2150 001F  
                       l2054 0776                         l2046 075F                         l2062 0746  
                       l2070 066F                         l2118 0724                         l2222 01DA  
                       l2214 019A                         l2144 03D8                         l2136 03B0  
                       l2128 038A                         l1432 0FF7                         l1424 0FEC  
                       l2152 0104                         l2056 077B                         l2048 0764  
                       l2064 074E                         l2160 0289                         l2072 069E  
                       l2080 0570                         l2224 01DE                         l2216 019E  
                       l2208 0183                         l2240 04C9                         l2146 0FD1  
                       l2138 03B6                         l1434 0FFE                         l1426 0FED  
                       l2058 0736                         l2170 02B0                         l2162 0292  
                       l2154 01FE                         l2074 069F                         l2066 0668  
                       l2090 0588                         l2082 0576                         l2218 01A3  
                       l2226 01E7                         l2250 04F9                         l2242 04D8  
                       l1428 0FF1                         l2172 02B9                         l2164 0298  
                       l2156 027A                         l2148 02C3                         l2076 06A0  
                       l2068 066C                         l2092 0599                         l2084 0579  
                       l2228 01F9                         l2180 0129                         l2252 04FF  
                       l2244 04DD                         l2236 04B0                         l1710 0FB1  
                       l2166 02A1                         l2158 0280                         l2094 059F  
                       l2086 0580                         l2078 056C                         l2190 0154  
                       l2182 012E                         l2174 0117                         l2246 04ED  
                       l2238 04C4                         l1544 0FC6                         l1712 0F8F  
                       l2168 02AA                         l2096 05A0                         l2088 0584  
                       l2192 0158                         l2176 011C                         l2248 04F3  
                       l1546 0FCC                         l1810 07B6                         l1714 0F95  
                       l2098 05A7                         l1650 0606                         l1642 05F0  
                       l2194 015C                         l2186 012F                         l2178 0122  
                       l1900 0796                         l1804 07A5                         l1708 07FB  
                       l1652 060A                         l1644 05F8                         l1660 0627  
                       l2196 0160                         l2188 014C                         l1902 079A  
                       l1806 07A7                         l1910 046A                         l1654 0614  
                       l1646 05FB                         l2198 0165                         l2278 0141  
                       l1808 07B2                         l1920 0498                         l1912 046E  
                       l1904 0448                         l1656 061A                         l1648 0602  
                       l1930 03E2                         l1922 04A1                         l1914 0477  
                       l1906 045A                         l1658 0621                         l1860 05C9  
                       l1940 03F6                         l1932 03E6                         l1916 0489  
                       l1908 045D                         l1924 04A7                         l1870 05EC  
                       l1862 05D0                         l1854 05B3                         l1950 040C  
                       l1942 03FA                         l1934 03EB                         l1918 0497  
                       l1864 05D7                         l1856 05B7                         l1960 042C  
                       l1952 0410                         l1944 03FC                         l1936 03ED  
                       l1928 03DF                         l1880 07D3                         l1872 07C3  
                       l1866 05DE                         l1858 05C2                         l1890 0783  
                       l1962 0433                         l1954 0414                         l1946 0402  
                       l1938 03F1                         l1882 07D6                         l1874 07C6  
                       l1868 05E5                         l1892 0786                         l1956 0425  
                       l1948 0405                         l1964 0439                         l1980 051F  
                       l1972 0511                         l1884 07DA                         l1876 07CC  
                       l1894 078C                         l1886 0FDE                         l1966 043E  
                       l1958 042B                         l1990 0538                         l1982 0523  
                       l1974 0514                         l1878 07CF                         l1896 078F  
                       l1888 0FE4                         l1968 0443                         l1992 053C  
                       l1984 0528                         l1976 0518                         l1898 0793  
                       l1994 0540                         l1986 052E                         l1978 051D  
                       l1996 054A                         l1988 0531                         l1998 0550  
                       STR_1 0818                         STR_2 0810                         u1120 0FCC  
                       u1121 0FCB                         u1300 0614                         u1301 0613  
                       u2007 07D8                         _CMDs 0782                         u1400 07C1  
                       u1320 0627                         u1401 07C0                         u2017 07DC  
                       u1321 0626                         u1305 0610                         u1410 05B7  
                       u1411 05B6                         u2107 03D0                         u2027 010C  
                       u1315 061B                         u1420 05C2                         u1500 0FEA  
                       u1421 05C1                         u2117 03DC                         u2037 0370  
                       u1501 0FE9                         u1430 05C9                         u1510 045A  
                       u1270 05F8                         u1431 05C8                         u2127 0791  
                       u2047 0380                         u1511 0459                         u1271 05F7  
                       u1440 05D0                         u1600 0402                         u1441 05CF  
                       u2137 0798                         u2057 038E                         u1601 0401  
                       u1450 05D7                         u1530 046E                         u1290 060A  
                       u1451 05D6                         u2147 079E                         u2067 039B  
                       u1531 046D                         u1291 0609                         u1460 05DE  
                       u1620 0414                         u1700 052E                         u1461 05DD  
                       u2077 03A8                         u1621 0413                         u1701 052D  
                       u1525 045F                         u1285 05FC                         u1470 05E5  
                       u1550 0489                         u1471 05E4                         u2087 03B4  
                       u1615 0406                         u1551 0488                         u1480 05EC  
                       u1640 0425                         u1720 0540                         u1800 0764  
                       u1481 05EB                         u2097 03C2                         u1641 0424  
                       u1721 053F                         u1801 0763                         u1545 0470  
                       u1490 0FE4                         u1730 054A                         u1810 0776  
                       u1570 04A7                         u1491 0FE3                         u1635 0415  
                       u1731 0549                         u1715 0532                         u1811 0775  
                       u1571 04A6                         u1555 0485                         u1660 0439  
                       u1580 03E6                         u1820 075B                         u1900 05AD  
                       u1661 0438                         u1645 0421                         u1581 03E5  
                       u1821 075A                         u1565 0499                         u1901 05AC  
                       u1670 043E                         u1590 03F1                         u1750 055D  
                       u1830 067F                         u1910 0122                         u1671 043D  
                       u1655 042D                         u1591 03F0                         u1751 055C  
                       u1735 0546                         u1911 0121                         u1760 0562  
                       u1680 0518                         u1840 0576                         u1920 015C  
                       u1761 0561                         u1745 0551                         u1681 0517  
                       u1841 0575                         u1921 015B                         u1690 0523  
                       u1930 0182                         u1691 0522                         u1835 067A  
                       u1931 0181                         u1860 0588                         u1940 018D  
                       u1861 0587                         u1941 018C                         u1790 06F5  
                       u1950 0193                         u1791 06F4                         u1775 07EC  
                       u1855 057A                         u1951 0192                         u1935 017E  
                       u1880 0599                         u1960 01E7                         u1785 06BA  
                       u1881 0598                         u1961 01E6                         u1970 01F9  
                       u1875 0589                         u1971 01F8                         _PEIE 005E  
                       u1885 0595                         u1895 05A1                         u1987 0507  
                       _RCIF 0065                         u1997 07D1                         _TRMT 04C1  
                       _main 04B0                         _hora 0026                         _year 0020  
                       _port 05B2                         btemp 007E                         start 000C  
             ??_config_rcsta 0073           __size_of_LCD_clear 000D               ??_config_txsta 0073  
          ___bmul@multiplier 0076                        ??_ISR 0070                        CMDs@a 0076  
                      ?_CMDs 0070             ?_I2C_Master_Init 004C             ?_I2C_Master_Read 0073  
           ?_I2C_Master_Wait 0070             ?_I2C_Master_Stop 0070            sep_char_LCD@min_0 0046  
          sep_char_LCD@min_1 0047             __end_of_LCD_init 03DF            sep_char_LCD@seg_0 0044  
          sep_char_LCD@seg_1 0045                        ?_main 0070              __end_of___awdiv 0448  
            __end_of___awmod 056C                        ?_port 0070                        _ANSEL 0188  
            __end_of___lldiv 04B0              ___awdiv@divisor 0073                        _IRCF0 047C  
                      _IRCF1 047D                        _IRCF2 047E              __end_of___lwdiv 05B2  
                      i1l106 0661                write_string@a 003F                        i1l225 0F87  
              write_string@i 0040                        i1l228 0F8E              __end_of___lwmod 062C  
            ___awdiv@counter 003F                        _RCREG 001A                        _SPBRG 0099  
                      _PORTB 0006                        _PORTD 0008                        _PORTE 0009  
                      u60_20 0F8D                        u60_21 0F8C                        u70_20 0641  
                      u70_21 0640                        u71_20 064B                        u71_21 064A  
                      u72_20 0654                        u72_21 0653                        u73_20 065E  
                      u73_21 065D                        _TRISB 0086                        _TRISD 0088  
                      _SSPIE 0463                        _TRISE 0089                        _SSPIF 0063  
                      u69_20 0632                        u69_21 0631                        _TXREG 0019  
            __end_of_dpowers 0810                        _setup 0704                        pclath 000A  
                      port@a 0073                        status 0003                        wtemp0 007E  
            __end_of_sprintf 01FE                 __end_of_CMDs 07A4              __initialization 000F  
                 _Read_USART 0F87                 __end_of_main 0511                 __end_of_port 05F0  
                     ??_CMDs 0074                       ??_main 0055                       ??_port 0073  
      __size_of_write_string 0029            ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0049  
          __end_of_LCD_clear 0FDE           sep_char_LCD@hora_0 0048           sep_char_LCD@hora_1 0049  
         ??_I2C_Master_Start 0073           ??_I2C_Master_Write 0078             ___awdiv@dividend 0075  
                     ?_setup 0070                       _ANSELH 0189             __end_of__baudios 0800  
                     _BUFFER 002B                       i1l1300 0633                       i1l1142 0F87  
                     i1l1310 064E                       i1l1302 063B                       i1l1144 0F8D  
                     i1l1312 0654                       i1l1304 0641                       i1l1314 0658  
                     i1l1306 0645                       i1l1316 065E                       i1l1308 064B  
                     i1l1296 062C                       i1l1298 0632                       _SSPADD 0093  
                     _TRISC3 043B                       _TRISC4 043C                       _SSPCON 0014  
                     _SSPBUF 0013                       ___bmul 0FEB                 _write_string 0733  
                  ??___awdiv 0077                    ??___awmod 0077                    ??___lldiv 0073  
                  ??___lwdiv 0077                    ??___lwmod 0046             ___awdiv@quotient 0041  
            ___awmod@divisor 0073               bcd_a_dec@valor 0077              ___awmod@counter 003F  
       __end_of_config_rcsta 0F97                       saved_w 007E         __end_of_config_txsta 0FBB  
                  ??_sprintf 004B      __end_of__initialization 001B           __size_of_bcd_a_dec 001C  
                  ?_LCD_init 0070          ___bmul@multiplicand 0073           __size_of_dec_a_bcd 0032  
                ?_Read_USART 0070               __pcstackCOMMON 0070                __end_of_setup 0733  
                    ??_setup 0078                 Write_USART@a 0073                   __pbssBANK0 0020  
                 ??_LCD_init 003F                   __pmaintext 04B0                      ?___bmul 0073  
              ?_sep_char_LCD 0070                ??_Write_USART 0073                   __pintentry 0004  
                  ?__baudios 0070            __end_of_bcd_a_dec 07FB   __end_of_Write_USART_String 07C2  
          __end_of_dec_a_bcd 06D4          __size_of_Read_USART 0008                      _SSPCON2 0091  
                    _SSPSTAT 0094                   _lec_tiempo 001F                   __stringtab 0800  
             ??_sep_char_LCD 0043              __size_of___bmul 0015                      ___awdiv 03DF  
                    ___awmod 0511                      ___lldiv 0448                      ___lwdiv 056C  
                    ___lwmod 05F0        __size_of_config_rcsta 0008                   ??__baudios 0073  
                    __ptext1 0114                      __ptext2 05F0        __size_of_config_txsta 000A  
                    __ptext3 056C                      __ptext4 0704                      __ptext5 0668  
                    __ptext6 0448                      __ptext7 02C3                      __ptext8 06A2  
                    __ptext9 01FE                 __size_of_ISR 003C                      _dpowers 0806  
        __end_of_Write_USART 0FD1             ___awmod@dividend 0075     __size_of_I2C_Master_Init 003A  
   __size_of_I2C_Master_Read 0030     __size_of_I2C_Master_Wait 000D     __size_of_I2C_Master_Stop 0009  
                set_cursor@a 0040                  set_cursor@b 0077                  set_cursor@x 0041  
                    _sprintf 0114                      clrloop0 0F98                    _LCD_clear 0FD1  
       end_of_initialization 001B    __size_of_I2C_Master_Start 0009    __size_of_I2C_Master_Write 000A  
            ___lldiv@divisor 003F              ___lldiv@counter 004B                 _config_rcsta 0F8F  
                 _set_cursor 075C                 _config_txsta 0FB1                    _RCSTAbits 0018  
           I2C_Master_Init@c 004C             I2C_Master_Read@a 0073                   _set_tiempo 02C3  
                  _PORTBbits 0006                    _TRISCbits 0087                  ?_lec_tiempo 0070  
                 ?_LCD_clear 0070                    _TXSTAbits 0098            __size_of_LCD_init 0075  
               ??_Read_USART 0070               __end_of___bmul 1000                  _Write_USART 0FC5  
                 _write_char 07C2          start_initialization 000F                  __end_of_ISR 0668  
       __end_of_sep_char_LCD 02C3           __end_of_Read_USART 0F8F            ??_I2C_Master_Init 0074  
          ??_I2C_Master_Read 0075            ??_I2C_Master_Wait 0073            ??_I2C_Master_Stop 0073  
                ?_set_cursor 0077                     ??___bmul 0074                  ?_set_tiempo 0070  
        __size_of_lec_tiempo 00F5            __size_of__baudios 0005                  __pbssCOMMON 0078  
                  ___latbits 0002                __pcstackBANK0 003F                    _bcd_a_dec 07DF  
                ??_LCD_clear 0077                    _dec_a_bcd 06A2                  sprintf@flag 004F  
         _Write_USART_String 07A4                  sprintf@prec 0050             _I2C_Master_Start 0F9F  
           _I2C_Master_Write 0FBB             ___lwdiv@dividend 0075          ?_Write_USART_String 0070  
                   ?___awdiv 0073                     ?___awmod 0073                     ?___lldiv 003F  
                   ?___lwdiv 0073                     ?___lwmod 0042                  ?_write_char 0070  
                  __pstrings 0800         ??_Write_USART_String 0074                   ?_bcd_a_dec 0070  
           ___lwdiv@quotient 0040          __size_of_set_cursor 0026                     ?_sprintf 0048  
        __size_of_set_tiempo 00A7               __size_of_setup 002F                   ?_dec_a_bcd 0070  
          interrupt_function 0004                     _LCD_init 036A                    clear_ram0 0F97  
                   _PIE1bits 008C                     _PIR1bits 000C                ?_write_string 0070  
                __stringbase 0805                  write_char@a 0075        __size_of_sep_char_LCD 00C5  
        I2C_Master_Read@temp 003F                 ??_lec_tiempo 004B          __size_of_write_char 001D  
             ??_write_string 0076                 _sep_char_LCD 01FE                 ?_Write_USART 0070  
           __size_of___awdiv 0069             __size_of___awmod 005B             __size_of___lldiv 0068  
           __size_of___lwdiv 0046             __size_of___lwmod 003C                     __baudios 07FB  
         __end_of_lec_tiempo 0114           __end_of__stringtab 0806                   sprintf@val 0051  
            _I2C_Master_Init 0668              _I2C_Master_Read 06D4              _I2C_Master_Wait 0FDE  
            _I2C_Master_Stop 0FA8                     _lecUSART 007A              ___lwdiv@divisor 0073  
                ??_bcd_a_dec 003F              ___lwdiv@counter 003F                     __ptext10 0733  
                   __ptext11 07C2                     __ptext20 0F9F                     __ptext12 075C  
                   __ptext21 06D4                     __ptext13 0511                     __ptext30 0782  
                   __ptext22 0FDE                     __ptext14 03DF                     __ptext31 05B2  
                   __ptext23 0FB1                     __ptext15 001F                     __ptext32 062C  
                   __ptext24 0F8F                     __ptext16 07DF                     __ptext33 0F87  
                   __ptext25 07FB                     __ptext17 0FEB                     __ptext26 07A4  
                   __ptext18 0FBB                     __ptext27 0FC5                     __ptext19 0FA8  
                   __ptext28 036A                     __ptext29 0FD1             __size_of_sprintf 00EA  
              __size_of_CMDs 0022                  ??_dec_a_bcd 0043                __size_of_main 0061  
              __size_of_port 003E                     _segundos 002A                 ??_set_cursor 003F  
               ??_set_tiempo 004B     __end_of_I2C_Master_Start 0FA8     __end_of_I2C_Master_Write 0FC5  
                 _INTCONbits 000B          Write_USART_String@a 0075          Write_USART_String@i 0076  
         __end_of_set_cursor 0782                     intlevel1 0000           __end_of_set_tiempo 036A  
                  sprintf@ap 004E                    sprintf@sp 0053             ___lwmod@dividend 0044  
           ___lldiv@dividend 0043                    stringcode 0800      __end_of_I2C_Master_Init 06A2  
    __end_of_I2C_Master_Read 0704      __end_of_I2C_Master_Wait 0FEB                 ??_write_char 0074  
    __end_of_I2C_Master_Stop 0FB1               dec_a_bcd@valor 0048                     sprintf@c 0054  
                   sprintf@f 0048             ___lldiv@quotient 0047            I2C_Master_Write@d 0049  
            ___lwmod@divisor 0042              ___lwmod@counter 0047                     stringdir 0800  
                   stringtab 0800                  _SSPCON2bits 0091         __end_of_write_string 075C  
         __end_of_write_char 07DF                ?_config_rcsta 0070                ?_config_txsta 0070  
